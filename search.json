[{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"General introduction","text":"perspective metabolites continuation central dogma biology, metabolomics provides closest link many phenotypes interest. makes metabolomics research promising teasing apart complexities living systems, attracting many new practitioners. notame R package developed parallel associated protocol article general guideline data analysis untargeted metabolomics studies (Klåvus et al. 2020). main outcome identifying interesting features laborious downstream steps relating biological context, metabolite identification pathway analysis, fall outside purview notame. Bioconductor packages complementary functionality Bioconductor include pmp, phenomis qmtools; notame brings partially overlapping new functionality table. also Bioconductor packages preprocessing, metabolite identification pathway analysis. Together, notame, Bioconductor’s dependency management Bioconductor functionality allow quality, reproducible metabolomics research.","code":""},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"General introduction","text":"install notame, install BiocManager first, installed. Afterwards use install function BiocManager.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"notame\") library(notame)"},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"how-it-works","dir":"Articles","previous_headings":"","what":"How it works","title":"General introduction","text":"SummarizedExperiment primary data structure package, MetaboSet still supported old users’ preference. One can use single peak table throughout analysis MetaboSet also use multiple peak tables SummarizedExperiment, using assay.type name arguments. functionality notame can broadly divided tabular data preprocessing feature selection, excluding sample preprocessing functionality related biological context (Figure 1). Tabular data processing involves reducing unwanted variation data preparation dependent downstream methods. many visualizations used inspecting process also serve exploratory data analysis. Feature selection aims select subset interesting features across study groups laborious steps relating biological context. Please see documentation overview functionality (?notame), Project Example vignette usage associated protocol article information (Klåvus et al. 2020). Overview untargeted LC-MS metabolomics data analysis.","code":""},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"input","dir":"Articles","previous_headings":"How it works","what":"Input","title":"General introduction","text":"Data can read read_from_excel(), includes checks preparation metadata. accommodate typical output peak-picking software Agilent’s MassHunter MS-DIAL, output transformed spreadsheet read_from_excel(). Alternatively, data R can wrangled passed construct_metabosets() SummarizedExperiment() constructor. Structure spreadsheet read_from_excel(). obligatory fields read_from_excel(), including “Injection_order” sample information, “Mass” “Average mz” feature data “Retention time”, “RetentionTime”, “Average rt(min)” “rt” feature information (case sensitive). optional fields, including “Sample_ID” “QC” sample data well “Feature_ID” feature data, automatically generated unavailable. One fields feature data can used split data parts, usually LC column x ionization mode, supplied arguments split_by parameter. file contains one mode, specify name mode, e.g. “HILIC_pos” name parameter.","code":""},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"tabular-data-preprocessing","dir":"Articles","previous_headings":"How it works","what":"Tabular data preprocessing","title":"General introduction","text":"main functions return modified objects largely based pooled QC samples (Broadhurst et al. 2018). Tabular data preprocessing generally performed separately mode. visualizations used monitor tabular data preprocessing saved file default, can also returned ggplot objects. visualizations() wrapper can used saving visualizations different stages processing.","code":""},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"feature-selection","dir":"Articles","previous_headings":"How it works","what":"Feature selection","title":"General introduction","text":"Univariate statistics functions return data.frame, manually filtered inclusion feature data instance. Supervised learning functions return various data structures. Comprehensive results visualizations returned ggplot objects can saved file using save_plot(). Interesting features can inspected feature-wise visualizations saved file default can returned list.","code":""},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"utilities","dir":"Articles","previous_headings":"How it works","what":"Utilities","title":"General introduction","text":"General utilities include combined_data() representing instance data.frame suitable plotting various functions data wrangling. keeping track analysis, notame offers logging system operated using init_log(), log_text() finish_log(). notame also keeps track external packages used, offering references . see log list references, use citations(). Parallellization used many feature-wise calculations provided BiocParallel package. BiocParallel defaults parallel backend. small-scale testing Windows, can quicker use serial execution:","code":"BiocParallel::register(BiocParallel::SerialParam())"},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"authors-acknowledgements","dir":"Articles","previous_headings":"","what":"Authors & Acknowledgements","title":"General introduction","text":"first version notame written Anton Klåvus master’s thesis Bioinformatics Aalto university (published former name Anton Mattsson), working University Eastern Finland Afekta Technologies. package inspired analysis scripts written Jussi Paananen Oskari Timonen. algorithm clustering molecular features originating compound based MATLAB code written David Broadhurst, Professor Data Science & Biostatistics School Science, director Centre Integrative Metabolomics & Computational Biology Edith Covan University. find bugs things fix, please submit issue GitHub! contributions package always welcome!","code":""},{"path":"https://hanhineva-lab.github.io/notame/articles/introduction.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"General introduction","text":"","code":"## R version 4.5.1 (2025-06-13) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BiocStyle_2.36.0 ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37       desc_1.4.3          R6_2.6.1            ##  [4] bookdown_0.43       fastmap_1.2.0       xfun_0.52           ##  [7] cachem_1.1.0        knitr_1.50          htmltools_0.5.8.1   ## [10] png_0.1-8           rmarkdown_2.29      lifecycle_1.0.4     ## [13] cli_3.6.5           sass_0.4.10         pkgdown_2.1.3       ## [16] textshaping_1.0.1   jquerylib_0.1.4     systemfonts_1.2.3   ## [19] compiler_4.5.1      tools_4.5.1         ragg_1.4.0          ## [22] evaluate_1.0.4      bslib_0.9.0         yaml_2.3.10         ## [25] BiocManager_1.30.26 jsonlite_2.0.0      rlang_1.1.6         ## [28] fs_1.6.6            htmlwidgets_1.6.4"},{"path":[]},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"set-up-path-and-logging","dir":"Articles","previous_headings":"Project setup","what":"Set up path and logging","title":"Project example","text":"Let’s set path start logging project. Many functions package log information finished. helps monitoring analysis process case something goes wrong reviewing results later. log also print console, although ’ll exclude console output rest document brevity.","code":"library(notame) ppath <- tempdir() init_log(log_file = file.path(ppath, \"log.txt\")) ## INFO [2025-06-23 22:38:51] Starting logging"},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"read-data","dir":"Articles","previous_headings":"Project setup","what":"Read data","title":"Project example","text":"data mock data two balanced groups two balanced time points. time points also correspond two batches. 50 samples ten regularly interspersed QC samples 80 features divided four analytical modes. function read_from_excel() returns list holding three parts data: exprs: feature abundances across samples pheno_data: sample information feature_data: feature information","code":"data <- read_from_excel(   file = system.file(\"extdata\", \"example_set.xlsx\", package = \"notame\"),    sheet = 1, corner_row = 11, corner_column = \"H\",    split_by = c(\"Column\", \"Ion_mode\")) names(data) ## [1] \"exprs\"        \"pheno_data\"   \"feature_data\" sapply(data, class) ## $exprs ## [1] \"matrix\" \"array\"  ##  ## $pheno_data ## [1] \"data.frame\" ##  ## $feature_data ## [1] \"data.frame\" sapply(data, dim) ##      exprs pheno_data feature_data ## [1,]    80         50           80 ## [2,]    50         11            8"},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"construct-summarizedexperiment-object","dir":"Articles","previous_headings":"Project setup","what":"Construct SummarizedExperiment object","title":"Project example","text":"three parts can used construct SummarizedExperiment using native SummarizedExperiment constructor MetaboSet objects using construct_metabosets(). example data contains four analytical modes, separate using fix_object(), also conveniently checks object compatibility notame. Now list objects, one per mode (LC column x ionization mode) whatever split supplied read_from_excel().","code":"data <- SummarizedExperiment(assays = data$exprs,                               rowData = data$feature_data,                              colData = data$pheno_data)                               modes <- fix_object(data, split_data = TRUE) names(modes) ## [1] \"HILIC_neg\" \"HILIC_pos\" \"RP_neg\"    \"RP_pos\" sapply(modes, class) ##              HILIC_neg              HILIC_pos                 RP_neg  ## \"SummarizedExperiment\" \"SummarizedExperiment\" \"SummarizedExperiment\"  ##                 RP_pos  ## \"SummarizedExperiment\""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"preprocessing-by-mode","dir":"Articles","previous_headings":"Tabular data preprocessing","what":"Preprocessing by mode","title":"Project example","text":"Tabular data preprocessing performed complete dataset way reducing unwanted variation data preparation dependent downstream methods. Steps performed separately mode include marking missing values NA, flagging features low detection rate (Broadhurst et al. 2018), drift correction (Kirwan et al. 2013), flagging low-quality features (Broadhurst et al. 2018). Visualizations drawn monitor process explore data globally. visualizations() wrapper include feature-wise plots may feasible inspect stage analysis. example, drift correction visualizations best drawn subset interesting features feature selection. Feature-wise flagging information, quality metrics, brief drift correction notes included feature information steps. correct_drift() function performs drift correction features sufficient detection QC samples default. case check_quality = TRUE, correct_drift() retains corrected values features improved quality metrics drift correction, along note documenting action feature information.","code":"# Initialize empty list for processed objects processed <- list() for (i in seq_along(modes)) {   name <- names(modes)[i]   mode <- modes[[i]]   # Set all zero abundances to NA   mode <- mark_nas(mode, value = 0)   # Flag features with low detection rate   mode <- flag_detection(mode, group = \"Group\")   # Visualize data before drift correction   visualizations(mode, prefix = paste0(ppath, \"figures/\", name, \"_ORIG\"),                  perplexity = 5, group = \"Group\", time = \"Time\",                   id = \"Subject_ID\", color = \"Group\")   # Correct drift   corrected <- correct_drift(mode)   # Visualize data after drift correction   visualizations(corrected, prefix = paste0(ppath, \"figures/\", name, \"_DRIFT\"),                  perplexity = 5, group = \"Group\", time = \"Time\",                   id = \"Subject_ID\", color = \"Group\")   # Flag low-quality features   corrected <- corrected %>% assess_quality() %>% flag_quality()   # Visualize data after removal of low-quality features   visualizations(corrected, prefix = paste0(ppath, \"figures/\", name, \"_CLEAN\"),                  perplexity = 5, group = \"Group\", time = \"Time\",                  id = \"Subject_ID\", color = \"Group\")   # Save result of iteration   processed[[i]] <- corrected } rowData(processed[[1]])$DC_note ##  [1] \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" ##  [5] \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" ##  [9] \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" ## [13] \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" ## [17] \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\" \"Drift_corrected\""},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"preprocessing-for-the-complete-dataset","dir":"Articles","previous_headings":"Tabular data preprocessing","what":"Preprocessing for the complete dataset","title":"Project example","text":"Next, time merge modes together visualize complete dataset. , QC samples can () removed, longer needed, dataset visualized anew. missing values data, need imputed. Let’s use random forest imputation impute values visualize dataset one last time statistical analysis. Seed number set random forest imputation guarantee reproducibility results. default, imputation procedure operates good quality features, .e. flagged. use flagged features statistical analysis, imputed well. can achieved second round imputation, now features included. two-step imputation makes sure low-quality features don’t affect imputation quality features. Imputation also performed separately mode reduce execution time, especially amounts features still allows good imputation results. good idea save merged processed data, experimenting different statistical analyses becomes easier.","code":"merged <- merge_objects(processed) visualizations(merged, prefix = paste0(ppath, \"figures/_FULL\"),                group = \"Group\", time = \"Time\",                id = \"Subject_ID\", color = \"Group\") merged_no_qc <- drop_qcs(merged) visualizations(merged_no_qc, prefix = paste0(ppath, \"figures/FULL_NO_QC\"),                group = \"Group\", time = \"Time\",                id = \"Subject_ID\", color = \"Group\") set.seed(2024) imputed <- impute_rf(merged_no_qc) visualizations(imputed, prefix = paste0(ppath, \"figures/FULL_IMPUTED\"),                group = \"Group\", time = \"Time\",                id = \"Subject_ID\", color = \"Group\") base <- impute_rf(imputed, all_features = TRUE) save(base, file = paste0(ppath, \"full_data.RData\"))"},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"univariate-analysis","dir":"Articles","previous_headings":"Feature selection","what":"Univariate analysis","title":"Project example","text":"First, ’ll use linear model evaluate features terms probability obtaining observed abundances given null hypothesis, namely difference feature abundance across study groups.","code":"lm_results <- perform_lm(log(base), formula_char = \"Feature ~ Group\") base <- join_rowData(base, lm_results)"},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"supervised-learning","dir":"Articles","previous_headings":"Feature selection","what":"Supervised learning","title":"Project example","text":"Univariate hypothesis testing take account multivariate, interconnected nature data. Parametric tests one also make assumptions data may undermine reliability results, likely violated untargeted LC-MS datasets. Let’s use supervised learning see features best predict group membership get another perspective. random forest model doesn’t require preprocessing makes minimal assumptions. Next, univariate supervised rankings features combined final ranking. final ranking combine qualities univariate analysis supervised learning. final results practical inferential; helps limiting number features undergoing labour- intensive scrutiny biological meaning, example identification pathway analysis. may ultimately guide efforts productive directions. example, biomarker discovery, results may prompt validation using targeted LC-MS. concludes project example. last thing write results Excel file finish logging. Thanks!","code":"rf_results <- fit_rf(base, y = \"Group\")  rf_importance <- importance_rf(rf_results)  base <- join_rowData(base,    rf_importance[, c(\"Feature_ID\", \"MeanDecreaseAccuracy\")]) write_to_excel(base, file = paste0(ppath, \"results.xlsx\")) finish_log()"},{"path":"https://hanhineva-lab.github.io/notame/articles/project_example.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Project example","text":"","code":"## R version 4.5.1 (2025-06-13) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] notame_0.99.2               SummarizedExperiment_1.38.1 ##  [3] GenomicRanges_1.60.0        GenomeInfoDb_1.44.0         ##  [5] IRanges_2.42.0              S4Vectors_0.46.0            ##  [7] MatrixGenerics_1.20.0       matrixStats_1.5.0           ##  [9] magrittr_2.0.3              ggplot2_3.5.2               ## [11] Biobase_2.68.0              BiocGenerics_0.54.0         ## [13] generics_0.1.4              BiocStyle_2.36.0            ##  ## loaded via a namespace (and not attached): ##  [1] tidyselect_1.2.1        viridisLite_0.4.2       dplyr_1.1.4             ##  [4] farver_2.1.2            fastmap_1.2.0           digest_0.6.37           ##  [7] lifecycle_1.0.4         compiler_4.5.1          rngtools_1.5.2          ## [10] rlang_1.1.6             sass_0.4.10             tools_4.5.1             ## [13] yaml_2.3.10             knitr_1.50              lambda.r_1.2.4          ## [16] doRNG_1.8.6.2           S4Arrays_1.8.1          labeling_0.4.3          ## [19] htmlwidgets_1.6.4       DelayedArray_0.34.1     RColorBrewer_1.1-3      ## [22] abind_1.4-8             BiocParallel_1.42.1     Rtsne_0.17              ## [25] withr_3.0.2             purrr_1.0.4             itertools_0.1-3         ## [28] desc_1.4.3              grid_4.5.1              scales_1.4.0            ## [31] iterators_1.0.14        MASS_7.3-65             cli_3.6.5               ## [34] rmarkdown_2.29          crayon_1.5.3            ragg_1.4.0              ## [37] httr_1.4.7              cachem_1.1.0            parallel_4.5.1          ## [40] formatR_1.14            BiocManager_1.30.26     XVector_0.48.0          ## [43] vctrs_0.6.5             Matrix_1.7-3            jsonlite_2.0.0          ## [46] bookdown_0.43           systemfonts_1.2.3       foreach_1.5.2           ## [49] jquerylib_0.1.4         tidyr_1.3.1             ggdendro_0.2.0          ## [52] missForest_1.5          glue_1.8.0              pkgdown_2.1.3           ## [55] codetools_0.2-20        cowplot_1.1.3           stringi_1.8.7           ## [58] gtable_0.3.6            futile.logger_1.4.3     UCSC.utils_1.4.0        ## [61] tibble_3.3.0            pillar_1.10.2           pcaMethods_2.0.0        ## [64] htmltools_0.5.8.1       randomForest_4.7-1.2    GenomeInfoDbData_1.2.14 ## [67] R6_2.6.1                textshaping_1.0.1       evaluate_1.0.4          ## [70] lattice_0.22-7          futile.options_1.0.1    openxlsx_4.2.8          ## [73] bslib_0.9.0             Rcpp_1.0.14             zip_2.3.3               ## [76] SparseArray_1.8.0       xfun_0.52               fs_1.6.6                ## [79] pkgconfig_2.0.3"},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anton Klåvus. Author, copyright holder. Jussi Paananen. Author, copyright holder. Oskari Timonen. Author, copyright holder. Atte Lihtamo. Author. Vilhelm Suksi. Author, maintainer. Retu Haikonen. Author. Leo Lahti. Author. Kati Hanhineva. Author. Ville Koistinen. Contributor. Olli Kärkkäinen. Contributor. Artur Sannikov. Contributor.","code":""},{"path":"https://hanhineva-lab.github.io/notame/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Klavus, .; Kokla, M.; Noerman, S.; Koistinen, V.M.; Tuomainen, M.; Zarei, .; Meuronen, T.; Hakkinen, M.R.; Rummukainen, S.; Farizah Babu, .; Sallinen, T.; Karkkainen, O.; Paananen, J.; Broadhurst, D.; Brunius, C.; Hanhineva, K. \"notame\": Workflow Non-Targeted LC-MS Metabolic Profiling. Metabolites 2020, 10, 135.","code":"@Article{,   title = {\"notame\": Workflow for Non-Targeted LC-MS Metabolic Profiling},   author = {Anton Klavus and Marietta Kokla and Stefania Noerman and Ville M. Koistinen and Marjo Tuomainen and Iman Zarei and Topi Meuronen and Merja R. Hakkinen and Soile Rummukainen and Ambrin {Farizah Babu} and Taisa Sallinen and Olli Karkkainen and Jussi Paananen and David Broadhurst and Carl Brunius and Kati Hanhineva},   year = {2020},   journal = {Metabolites},   volume = {10},   number = {135},   url = {https://doi.org/10.3390/metabo10040135},   doi = {10.3390/metabo10040135}, }"},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/index.html","id":"notame---workflow-for-non-targeted-lc-ms-metabolic-profiling","dir":"","previous_headings":"","what":"notame - Workflow for non-targeted LC-MS metabolic profiling","title":"Workflow for non-targeted LC-MS metabolic profiling","text":"package can used analyze preprocessed LC-MS data non-targeted metabolomics. Notame developed research group nutritional metabolomics University Eastern Finland Afekta Technologies, spinoff metabolomics company. use notame way bundle together preprocessing methods use non-targeted LC-MS metabolomics data, mainly consists methods found packages, bunch visualizations found useful. detailed information run LC-MS experiments package fits workflow, can find paper : “notame”: Workflow Non-Targeted LC-MS Metabolic Profiling. huge thank everyone involved paper! Currently, package developed Afekta Technologies reworked Bioconductor promote interoperability functionality can complement notame workflow. resulted breaking changes (see NEWS user-facing changes). See vignettes documentation information.","code":""},{"path":"https://hanhineva-lab.github.io/notame/index.html","id":"what-does-notame-do","dir":"","previous_headings":"","what":"What does notame do?","title":"Workflow for non-targeted LC-MS metabolic profiling","text":"go list features, good know workflow lab works. first step take raw data files created LC-MS instrument create peak table using peak picking software (use MS-DIAL). peak picking dedicated software, use R data preprocessing, quality control, statistical analysis visualization. use obtained results identification actual metabolites. years, ended various scripts hard handle update, decided make package keep things control. list current main functionalities package: Reading data Excel spreadsheets created MS-DIAL Data stored SummarizedExperiment MetaboSet object holds information features samples along feature abundance matrix. allows simple interface functions package, need juggle different matrices/data frames. Drift correction: correcting systematic drift intensity molecular features using cubic spline correction (see Kirwan & Broadhurst et al.) Identifying flagging (removing) low-quality molecular features using quality metrics defined Broadhurst et al. Imputing missing values, multiple strategies available. Random forest imputation recommended, see Kokla et al. Batch effect correction: correcting systematic variation batches novel method clustering similar molecular features bunch statistical analyses, feature-wise tests multivariate models rather nice set visualizations use quality control, explorative analysis interpretation results statistical tests","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/index.html","id":"bioc-release","dir":"","previous_headings":"Installation and getting started","what":"Bioc-release","title":"Workflow for non-targeted LC-MS metabolic profiling","text":"","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"notame\")"},{"path":"https://hanhineva-lab.github.io/notame/index.html","id":"bioc-devel","dir":"","previous_headings":"Installation and getting started","what":"Bioc-devel","title":"Workflow for non-targeted LC-MS metabolic profiling","text":"","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  # The following initializes usage of Bioc devel BiocManager::install(version='devel')  BiocManager::install(\"notame\")"},{"path":"https://hanhineva-lab.github.io/notame/index.html","id":"credits-and-license","dir":"","previous_headings":"","what":"Credits and license","title":"Workflow for non-targeted LC-MS metabolic profiling","text":"first version notame written Anton Klåvus master’s thesis Bioinformatics Aalto university (published former name Anton Mattsson), working University Eastern Finland Afekta Technologies. Notame inspired analysis scripts written Jussi Paananen, Oskari Timonen Anton Klåvus University Eastern Finland. algorithm clustering molecular features originating compound based MATLAB code written David Broadhurst. Development picked Atte Lihtamo, Retu Haikonen, Vilhelm Suksi Leo Lahti, leading Bioconductor release. find bugs things fix, please submit issue GitHub! contributions package always welcome! notame published MIT license (tl;dr: ’s really permissive!)","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/MetaboSet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class used to represent LC-MS datasets — MetaboSet-class","title":"An S4 class used to represent LC-MS datasets — MetaboSet-class","text":"MetaboSet main class used represent data notame package. built upon ExpressionSet class Biobase package. addition slots inherited ExpressionSet, MetaboSet three slots . extra three slots hold special column names stored purely convenience, many functions use defaults.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/MetaboSet-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 class used to represent LC-MS datasets — MetaboSet-class","text":"","code":"# S4 method for class 'MetaboSet' combined_data(object)  # S4 method for class 'MetaboSet' group_col(object)  # S4 method for class 'MetaboSet' group_col(object) <- value  # S4 method for class 'MetaboSet' time_col(object)  # S4 method for class 'MetaboSet' time_col(object) <- value  # S4 method for class 'MetaboSet' subject_col(object)  # S4 method for class 'MetaboSet' subject_col(object) <- value  # S4 method for class 'MetaboSet' flag(object)  # S4 method for class 'MetaboSet' flag(object) <- value  # S4 method for class 'MetaboSet,data.frame' join_fData(object, dframe)  # S4 method for class 'MetaboSet,data.frame' join_pData(object, dframe)"},{"path":"https://hanhineva-lab.github.io/notame/reference/MetaboSet-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 class used to represent LC-MS datasets — MetaboSet-class","text":"object MetaboSet object. value string, name column designated holding group labels dframe data frame new information","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/MetaboSet-class.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"An S4 class used to represent LC-MS datasets — MetaboSet-class","text":"combined_data(MetaboSet): Retrieve sample information features group_col(MetaboSet): get name column group labels group_col(MetaboSet) <- value: set name column group labels time_col(MetaboSet): get name column time points time_col(MetaboSet) <- value: set name column time points subject_col(MetaboSet): get name column subject subject identifiers subject_col(MetaboSet) <- value: set name column subject identifiers flag(MetaboSet): get flags flag(MetaboSet) <- value: set flags join_fData(object = MetaboSet, dframe = data.frame): join new information feature data join_pData(object = MetaboSet, dframe = data.frame): join new information pheno data","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/MetaboSet-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class used to represent LC-MS datasets — MetaboSet-class","text":"group_col character, name column holding group information time_col character, name column holding time points subject_col character, name column holding subject identifiers","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/MetaboSet-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"An S4 class used to represent LC-MS datasets — MetaboSet-class","text":"See construct_metabosets constructor function.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/assess_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess quality information of features — assess_quality","title":"Assess quality information of features — assess_quality","text":"Assess features using quality metrics defined (Broadhurst 2018). quality metrics described Details section flag_quality","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/assess_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess quality information of features — assess_quality","text":"","code":"assess_quality(object, ...)  # S4 method for class 'MetaboSet' assess_quality(object)  # S4 method for class 'SummarizedExperiment' assess_quality(object, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/assess_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess quality information of features — assess_quality","text":"object  SummarizedExperiment MetaboSet object ... additional arguments passed methods assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/assess_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess quality information of features — assess_quality","text":"SummarizedExperiment MetaboSet object quality metrics feature data.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/assess_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess quality information of features — assess_quality","text":"","code":"data(example_set) ex_set <- assess_quality(example_set) rowData(ex_set) #> DataFrame with 80 rows and 12 columns #>                                       Feature_ID       Split Alignment #>                                      <character> <character> <integer> #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4..   HILIC_neg         1 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2..   HILIC_neg         2 #> HILIC_neg_158_23a1_4128   HILIC_neg_158_23a1_4..   HILIC_neg         3 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0..   HILIC_neg         4 #> HILIC_neg_401_52a4_211    HILIC_neg_401_52a4_211   HILIC_neg         5 #> ...                                          ...         ...       ... #> RP_pos_226_7218a3_1371    RP_pos_226_7218a3_1371      RP_pos        16 #> RP_pos_280_3779a4_0424    RP_pos_280_3779a4_0424      RP_pos        17 #> RP_pos_447_3232a2_2393    RP_pos_447_3232a2_2393      RP_pos        18 #> RP_pos_453_282a5_128        RP_pos_453_282a5_128      RP_pos        19 #> RP_pos_153_9636a7_9986    RP_pos_153_9636a7_9986      RP_pos        20 #>                           Average_Mz Average_Rt_min      Column    Ion_mode #>                            <numeric>      <numeric> <character> <character> #> HILIC_neg_259_9623a4_4322    259.962       4.432241       HILIC         neg #> HILIC_neg_108_1065a2_6121    108.107       2.612073       HILIC         neg #> HILIC_neg_158_23a1_4128      158.230       1.412822       HILIC         neg #> HILIC_neg_251_0056a0_6161    251.006       0.616145       HILIC         neg #> HILIC_neg_401_52a4_211       401.520       4.210970       HILIC         neg #> ...                              ...            ...         ...         ... #> RP_pos_226_7218a3_1371       226.722        3.13714          RP         pos #> RP_pos_280_3779a4_0424       280.378        4.04238          RP         pos #> RP_pos_447_3232a2_2393       447.323        2.23926          RP         pos #> RP_pos_453_282a5_128         453.282        5.12797          RP         pos #> RP_pos_153_9636a7_9986       153.964        7.99864          RP         pos #>                                  Flag       RSD     RSD_r   D_ratio D_ratio_r #>                           <character> <numeric> <numeric> <numeric> <numeric> #> HILIC_neg_259_9623a4_4322          NA  0.127075  0.156465  0.363022  0.475271 #> HILIC_neg_108_1065a2_6121          NA  0.468943  0.375347  1.202952  1.223426 #> HILIC_neg_158_23a1_4128            NA  0.568911  0.188623  1.019238  0.509172 #> HILIC_neg_251_0056a0_6161          NA  0.366231  0.383584  0.875327  1.089626 #> HILIC_neg_401_52a4_211             NA  0.153478  0.222952  0.419890  0.710290 #> ...                               ...       ...       ...       ...       ... #> RP_pos_226_7218a3_1371             NA  0.419258  0.298690  0.986842  1.069176 #> RP_pos_280_3779a4_0424             NA  0.126026  0.173915  0.253066  0.370787 #> RP_pos_447_3232a2_2393             NA  0.729257  0.948402  1.106946  1.207068 #> RP_pos_453_282a5_128               NA  0.663424  1.133718  1.465057  2.228991 #> RP_pos_153_9636a7_9986             NA  0.570564  0.183891  1.075597  0.439143"},{"path":"https://hanhineva-lab.github.io/notame/reference/citations.html","id":null,"dir":"Reference","previous_headings":"","what":"Show citations — citations","title":"Show citations — citations","text":"function lists citations major packages used notame functions called session. notame functions update list automatically. citations taken call 'citation(\"package\"), complemented brief description package used . NOTE: citations might point correct paper package authors supplied correct citation information package. output written current log file, specified.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/citations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show citations — citations","text":"","code":"citations()"},{"path":"https://hanhineva-lab.github.io/notame/reference/citations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show citations — citations","text":"None, function invoked side effect.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/citations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show citations — citations","text":"","code":"citations() #> INFO [2025-06-23 22:36:25] Preprocessing and analyses were performed using notame package: #> INFO [2025-06-23 22:36:25] To cite package ‘notame’ in publications use: #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25]   Klavus, A.; Kokla, M.; Noerman, S.; Koistinen, V.M.; Tuomainen, M.; #> INFO [2025-06-23 22:36:25]   Zarei, I.; Meuronen, T.; Hakkinen, M.R.; Rummukainen, S.; Farizah #> INFO [2025-06-23 22:36:25]   Babu, A.; Sallinen, T.; Karkkainen, O.; Paananen, J.; Broadhurst, D.; #> INFO [2025-06-23 22:36:25]   Brunius, C.; Hanhineva, K. \"notame\": Workflow for Non-Targeted LC-MS #> INFO [2025-06-23 22:36:25]   Metabolic Profiling. Metabolites 2020, 10, 135. #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25] A BibTeX entry for LaTeX users is #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25]   @Article{, #> INFO [2025-06-23 22:36:25]     title = {\"notame\": Workflow for Non-Targeted LC-MS Metabolic Profiling}, #> INFO [2025-06-23 22:36:25]     author = {Anton Klavus and Marietta Kokla and Stefania Noerman and Ville M. Koistinen and Marjo Tuomainen and Iman Zarei and Topi Meuronen and Merja R. Hakkinen and Soile Rummukainen and Ambrin {Farizah Babu} and Taisa Sallinen and Olli Karkkainen and Jussi Paananen and David Broadhurst and Carl Brunius and Kati Hanhineva}, #> INFO [2025-06-23 22:36:25]     year = {2020}, #> INFO [2025-06-23 22:36:25]     journal = {Metabolites}, #> INFO [2025-06-23 22:36:25]     volume = {10}, #> INFO [2025-06-23 22:36:25]     number = {135}, #> INFO [2025-06-23 22:36:25]     url = {https://doi.org/10.3390/metabo10040135}, #> INFO [2025-06-23 22:36:25]     doi = {10.3390/metabo10040135}, #> INFO [2025-06-23 22:36:25]   } #> INFO [2025-06-23 22:36:25] notame is built on a class from Biobase package: #> INFO [2025-06-23 22:36:25] To cite package ‘Biobase’ in publications use: #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25]   Orchestrating high-throughput genomic analysis with Bioconductor. W. #> INFO [2025-06-23 22:36:25]   Huber, V.J. Carey, R. Gentleman, ..., M. Morgan Nature Methods, #> INFO [2025-06-23 22:36:25]   2015:12, 115. #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25] A BibTeX entry for LaTeX users is #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25]   @Article{, #> INFO [2025-06-23 22:36:25]     author = {W. Huber and V. J. Carey and R. Gentleman and S. Anders and M. Carlson and B. S. Carvalho and H. C. Bravo and S. Davis and L. Gatto and T. Girke and R. Gottardo and F. Hahne and K. D. Hansen and R. A. Irizarry and M. Lawrence and M. I. Love and J. MacDonald and V. Obenchain and A. K. {Ole's} and H. {Pag`es} and A. Reyes and P. Shannon and G. K. Smyth and D. Tenenbaum and L. Waldron and M. Morgan}, #> INFO [2025-06-23 22:36:25]     title = {{O}rchestrating high-throughput genomic analysis with {B}ioconductor}, #> INFO [2025-06-23 22:36:25]     journal = {Nature Methods}, #> INFO [2025-06-23 22:36:25]     year = {2015}, #> INFO [2025-06-23 22:36:25]     volume = {12}, #> INFO [2025-06-23 22:36:25]     number = {2}, #> INFO [2025-06-23 22:36:25]     pages = {115--121}, #> INFO [2025-06-23 22:36:25]     url = {http://www.nature.com/nmeth/journal/v12/n2/full/nmeth.3252.html}, #> INFO [2025-06-23 22:36:25]   } #> INFO [2025-06-23 22:36:25] visualizations in notame are built with ggplot2: #> INFO [2025-06-23 22:36:25] To cite ggplot2 in publications, please use #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25]   H. Wickham. ggplot2: Elegant Graphics for Data Analysis. #> INFO [2025-06-23 22:36:25]   Springer-Verlag New York, 2016. #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25] A BibTeX entry for LaTeX users is #> INFO [2025-06-23 22:36:25]  #> INFO [2025-06-23 22:36:25]   @Book{, #> INFO [2025-06-23 22:36:25]     author = {Hadley Wickham}, #> INFO [2025-06-23 22:36:25]     title = {ggplot2: Elegant Graphics for Data Analysis}, #> INFO [2025-06-23 22:36:25]     publisher = {Springer-Verlag New York}, #> INFO [2025-06-23 22:36:25]     year = {2016}, #> INFO [2025-06-23 22:36:25]     isbn = {978-3-319-24277-4}, #> INFO [2025-06-23 22:36:25]     url = {https://ggplot2.tidyverse.org}, #> INFO [2025-06-23 22:36:25]   } data(example_set) plot_tsne(example_set, perplexity = 10, group = \"Group\", color = \"Group\")  # Rtsne added to citations citations() #> INFO [2025-06-23 22:36:26] Preprocessing and analyses were performed using notame package: #> INFO [2025-06-23 22:36:26] To cite package ‘notame’ in publications use: #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   Klavus, A.; Kokla, M.; Noerman, S.; Koistinen, V.M.; Tuomainen, M.; #> INFO [2025-06-23 22:36:26]   Zarei, I.; Meuronen, T.; Hakkinen, M.R.; Rummukainen, S.; Farizah #> INFO [2025-06-23 22:36:26]   Babu, A.; Sallinen, T.; Karkkainen, O.; Paananen, J.; Broadhurst, D.; #> INFO [2025-06-23 22:36:26]   Brunius, C.; Hanhineva, K. \"notame\": Workflow for Non-Targeted LC-MS #> INFO [2025-06-23 22:36:26]   Metabolic Profiling. Metabolites 2020, 10, 135. #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26] A BibTeX entry for LaTeX users is #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   @Article{, #> INFO [2025-06-23 22:36:26]     title = {\"notame\": Workflow for Non-Targeted LC-MS Metabolic Profiling}, #> INFO [2025-06-23 22:36:26]     author = {Anton Klavus and Marietta Kokla and Stefania Noerman and Ville M. Koistinen and Marjo Tuomainen and Iman Zarei and Topi Meuronen and Merja R. Hakkinen and Soile Rummukainen and Ambrin {Farizah Babu} and Taisa Sallinen and Olli Karkkainen and Jussi Paananen and David Broadhurst and Carl Brunius and Kati Hanhineva}, #> INFO [2025-06-23 22:36:26]     year = {2020}, #> INFO [2025-06-23 22:36:26]     journal = {Metabolites}, #> INFO [2025-06-23 22:36:26]     volume = {10}, #> INFO [2025-06-23 22:36:26]     number = {135}, #> INFO [2025-06-23 22:36:26]     url = {https://doi.org/10.3390/metabo10040135}, #> INFO [2025-06-23 22:36:26]     doi = {10.3390/metabo10040135}, #> INFO [2025-06-23 22:36:26]   } #> INFO [2025-06-23 22:36:26] notame is built on a class from Biobase package: #> INFO [2025-06-23 22:36:26] To cite package ‘Biobase’ in publications use: #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   Orchestrating high-throughput genomic analysis with Bioconductor. W. #> INFO [2025-06-23 22:36:26]   Huber, V.J. Carey, R. Gentleman, ..., M. Morgan Nature Methods, #> INFO [2025-06-23 22:36:26]   2015:12, 115. #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26] A BibTeX entry for LaTeX users is #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   @Article{, #> INFO [2025-06-23 22:36:26]     author = {W. Huber and V. J. Carey and R. Gentleman and S. Anders and M. Carlson and B. S. Carvalho and H. C. Bravo and S. Davis and L. Gatto and T. Girke and R. Gottardo and F. Hahne and K. D. Hansen and R. A. Irizarry and M. Lawrence and M. I. Love and J. MacDonald and V. Obenchain and A. K. {Ole's} and H. {Pag`es} and A. Reyes and P. Shannon and G. K. Smyth and D. Tenenbaum and L. Waldron and M. Morgan}, #> INFO [2025-06-23 22:36:26]     title = {{O}rchestrating high-throughput genomic analysis with {B}ioconductor}, #> INFO [2025-06-23 22:36:26]     journal = {Nature Methods}, #> INFO [2025-06-23 22:36:26]     year = {2015}, #> INFO [2025-06-23 22:36:26]     volume = {12}, #> INFO [2025-06-23 22:36:26]     number = {2}, #> INFO [2025-06-23 22:36:26]     pages = {115--121}, #> INFO [2025-06-23 22:36:26]     url = {http://www.nature.com/nmeth/journal/v12/n2/full/nmeth.3252.html}, #> INFO [2025-06-23 22:36:26]   } #> INFO [2025-06-23 22:36:26] visualizations in notame are built with ggplot2: #> INFO [2025-06-23 22:36:26] To cite ggplot2 in publications, please use #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   H. Wickham. ggplot2: Elegant Graphics for Data Analysis. #> INFO [2025-06-23 22:36:26]   Springer-Verlag New York, 2016. #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26] A BibTeX entry for LaTeX users is #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   @Book{, #> INFO [2025-06-23 22:36:26]     author = {Hadley Wickham}, #> INFO [2025-06-23 22:36:26]     title = {ggplot2: Elegant Graphics for Data Analysis}, #> INFO [2025-06-23 22:36:26]     publisher = {Springer-Verlag New York}, #> INFO [2025-06-23 22:36:26]     year = {2016}, #> INFO [2025-06-23 22:36:26]     isbn = {978-3-319-24277-4}, #> INFO [2025-06-23 22:36:26]     url = {https://ggplot2.tidyverse.org}, #> INFO [2025-06-23 22:36:26]   } #> INFO [2025-06-23 22:36:26] Rtsne package was used for t-SNE figures: #> INFO [2025-06-23 22:36:26] To cite package ‘Rtsne’ in publications use: #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   Jesse H. Krijthe (2015). Rtsne: T-Distributed Stochastic Neighbor #> INFO [2025-06-23 22:36:26]   Embedding using a Barnes-Hut Implementation, URL: #> INFO [2025-06-23 22:36:26]   https://github.com/jkrijthe/Rtsne #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   L.J.P. van der Maaten and G.E. Hinton. Visualizing High-Dimensional #> INFO [2025-06-23 22:36:26]   Data Using t-SNE. Journal of Machine Learning Research #> INFO [2025-06-23 22:36:26]   9(Nov):2579-2605, 2008. #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26]   L.J.P. van der Maaten. Accelerating t-SNE using Tree-Based #> INFO [2025-06-23 22:36:26]   Algorithms. Journal of Machine Learning Research 15(Oct):3221-3245, #> INFO [2025-06-23 22:36:26]   2014. #> INFO [2025-06-23 22:36:26]  #> INFO [2025-06-23 22:36:26] To see these entries in BibTeX format, use 'print(<citation>, #> INFO [2025-06-23 22:36:26] bibtex=TRUE)', 'toBibtex(.)', or set #> INFO [2025-06-23 22:36:26] 'options(citation.bibtex.max=999)'."},{"path":"https://hanhineva-lab.github.io/notame/reference/cluster_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster correlated features originating from the same metabolite — cluster_features","title":"Cluster correlated features originating from the same metabolite — cluster_features","text":"Clusters features potentially originating compound. Features high Pearson correlation coefficient small retention time difference linked together. clusters formed setting threshold relative degree node cluster needs fulfil. cluster named feature highest median peak area (median abundance). wrapper around numerous functions based MATLAB code David Broadhurst.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/cluster_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster correlated features originating from the same metabolite — cluster_features","text":"","code":"cluster_features(   object,   mz_col = NULL,   rt_col = NULL,   all_features = FALSE,   rt_window = 1/60,   corr_thresh = 0.9,   d_thresh = 0.8,   plotting = TRUE,   min_size_plotting = 3,   prefix = NULL,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/cluster_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster correlated features originating from the same metabolite — cluster_features","text":"object  SummarizedExperiment MetaboSet object mz_col column name feature data holds mass--charge ratios rt_col column name feature data holds retention times all_features logical, features included clustering? FALSE, default, flagged features included clustering rt_window retention time window potential links NOTE: use unit retention time corr_thresh correlation threshold required potential links features d_thresh threshold relative degree required node plotting plots drawn cluster? min_size_plotting minimum number features cluster needs plotted prefix prefix files plotted assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/cluster_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster correlated features originating from the same metabolite — cluster_features","text":"SummarizedExperiment MetaboSet object, median peak area (MPA), cluster ID, features cluster, cluster size added feature data.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/cluster_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster correlated features originating from the same metabolite — cluster_features","text":"","code":"data(example_set) # The parameters are really weird because example data is imaginary clustered <- cluster_features(example_set, rt_window = 1, corr_thresh = 0.5,    d_thresh = 0.6) #> INFO [2025-06-23 22:36:26] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:26] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:26] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:26]  #> Starting feature clustering at 2025-06-23 22:36:26.484164 #> INFO [2025-06-23 22:36:26] Finding connections between features in HILIC_neg #> INFO [2025-06-23 22:36:26] Found 1 connections in HILIC_neg #> INFO [2025-06-23 22:36:26] Finding connections between features in HILIC_pos #> INFO [2025-06-23 22:36:26] Found 4 connections in HILIC_pos #> INFO [2025-06-23 22:36:26] Finding connections between features in RP_neg #> INFO [2025-06-23 22:36:26] Found 1 connections in RP_neg #> INFO [2025-06-23 22:36:26] Finding connections between features in RP_pos #> INFO [2025-06-23 22:36:26] Found 2 connections in RP_pos #> INFO [2025-06-23 22:36:26] Found 8 connections #> 5 components found #> 1 components found #> INFO [2025-06-23 22:36:26] Found 5 clusters of 2 or more features, clustering finished at 2025-06-23 22:36:26.968162 #> INFO [2025-06-23 22:36:27] Saved cluster plots to:"},{"path":"https://hanhineva-lab.github.io/notame/reference/cohens_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohen's D — cohens_d","title":"Cohen's D — cohens_d","text":"Computes Cohen's D feature. time ID supplied, change two time points computed subject, Cohen's d computed changes.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/cohens_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohen's D — cohens_d","text":"","code":"cohens_d(object, group, id = NULL, time = NULL, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/cohens_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohen's D — cohens_d","text":"object  SummarizedExperiment MetaboSet object group character, name group column id character, name subject ID column time character, name time column assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/cohens_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cohen's D — cohens_d","text":"data frame Cohen's d feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/cohens_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cohen's D — cohens_d","text":"","code":"data(example_set) d_results <- cohens_d(drop_qcs(example_set), group = \"Group\") #> INFO [2025-06-23 22:36:28] Starting to compute Cohen's D between groups B & A #> INFO [2025-06-23 22:36:28] Cohen's D computed. d_results_time <- cohens_d(drop_qcs(example_set),   group = \"Group\", time = \"Time\", id = \"Subject_ID\" ) #> INFO [2025-06-23 22:36:28] Starting to compute Cohen's D between groups B & A from time change 2 - 1 #> INFO [2025-06-23 22:36:28] Cohen's D computed."},{"path":"https://hanhineva-lab.github.io/notame/reference/combined_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve both sample information and features — combined_data","title":"Retrieve both sample information and features — combined_data","text":"Retrieve sample information features","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/combined_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve both sample information and features — combined_data","text":"","code":"combined_data(object, ...)  # S4 method for class 'SummarizedExperiment' combined_data(object, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/combined_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve both sample information and features — combined_data","text":"object MetaboSet object ... additional arguments passed methods assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/combined_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve both sample information and features — combined_data","text":"data frame sample information plus features columns, one row per sample.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/combined_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve both sample information and features — combined_data","text":"","code":"data(example_set) combined_data(example_set) #>         Sample_ID Injection_order Subject_ID Group     QC Time Batch #> Demo_1     Demo_1               1         QC    QC     QC   QC     1 #> Demo_2     Demo_2               2          2     B Sample    1     1 #> Demo_3     Demo_3               3          3     B Sample    1     1 #> Demo_4     Demo_4               4          4     B Sample    1     1 #> Demo_5     Demo_5               5          5     A Sample    1     1 #> Demo_6     Demo_6               6          6     B Sample    1     1 #> Demo_7     Demo_7               7         QC    QC     QC   QC     1 #> Demo_8     Demo_8               8          8     B Sample    1     1 #> Demo_9     Demo_9               9          9     A Sample    1     1 #> Demo_10   Demo_10              10         10     B Sample    1     1 #> Demo_11   Demo_11              11         11     A Sample    1     1 #> Demo_12   Demo_12              12         12     A Sample    1     1 #> Demo_13   Demo_13              13         QC    QC     QC   QC     1 #> Demo_14   Demo_14              14         14     B Sample    1     1 #> Demo_15   Demo_15              15         15     B Sample    1     1 #> Demo_16   Demo_16              16         16     A Sample    1     1 #> Demo_17   Demo_17              17         17     A Sample    1     1 #> Demo_18   Demo_18              18         18     B Sample    1     1 #> Demo_19   Demo_19              19         QC    QC     QC   QC     1 #> Demo_20   Demo_20              20         20     A Sample    1     1 #> Demo_21   Demo_21              21         21     A Sample    1     1 #> Demo_22   Demo_22              22         22     A Sample    1     1 #> Demo_23   Demo_23              23         23     B Sample    1     1 #> Demo_24   Demo_24              24         24     A Sample    1     1 #> Demo_25   Demo_25              25         QC    QC     QC   QC     1 #> Demo_26   Demo_26              26         QC    QC     QC   QC     2 #> Demo_27   Demo_27              27          2     B Sample    2     2 #> Demo_28   Demo_28              28          3     B Sample    2     2 #> Demo_29   Demo_29              29          4     B Sample    2     2 #> Demo_30   Demo_30              30          5     A Sample    2     2 #> Demo_31   Demo_31              31          6     B Sample    2     2 #> Demo_32   Demo_32              32         QC    QC     QC   QC     2 #> Demo_33   Demo_33              33          8     B Sample    2     2 #> Demo_34   Demo_34              34          9     A Sample    2     2 #> Demo_35   Demo_35              35         10     B Sample    2     2 #> Demo_36   Demo_36              36         11     A Sample    2     2 #> Demo_37   Demo_37              37         12     A Sample    2     2 #> Demo_38   Demo_38              38         QC    QC     QC   QC     2 #> Demo_39   Demo_39              39         14     B Sample    2     2 #> Demo_40   Demo_40              40         15     B Sample    2     2 #> Demo_41   Demo_41              41         16     A Sample    2     2 #> Demo_42   Demo_42              42         17     A Sample    2     2 #> Demo_43   Demo_43              43         18     B Sample    2     2 #> Demo_44   Demo_44              44         QC    QC     QC   QC     2 #> Demo_45   Demo_45              45         20     A Sample    2     2 #> Demo_46   Demo_46              46         21     A Sample    2     2 #> Demo_47   Demo_47              47         22     A Sample    2     2 #> Demo_48   Demo_48              48         23     B Sample    2     2 #> Demo_49   Demo_49              49         24     A Sample    2     2 #> Demo_50   Demo_50              50         QC    QC     QC   QC     2 #>         HILIC_neg_Datafile HILIC_pos_Datafile RP_neg_Datafile RP_pos_Datafile #> Demo_1         HILIC_neg_1        HILIC_pos_1        RP_neg_1        RP_pos_1 #> Demo_2         HILIC_neg_2        HILIC_pos_2        RP_neg_2        RP_pos_2 #> Demo_3         HILIC_neg_3        HILIC_pos_3        RP_neg_3        RP_pos_3 #> Demo_4         HILIC_neg_4        HILIC_pos_4        RP_neg_4        RP_pos_4 #> Demo_5         HILIC_neg_5        HILIC_pos_5        RP_neg_5        RP_pos_5 #> Demo_6         HILIC_neg_6        HILIC_pos_6        RP_neg_6        RP_pos_6 #> Demo_7         HILIC_neg_7        HILIC_pos_7        RP_neg_7        RP_pos_7 #> Demo_8         HILIC_neg_8        HILIC_pos_8        RP_neg_8        RP_pos_8 #> Demo_9         HILIC_neg_9        HILIC_pos_9        RP_neg_9        RP_pos_9 #> Demo_10       HILIC_neg_10       HILIC_pos_10       RP_neg_10       RP_pos_10 #> Demo_11       HILIC_neg_11       HILIC_pos_11       RP_neg_11       RP_pos_11 #> Demo_12       HILIC_neg_12       HILIC_pos_12       RP_neg_12       RP_pos_12 #> Demo_13       HILIC_neg_13       HILIC_pos_13       RP_neg_13       RP_pos_13 #> Demo_14       HILIC_neg_14       HILIC_pos_14       RP_neg_14       RP_pos_14 #> Demo_15       HILIC_neg_15       HILIC_pos_15       RP_neg_15       RP_pos_15 #> Demo_16       HILIC_neg_16       HILIC_pos_16       RP_neg_16       RP_pos_16 #> Demo_17       HILIC_neg_17       HILIC_pos_17       RP_neg_17       RP_pos_17 #> Demo_18       HILIC_neg_18       HILIC_pos_18       RP_neg_18       RP_pos_18 #> Demo_19       HILIC_neg_19       HILIC_pos_19       RP_neg_19       RP_pos_19 #> Demo_20       HILIC_neg_20       HILIC_pos_20       RP_neg_20       RP_pos_20 #> Demo_21       HILIC_neg_21       HILIC_pos_21       RP_neg_21       RP_pos_21 #> Demo_22       HILIC_neg_22       HILIC_pos_22       RP_neg_22       RP_pos_22 #> Demo_23       HILIC_neg_23       HILIC_pos_23       RP_neg_23       RP_pos_23 #> Demo_24       HILIC_neg_24       HILIC_pos_24       RP_neg_24       RP_pos_24 #> Demo_25       HILIC_neg_25       HILIC_pos_25       RP_neg_25       RP_pos_25 #> Demo_26       HILIC_neg_26       HILIC_pos_26       RP_neg_26       RP_pos_26 #> Demo_27       HILIC_neg_27       HILIC_pos_27       RP_neg_27       RP_pos_27 #> Demo_28       HILIC_neg_28       HILIC_pos_28       RP_neg_28       RP_pos_28 #> Demo_29       HILIC_neg_29       HILIC_pos_29       RP_neg_29       RP_pos_29 #> Demo_30       HILIC_neg_30       HILIC_pos_30       RP_neg_30       RP_pos_30 #> Demo_31       HILIC_neg_31       HILIC_pos_31       RP_neg_31       RP_pos_31 #> Demo_32       HILIC_neg_32       HILIC_pos_32       RP_neg_32       RP_pos_32 #> Demo_33       HILIC_neg_33       HILIC_pos_33       RP_neg_33       RP_pos_33 #> Demo_34       HILIC_neg_34       HILIC_pos_34       RP_neg_34       RP_pos_34 #> Demo_35       HILIC_neg_35       HILIC_pos_35       RP_neg_35       RP_pos_35 #> Demo_36       HILIC_neg_36       HILIC_pos_36       RP_neg_36       RP_pos_36 #> Demo_37       HILIC_neg_37       HILIC_pos_37       RP_neg_37       RP_pos_37 #> Demo_38       HILIC_neg_38       HILIC_pos_38       RP_neg_38       RP_pos_38 #> Demo_39       HILIC_neg_39       HILIC_pos_39       RP_neg_39       RP_pos_39 #> Demo_40       HILIC_neg_40       HILIC_pos_40       RP_neg_40       RP_pos_40 #> Demo_41       HILIC_neg_41       HILIC_pos_41       RP_neg_41       RP_pos_41 #> Demo_42       HILIC_neg_42       HILIC_pos_42       RP_neg_42       RP_pos_42 #> Demo_43       HILIC_neg_43       HILIC_pos_43       RP_neg_43       RP_pos_43 #> Demo_44       HILIC_neg_44       HILIC_pos_44       RP_neg_44       RP_pos_44 #> Demo_45       HILIC_neg_45       HILIC_pos_45       RP_neg_45       RP_pos_45 #> Demo_46       HILIC_neg_46       HILIC_pos_46       RP_neg_46       RP_pos_46 #> Demo_47       HILIC_neg_47       HILIC_pos_47       RP_neg_47       RP_pos_47 #> Demo_48       HILIC_neg_48       HILIC_pos_48       RP_neg_48       RP_pos_48 #> Demo_49       HILIC_neg_49       HILIC_pos_49       RP_neg_49       RP_pos_49 #> Demo_50       HILIC_neg_50       HILIC_pos_50       RP_neg_50       RP_pos_50 #>         HILIC_neg_259_9623a4_4322 HILIC_neg_108_1065a2_6121 #> Demo_1                   30873.83                 11517.655 #> Demo_2                   30193.28                  4820.770 #> Demo_3                       0.00                 14747.642 #> Demo_4                   48290.00                 13732.420 #> Demo_5                   22991.50                  4043.557 #> Demo_6                   34749.48                 16292.051 #> Demo_7                   37515.31                     0.000 #> Demo_8                   39179.00                 12656.522 #> Demo_9                   38574.30                 11510.090 #> Demo_10                  49891.50                 11937.881 #> Demo_11                  28768.72                     0.000 #> Demo_12                  28527.40                 16848.612 #> Demo_13                  34840.66                 10093.589 #> Demo_14                  26620.86                  7411.210 #> Demo_15                  27546.15                 10555.623 #> Demo_16                  23281.03                  6468.261 #> Demo_17                  42604.01                 14724.765 #> Demo_18                  34034.57                 14527.298 #> Demo_19                  35629.71                 10211.362 #> Demo_20                  34547.79                 11201.494 #> Demo_21                  50310.91                 15537.475 #> Demo_22                  43751.51                 10428.490 #> Demo_23                  41599.97                 10297.479 #> Demo_24                  37883.22                 10005.069 #> Demo_25                  37723.42                 10969.957 #> Demo_26                  36342.85                 19927.037 #> Demo_27                  42698.19                 17357.308 #> Demo_28                  30640.71                 17139.430 #> Demo_29                  32973.98                 13130.794 #> Demo_30                  46179.34                 15990.505 #> Demo_31                  33259.82                 14574.868 #> Demo_32                  42993.33                 20877.017 #> Demo_33                  55430.78                 12785.271 #> Demo_34                  36913.16                     0.000 #> Demo_35                  42095.55                     0.000 #> Demo_36                      0.00                 16135.283 #> Demo_37                  57602.32                 16717.186 #> Demo_38                  43098.09                 15864.070 #> Demo_39                  41362.91                 18407.539 #> Demo_40                  47647.09                 14355.244 #> Demo_41                  47347.56                 12774.132 #> Demo_42                  37525.65                  9856.374 #> Demo_43                  41972.81                 16563.826 #> Demo_44                  47209.86                 15670.460 #> Demo_45                  39905.46                 13922.454 #> Demo_46                  49365.81                 22617.002 #> Demo_47                  48686.08                 15886.053 #> Demo_48                      0.00                 19031.006 #> Demo_49                  51990.84                 17296.749 #> Demo_50                  42780.94                 19747.447 #>         HILIC_neg_158_23a1_4128 HILIC_neg_251_0056a0_6161 #> Demo_1                20690.592                  14816.35 #> Demo_2                18929.532                  37198.20 #> Demo_3                16823.095                  26748.51 #> Demo_4                26141.084                  20747.95 #> Demo_5                25379.050                  29489.26 #> Demo_6                    0.000                  20958.14 #> Demo_7                14208.226                  15830.22 #> Demo_8                12058.220                  12710.17 #> Demo_9                19524.555                  20139.86 #> Demo_10               27709.086                  16393.24 #> Demo_11               34776.690                  21419.50 #> Demo_12               23079.278                  14233.66 #> Demo_13                   0.000                  16219.51 #> Demo_14               20577.066                  17656.12 #> Demo_15                9291.962                  24067.25 #> Demo_16               21954.594                  14490.61 #> Demo_17                   0.000                  22070.46 #> Demo_18               27503.748                  16917.08 #> Demo_19                   0.000                  16070.63 #> Demo_20               10270.844                      0.00 #> Demo_21               10358.045                  15652.72 #> Demo_22               26946.829                  12730.37 #> Demo_23               14347.673                  25385.47 #> Demo_24               18507.935                  23423.01 #> Demo_25               14445.414                  17378.37 #> Demo_26               22621.123                  38332.26 #> Demo_27               30176.809                  35701.98 #> Demo_28               14642.700                  28562.42 #> Demo_29               24842.224                      0.00 #> Demo_30               32806.307                  28757.96 #> Demo_31                   0.000                  33986.66 #> Demo_32               21813.805                  28006.08 #> Demo_33               34991.889                  30890.52 #> Demo_34               18005.049                  32805.53 #> Demo_35               23341.804                  34740.27 #> Demo_36               24187.614                  25151.86 #> Demo_37               15930.941                  28769.84 #> Demo_38               24704.149                  25656.69 #> Demo_39               31599.721                  43235.04 #> Demo_40               16483.829                  19845.34 #> Demo_41               22749.107                      0.00 #> Demo_42               25559.058                  28323.30 #> Demo_43               36612.078                  31939.58 #> Demo_44               22426.282                  34655.91 #> Demo_45               21612.292                  29665.86 #> Demo_46               21701.726                  24869.49 #> Demo_47               27615.024                  27283.52 #> Demo_48               30091.589                  23809.95 #> Demo_49               24753.048                  29097.62 #> Demo_50               23207.862                  26022.66 #>         HILIC_neg_401_52a4_211 HILIC_neg_400_7045a5_3842 #> Demo_1               22093.182                  23894.97 #> Demo_2                9927.692                  26727.66 #> Demo_3               11526.048                  13871.78 #> Demo_4               23915.148                  35694.52 #> Demo_5               19830.850                  43856.04 #> Demo_6               19028.935                  25810.07 #> Demo_7               18783.514                  30332.48 #> Demo_8               15180.039                  24853.12 #> Demo_9               18289.116                  29593.51 #> Demo_10              19114.381                  31241.78 #> Demo_11                  0.000                  36641.16 #> Demo_12              14085.948                  38492.64 #> Demo_13              18072.691                  29744.72 #> Demo_14              20310.810                  34932.57 #> Demo_15               8705.320                  25447.20 #> Demo_16               1042.519                  34857.37 #> Demo_17              15023.307                  31423.69 #> Demo_18              12342.445                  35217.64 #> Demo_19              16863.342                  27011.74 #> Demo_20              14228.832                  26696.25 #> Demo_21              22710.194                  36472.10 #> Demo_22              13596.472                  37929.93 #> Demo_23              13835.803                  28592.61 #> Demo_24              21134.145                  25834.86 #> Demo_25              15286.052                  32479.76 #> Demo_26              22580.472                  27883.28 #> Demo_27              31819.562                  38685.88 #> Demo_28              29371.195                  38729.80 #> Demo_29              23360.891                  32758.40 #> Demo_30              26794.467                  45263.73 #> Demo_31              16612.111                  32273.35 #> Demo_32              20885.901                  39399.64 #> Demo_33              14869.070                  33209.60 #> Demo_34              19022.210                  39947.45 #> Demo_35              11405.106                  37566.58 #> Demo_36              19243.396                  43026.69 #> Demo_37              16765.744                  48097.93 #> Demo_38              22643.442                  43544.22 #> Demo_39                  0.000                  34784.32 #> Demo_40              14792.754                  33619.53 #> Demo_41              21900.052                  38257.22 #> Demo_42              18182.302                  35232.85 #> Demo_43              23627.381                      0.00 #> Demo_44              16929.512                  42191.65 #> Demo_45              21297.054                      0.00 #> Demo_46              18705.455                  41822.88 #> Demo_47              22658.605                  30261.05 #> Demo_48              14439.564                  41658.40 #> Demo_49              19756.089                      0.00 #> Demo_50              15343.491                  44677.84 #>         HILIC_neg_304_014a7_1311 HILIC_neg_276_6328a2_7734 #> Demo_1                12494.7385                 13886.940 #> Demo_2                10277.2621                 13990.361 #> Demo_3                17220.0625                 12756.529 #> Demo_4                19345.2428                  8352.584 #> Demo_5                20675.6278                 14542.618 #> Demo_6                    0.0000                  8092.626 #> Demo_7                16248.8501                  9385.913 #> Demo_8                16195.4306                 10265.010 #> Demo_9                24134.0703                  9098.459 #> Demo_10                5018.0290                  9371.392 #> Demo_11               13190.1361                  9898.019 #> Demo_12               16042.4677                  9177.764 #> Demo_13               15413.9646                  9700.441 #> Demo_14               14619.0758                  8341.527 #> Demo_15               17164.1727                 10511.359 #> Demo_16                8733.1978                 13898.310 #> Demo_17                9625.0639                 11194.402 #> Demo_18                   0.0000                  8237.980 #> Demo_19               13357.8783                  8895.467 #> Demo_20               14636.7746                  8168.770 #> Demo_21               10450.7776                  9359.041 #> Demo_22               15943.5011                  8548.384 #> Demo_23               10942.6583                  7046.015 #> Demo_24                 378.8789                  8830.616 #> Demo_25               15102.6866                     0.000 #> Demo_26               22645.8550                 21239.198 #> Demo_27               18948.2719                 14346.835 #> Demo_28               20064.5352                 13938.272 #> Demo_29               19417.1327                 19688.357 #> Demo_30               22987.0117                     0.000 #> Demo_31               22938.6241                 21017.501 #> Demo_32               16463.4483                 15496.328 #> Demo_33               16905.6741                 18646.836 #> Demo_34               24350.2112                 22101.473 #> Demo_35               20672.8346                 14490.184 #> Demo_36               20702.5541                 17592.941 #> Demo_37               17798.9721                 12973.845 #> Demo_38                   0.0000                 16594.190 #> Demo_39               12697.1713                 19178.144 #> Demo_40                   0.0000                 15053.750 #> Demo_41               21566.9959                 14965.176 #> Demo_42               28392.7546                 14556.833 #> Demo_43               25814.3054                 16042.951 #> Demo_44               19402.7781                 12714.565 #> Demo_45               19210.2190                 11913.494 #> Demo_46               23832.2509                 15394.141 #> Demo_47               21495.0844                  8649.341 #> Demo_48               21865.7680                 12759.649 #> Demo_49               17548.5757                 23850.336 #> Demo_50                   0.0000                 10975.047 #>         HILIC_neg_118_9111a4_1865 HILIC_neg_446_9413a2_315 #> Demo_1                   28283.42                 6713.775 #> Demo_2                   40772.09                 5428.669 #> Demo_3                   43814.08                    0.000 #> Demo_4                   42403.80                 6977.528 #> Demo_5                   25698.63                 7833.216 #> Demo_6                   50825.45                 7710.559 #> Demo_7                   28615.98                 6337.091 #> Demo_8                   36373.87                 2965.922 #> Demo_9                   23930.09                 3793.810 #> Demo_10                      0.00                 6494.289 #> Demo_11                  49218.61                 5305.091 #> Demo_12                  36895.91                 4291.065 #> Demo_13                  35359.29                 6273.510 #> Demo_14                  33206.46                 3574.750 #> Demo_15                  36274.47                    0.000 #> Demo_16                  21886.85                 6605.884 #> Demo_17                  36742.70                 5627.561 #> Demo_18                  34908.09                 8017.002 #> Demo_19                  34556.27                 4299.405 #> Demo_20                      0.00                 6128.904 #> Demo_21                  34957.71                    0.000 #> Demo_22                  33700.62                 3681.804 #> Demo_23                  41870.48                 5428.182 #> Demo_24                  29992.52                 7264.983 #> Demo_25                  35770.68                 4223.872 #> Demo_26                  34283.99                14215.869 #> Demo_27                  47906.24                14920.055 #> Demo_28                  32872.69                14064.512 #> Demo_29                  40879.15                12089.779 #> Demo_30                  51587.85                    0.000 #> Demo_31                  49807.38                12008.135 #> Demo_32                  37967.74                10696.272 #> Demo_33                  44087.04                 8173.138 #> Demo_34                  35667.20                 9912.889 #> Demo_35                  37262.36                10968.191 #> Demo_36                  46727.74                11867.742 #> Demo_37                  55770.77                13440.106 #> Demo_38                  37327.86                10904.497 #> Demo_39                      0.00                13450.870 #> Demo_40                  35079.87                 8672.508 #> Demo_41                  43133.61                10896.617 #> Demo_42                      0.00                13423.565 #> Demo_43                  51269.37                12900.343 #> Demo_44                  43603.63                 9339.858 #> Demo_45                  43413.54                10349.957 #> Demo_46                  48824.17                16493.043 #> Demo_47                  50542.34                 9531.773 #> Demo_48                  46024.58                11675.769 #> Demo_49                  40645.75                14948.845 #> Demo_50                  37578.96                 9003.271 #>         HILIC_neg_127_5856a4_3758 HILIC_neg_303_2144a1_2372 #> Demo_1                   33198.28                      0.00 #> Demo_2                   39000.73                  33229.89 #> Demo_3                   47078.87                  34595.49 #> Demo_4                   28857.88                  44757.36 #> Demo_5                   37096.68                  30236.70 #> Demo_6                   40861.06                  26725.20 #> Demo_7                   42108.84                  43599.15 #> Demo_8                   22956.35                  40321.00 #> Demo_9                   21984.76                  29781.29 #> Demo_10                  34986.63                  61732.77 #> Demo_11                  39956.35                  34879.24 #> Demo_12                  29562.47                  28319.87 #> Demo_13                  33388.20                  37522.53 #> Demo_14                  45064.79                      0.00 #> Demo_15                  47347.81                  32697.39 #> Demo_16                  39433.13                  39132.04 #> Demo_17                  33958.55                  32058.12 #> Demo_18                  42499.70                  51705.28 #> Demo_19                  48674.72                  39493.29 #> Demo_20                  46358.42                      0.00 #> Demo_21                  40360.43                  25485.22 #> Demo_22                  24302.01                  52412.80 #> Demo_23                  22441.26                  20337.73 #> Demo_24                  28285.68                  39379.20 #> Demo_25                  48095.95                  41867.04 #> Demo_26                  30233.34                  33893.61 #> Demo_27                  36377.21                  42074.73 #> Demo_28                  36100.52                  42749.88 #> Demo_29                  34752.04                  54268.50 #> Demo_30                  41473.76                  41763.62 #> Demo_31                      0.00                  46385.52 #> Demo_32                  38305.81                  41415.81 #> Demo_33                  31052.93                      0.00 #> Demo_34                  41744.43                  39555.16 #> Demo_35                  43453.45                  36750.89 #> Demo_36                  43721.84                  40118.93 #> Demo_37                  46624.16                  50194.41 #> Demo_38                  36174.57                  40340.26 #> Demo_39                      0.00                  42531.76 #> Demo_40                  40775.58                      0.00 #> Demo_41                  46246.00                  39860.98 #> Demo_42                      0.00                  27136.01 #> Demo_43                  47753.42                  53039.50 #> Demo_44                  37812.92                  47068.91 #> Demo_45                  31562.81                  40811.38 #> Demo_46                  53894.12                  42422.91 #> Demo_47                  33122.77                  50545.59 #> Demo_48                  51121.57                  48689.09 #> Demo_49                  37191.50                  56513.32 #> Demo_50                  39754.74                  43742.67 #>         HILIC_neg_366_6203a6_1825 HILIC_neg_258_7252a7_5445 #> Demo_1                  20407.385                 21719.108 #> Demo_2                  11824.924                     0.000 #> Demo_3                  24820.316                 17975.869 #> Demo_4                  22235.651                 20275.504 #> Demo_5                  27578.045                 13339.957 #> Demo_6                  33081.784                 26811.349 #> Demo_7                  21967.859                 15787.323 #> Demo_8                  24477.133                 14051.536 #> Demo_9                  12011.694                 14990.826 #> Demo_10                 29570.760                 16021.744 #> Demo_11                 16823.638                 14732.864 #> Demo_12                 26479.872                 14990.402 #> Demo_13                 22799.009                 16053.042 #> Demo_14                 14925.907                 28816.438 #> Demo_15                  3779.282                  9886.803 #> Demo_16                     0.000                 16597.229 #> Demo_17                 24789.207                 13930.601 #> Demo_18                 26017.592                     0.000 #> Demo_19                 14744.494                 15269.402 #> Demo_20                 10767.323                 23194.853 #> Demo_21                 18463.917                 17994.672 #> Demo_22                 23737.757                  6532.707 #> Demo_23                 14638.134                 20254.289 #> Demo_24                 14654.398                 14468.574 #> Demo_25                 19690.217                 15119.437 #> Demo_26                 33628.111                 25972.259 #> Demo_27                 43738.420                 14060.063 #> Demo_28                 38920.972                 17568.667 #> Demo_29                 25339.606                     0.000 #> Demo_30                 16026.673                 18848.659 #> Demo_31                 24447.669                 25969.852 #> Demo_32                 30895.824                 24964.977 #> Demo_33                 27539.887                 23193.403 #> Demo_34                 32358.608                 29485.387 #> Demo_35                 15466.087                 23578.935 #> Demo_36                 17477.273                 17257.608 #> Demo_37                 28121.262                 10947.098 #> Demo_38                 25230.715                 25756.712 #> Demo_39                 25921.651                 23075.758 #> Demo_40                 15495.003                 26648.687 #> Demo_41                 27144.608                 19644.896 #> Demo_42                 28268.474                 31082.863 #> Demo_43                 36805.156                 27245.103 #> Demo_44                 27328.803                 23604.472 #> Demo_45                 15549.532                     0.000 #> Demo_46                 26934.528                 14655.646 #> Demo_47                 22440.892                 23419.421 #> Demo_48                 30193.958                 22614.399 #> Demo_49                 23744.541                 16569.331 #> Demo_50                 29954.555                 20104.256 #>         HILIC_neg_301_2643a4_0372 HILIC_neg_224_4031a4_7409 #> Demo_1                  18747.388                  29970.47 #> Demo_2                  21056.034                      0.00 #> Demo_3                  22028.202                  22825.63 #> Demo_4                  12220.257                  16741.52 #> Demo_5                  25601.913                  36180.95 #> Demo_6                  21556.720                  16751.91 #> Demo_7                  16867.221                  31698.26 #> Demo_8                  17849.753                  30057.68 #> Demo_9                  11702.564                  26811.60 #> Demo_10                 17626.083                  37906.20 #> Demo_11                 28333.850                  28017.32 #> Demo_12                 23174.145                  44153.80 #> Demo_13                 23814.947                  31078.69 #> Demo_14                 15275.948                  38712.77 #> Demo_15                 22951.589                  42041.02 #> Demo_16                  9178.128                  49615.08 #> Demo_17                 20376.735                  43725.69 #> Demo_18                 19181.208                  40616.56 #> Demo_19                 19447.897                  29347.04 #> Demo_20                 22442.310                  39508.30 #> Demo_21                 27012.829                  41253.23 #> Demo_22                 20242.642                      0.00 #> Demo_23                 24218.768                  25361.57 #> Demo_24                 23395.133                  27300.03 #> Demo_25                 20204.375                  33149.86 #> Demo_26                 23322.460                  35927.79 #> Demo_27                 25600.604                  43625.16 #> Demo_28                 28868.500                  31573.34 #> Demo_29                 21493.759                  39540.75 #> Demo_30                 23062.316                  33350.55 #> Demo_31                 32148.477                  34054.61 #> Demo_32                     0.000                  38407.22 #> Demo_33                 26422.062                  36643.74 #> Demo_34                     0.000                      0.00 #> Demo_35                 23523.810                  40055.62 #> Demo_36                 24787.588                  38508.14 #> Demo_37                 29732.518                  39369.03 #> Demo_38                 22504.716                  38755.38 #> Demo_39                 26325.160                  45728.79 #> Demo_40                 21737.927                  38148.70 #> Demo_41                 32497.805                  35327.20 #> Demo_42                     0.000                  42413.82 #> Demo_43                 27877.666                  47702.38 #> Demo_44                 24797.338                  36095.69 #> Demo_45                 33173.856                  30179.09 #> Demo_46                 30474.666                  44621.00 #> Demo_47                 29297.474                      0.00 #> Demo_48                 33850.020                  56906.89 #> Demo_49                 30606.349                  24982.20 #> Demo_50                 30166.579                  37272.09 #>         HILIC_neg_424_8488a6_7736 HILIC_neg_131_2034a6_1385 #> Demo_1                   4584.162                  28764.45 #> Demo_2                   9480.685                  29043.85 #> Demo_3                   6170.495                  37985.11 #> Demo_4                   5798.785                  42171.96 #> Demo_5                   7873.325                  21441.53 #> Demo_6                   6113.233                  32963.00 #> Demo_7                   4658.085                  25720.68 #> Demo_8                   5833.232                  22125.35 #> Demo_9                   7117.037                  23621.76 #> Demo_10                  6020.448                  21970.12 #> Demo_11                  4638.992                  23005.35 #> Demo_12                  8665.416                  23915.50 #> Demo_13                  4786.238                      0.00 #> Demo_14                  2712.126                  19345.74 #> Demo_15                  8165.930                  27486.98 #> Demo_16                  8818.983                  26177.99 #> Demo_17                  7833.805                      0.00 #> Demo_18                  8472.729                  17640.81 #> Demo_19                  4851.780                  27113.31 #> Demo_20                  9225.096                  14260.16 #> Demo_21                  8411.481                  26794.68 #> Demo_22                  8318.806                  21181.02 #> Demo_23                  8206.694                  25583.97 #> Demo_24                  9327.139                  18454.15 #> Demo_25                  5520.189                  20842.66 #> Demo_26                 10891.620                  31585.36 #> Demo_27                 18591.567                  30854.31 #> Demo_28                 16027.009                  32873.73 #> Demo_29                 13539.069                  37982.85 #> Demo_30                 11436.989                      0.00 #> Demo_31                 11238.829                  37110.11 #> Demo_32                 15928.556                  30816.62 #> Demo_33                 13351.460                  38471.30 #> Demo_34                 15340.537                  41939.23 #> Demo_35                     0.000                  28415.68 #> Demo_36                 12210.795                  31958.90 #> Demo_37                 16981.917                  28823.42 #> Demo_38                 17625.226                  32721.08 #> Demo_39                 13843.165                  24240.06 #> Demo_40                 22558.632                  21876.96 #> Demo_41                 17873.816                  35788.37 #> Demo_42                 13322.298                  29430.76 #> Demo_43                 16379.985                  38842.35 #> Demo_44                 14873.408                  31879.34 #> Demo_45                 14971.716                  26331.11 #> Demo_46                 12059.711                  37204.82 #> Demo_47                 14706.747                  30199.91 #> Demo_48                 13242.227                      0.00 #> Demo_49                 14857.510                  34621.43 #> Demo_50                 15420.387                  24833.59 #>         HILIC_neg_236_4114a5_6302 HILIC_neg_411_0148a0_7484 #> Demo_1                   6730.223                 10451.025 #> Demo_2                   6450.798                  8904.868 #> Demo_3                   7298.693                     0.000 #> Demo_4                   5944.421                     0.000 #> Demo_5                   4698.953                  3028.908 #> Demo_6                   6718.519                  7564.719 #> Demo_7                   6214.741                 11313.323 #> Demo_8                   8084.728                     0.000 #> Demo_9                   2760.036                  2450.809 #> Demo_10                  7049.678                  8046.691 #> Demo_11                  7397.450                 15128.055 #> Demo_12                  4519.740                  5515.242 #> Demo_13                  7187.108                  9561.800 #> Demo_14                  5990.387                 11973.005 #> Demo_15                 10094.904                  9627.038 #> Demo_16                  4124.617                  6093.395 #> Demo_17                  1371.436                  4758.459 #> Demo_18                  9555.203                  8284.954 #> Demo_19                  5762.472                  8963.204 #> Demo_20                  3273.295                  9284.226 #> Demo_21                  6066.104                 16398.883 #> Demo_22                  6712.730                  8413.432 #> Demo_23                  3922.494                  6079.153 #> Demo_24                  7530.785                  2202.782 #> Demo_25                  6492.337                  9253.550 #> Demo_26                 14756.324                 19725.333 #> Demo_27                 16326.515                 15272.158 #> Demo_28                 15065.824                 23080.046 #> Demo_29                 11355.853                 13227.037 #> Demo_30                     0.000                 24051.398 #> Demo_31                 12156.898                 17386.947 #> Demo_32                     0.000                 19211.499 #> Demo_33                     0.000                 13464.822 #> Demo_34                 14927.614                  8452.375 #> Demo_35                  8953.228                 20051.281 #> Demo_36                  6134.669                 12730.915 #> Demo_37                 14334.753                 13061.382 #> Demo_38                  9230.829                 16381.022 #> Demo_39                 12826.471                 15604.505 #> Demo_40                 11579.289                 13183.998 #> Demo_41                 10152.675                  8997.162 #> Demo_42                 14745.156                 16702.673 #> Demo_43                 10893.385                     0.000 #> Demo_44                     0.000                 14043.211 #> Demo_45                 13686.945                 12909.350 #> Demo_46                  9822.092                 17816.467 #> Demo_47                 10058.786                 10945.315 #> Demo_48                 12158.939                 17758.685 #> Demo_49                     0.000                 13284.753 #> Demo_50                 11946.250                 21360.166 #>         HILIC_pos_288_6263a6_572 HILIC_pos_331_1173a7_7822 #> Demo_1                  3113.142                  6145.645 #> Demo_2                  4003.686                     0.000 #> Demo_3                  5153.973                  7837.434 #> Demo_4                  3361.070                  7282.767 #> Demo_5                     0.000                  3688.053 #> Demo_6                  7107.812                  5418.314 #> Demo_7                  3958.444                  6340.032 #> Demo_8                  4085.451                  8821.866 #> Demo_9                  4434.875                  4379.451 #> Demo_10                    0.000                     0.000 #> Demo_11                 5913.068                 10149.416 #> Demo_12                 5686.479                  6447.643 #> Demo_13                 5079.491                  7815.173 #> Demo_14                    0.000                  9756.526 #> Demo_15                 4636.997                  4416.548 #> Demo_16                 5500.908                  5251.990 #> Demo_17                 2885.458                  9099.477 #> Demo_18                 7286.623                  4167.711 #> Demo_19                 5442.098                  6704.039 #> Demo_20                 5784.396                  8958.028 #> Demo_21                 7137.167                  8196.795 #> Demo_22                 7909.655                  8045.834 #> Demo_23                 4536.702                  6039.813 #> Demo_24                 5153.757                 11211.144 #> Demo_25                 5025.983                  7166.389 #> Demo_26                12644.079                 14423.429 #> Demo_27                 8193.398                 16030.466 #> Demo_28                16404.135                 12766.818 #> Demo_29                11506.329                 13964.176 #> Demo_30                 9310.297                 12391.435 #> Demo_31                11967.222                 15425.614 #> Demo_32                11722.021                 13893.095 #> Demo_33                13524.295                 14729.486 #> Demo_34                14566.804                 11471.797 #> Demo_35                13565.880                 11502.957 #> Demo_36                    0.000                 15928.296 #> Demo_37                15385.629                 18871.885 #> Demo_38                    0.000                 16987.391 #> Demo_39                12124.287                 15801.291 #> Demo_40                14597.197                 14125.867 #> Demo_41                12614.622                 18170.704 #> Demo_42                13884.145                 13525.433 #> Demo_43                14981.878                 20344.284 #> Demo_44                13423.371                 17060.241 #> Demo_45                11497.692                 13393.026 #> Demo_46                15502.452                 11700.904 #> Demo_47                16854.786                 14070.565 #> Demo_48                13760.223                 13721.647 #> Demo_49                15509.713                 16350.588 #> Demo_50                14062.414                 16739.706 #>         HILIC_pos_139_4044a6_0388 HILIC_pos_132_7373a6_4146 #> Demo_1                  25479.495                 24904.842 #> Demo_2                  15882.013                 35183.770 #> Demo_3                  15237.610                 46117.435 #> Demo_4                  28512.552                 26621.896 #> Demo_5                  24136.095                 27748.321 #> Demo_6                  24168.975                 33280.082 #> Demo_7                  26429.824                     0.000 #> Demo_8                  36514.069                 22225.356 #> Demo_9                  29288.679                 18083.721 #> Demo_10                 23713.178                 22585.722 #> Demo_11                  7588.683                 31390.551 #> Demo_12                 35937.712                 22392.058 #> Demo_13                 25848.415                 19653.802 #> Demo_14                 27915.820                 23101.089 #> Demo_15                 26872.225                     0.000 #> Demo_16                 21083.205                 12247.051 #> Demo_17                 25870.837                 14958.300 #> Demo_18                 12681.458                  9728.945 #> Demo_19                 27711.861                 20057.767 #> Demo_20                 22869.456                 15845.341 #> Demo_21                 19223.845                 34776.995 #> Demo_22                 35998.121                 14295.140 #> Demo_23                 23433.806                 30016.229 #> Demo_24                 38654.396                 24921.947 #> Demo_25                 25652.010                 21701.646 #> Demo_26                 41174.314                 33953.136 #> Demo_27                 25444.819                 40819.818 #> Demo_28                 25341.788                 22784.495 #> Demo_29                 33900.729                 26625.756 #> Demo_30                 30708.521                 31826.559 #> Demo_31                 26362.744                 31451.446 #> Demo_32                 28636.143                 35998.335 #> Demo_33                 31818.049                 38900.451 #> Demo_34                 46705.003                 13665.157 #> Demo_35                 48661.531                 34377.854 #> Demo_36                 27003.169                 25607.076 #> Demo_37                 35663.697                 35482.333 #> Demo_38                 37528.668                 33905.741 #> Demo_39                 45594.225                 34869.328 #> Demo_40                 33850.159                 30723.147 #> Demo_41                 30146.468                 29689.693 #> Demo_42                 29011.809                 24427.147 #> Demo_43                 33398.101                 31361.572 #> Demo_44                 32852.918                 29980.379 #> Demo_45                 37029.863                 20187.818 #> Demo_46                 36292.728                 26774.060 #> Demo_47                 44012.737                 31933.529 #> Demo_48                     0.000                 30372.404 #> Demo_49                 32754.857                 14879.166 #> Demo_50                 38942.573                 33240.226 #>         HILIC_pos_298_6144a3_839 HILIC_pos_410_9203a2_7329 #> Demo_1                      0.00                 14930.345 #> Demo_2                      0.00                  8834.308 #> Demo_3                  33514.19                 13928.428 #> Demo_4                  34221.85                 10449.154 #> Demo_5                      0.00                  9444.274 #> Demo_6                  18549.08                 12525.571 #> Demo_7                  19837.69                  9543.839 #> Demo_8                  44948.42                  9235.287 #> Demo_9                  24414.01                  7093.820 #> Demo_10                 12033.72                  8229.883 #> Demo_11                 36334.00                  6347.627 #> Demo_12                 22594.99                  9900.056 #> Demo_13                 23559.38                     0.000 #> Demo_14                 27171.71                 11931.951 #> Demo_15                 32479.98                  3917.489 #> Demo_16                 38124.20                  9182.999 #> Demo_17                 23817.45                 11172.851 #> Demo_18                 27152.43                 10768.242 #> Demo_19                 22914.64                 10509.655 #> Demo_20                 28999.87                 10988.041 #> Demo_21                 34877.72                  8955.083 #> Demo_22                 25191.63                 11813.556 #> Demo_23                 31358.85                  9824.058 #> Demo_24                 36561.31                  7320.747 #> Demo_25                 25691.61                     0.000 #> Demo_26                 36733.22                 21872.761 #> Demo_27                 44089.71                 22720.556 #> Demo_28                 22189.68                 16855.219 #> Demo_29                 35689.39                 17958.879 #> Demo_30                 30070.70                 15041.238 #> Demo_31                     0.00                 19954.336 #> Demo_32                     0.00                 18275.759 #> Demo_33                 45896.79                     0.000 #> Demo_34                 35913.80                 10408.343 #> Demo_35                 24864.42                 19934.668 #> Demo_36                 35287.67                 16228.368 #> Demo_37                 37710.36                 15069.710 #> Demo_38                 35104.21                 18969.050 #> Demo_39                 32734.23                 17495.591 #> Demo_40                 35373.25                 20056.094 #> Demo_41                 40901.04                 13142.361 #> Demo_42                     0.00                 15554.054 #> Demo_43                 40868.87                 14367.172 #> Demo_44                 41466.64                 16341.331 #> Demo_45                 32593.19                  7847.206 #> Demo_46                 31778.52                 11447.992 #> Demo_47                 36384.83                 15763.075 #> Demo_48                 30505.82                 15093.431 #> Demo_49                     0.00                 14743.118 #> Demo_50                 39473.76                 17946.651 #>         HILIC_pos_145_8514a2_811 HILIC_pos_306_0061a4_4049 #> Demo_1                 20703.248                  30383.86 #> Demo_2                 19376.832                  27428.01 #> Demo_3                 25651.766                  44310.28 #> Demo_4                 26375.229                  34395.82 #> Demo_5                 25411.517                  32915.66 #> Demo_6                 15108.192                  38564.77 #> Demo_7                 22046.809                  25689.08 #> Demo_8                 30216.681                  26414.12 #> Demo_9                 29993.046                  30752.24 #> Demo_10                 8511.838                  23720.57 #> Demo_11                    0.000                  39119.94 #> Demo_12                26755.729                  39028.68 #> Demo_13                22281.546                  32272.57 #> Demo_14                12689.704                  39794.79 #> Demo_15                13925.333                  29835.27 #> Demo_16                11956.487                  24185.47 #> Demo_17                18073.732                  41131.32 #> Demo_18                15210.411                  22089.81 #> Demo_19                19874.610                  27776.28 #> Demo_20                21429.776                  18653.77 #> Demo_21                15761.566                  30773.35 #> Demo_22                15625.054                  42340.19 #> Demo_23                19637.372                  37307.90 #> Demo_24                20511.822                  47296.36 #> Demo_25                13856.877                      0.00 #> Demo_26                25640.659                  38067.54 #> Demo_27                29681.769                  36188.99 #> Demo_28                21726.965                  29897.46 #> Demo_29                29872.939                  36770.23 #> Demo_30                31772.170                  32802.15 #> Demo_31                17319.727                  41240.84 #> Demo_32                31624.473                  36531.38 #> Demo_33                26319.326                  50296.55 #> Demo_34                22277.184                  47515.38 #> Demo_35                31237.759                  44358.53 #> Demo_36                21837.442                  34411.94 #> Demo_37                23019.203                  46318.94 #> Demo_38                23151.903                  43426.00 #> Demo_39                24801.099                  43329.23 #> Demo_40                19331.064                  34212.79 #> Demo_41                19548.457                      0.00 #> Demo_42                37368.337                  28315.40 #> Demo_43                26373.759                  45718.29 #> Demo_44                22337.945                  41527.34 #> Demo_45                18817.283                  55179.13 #> Demo_46                    0.000                  48344.15 #> Demo_47                31306.741                  39918.37 #> Demo_48                25895.451                  41407.88 #> Demo_49                33563.835                  57229.92 #> Demo_50                25933.481                  39292.32 #>         HILIC_pos_425_8858a4_4494 HILIC_pos_436_332a6_1165 #> Demo_1                   2911.468                3671.8894 #> Demo_2                   1991.686                3403.3083 #> Demo_3                   3984.204                4135.5470 #> Demo_4                   2691.886                 713.3901 #> Demo_5                   2249.732                3728.9366 #> Demo_6                   3505.323                3546.3149 #> Demo_7                   3179.889                   0.0000 #> Demo_8                      0.000                3587.5813 #> Demo_9                   4313.273                3964.1746 #> Demo_10                  3026.065                3627.0608 #> Demo_11                  3188.728                4954.1139 #> Demo_12                  4095.151                2852.5570 #> Demo_13                  3607.163                3786.3693 #> Demo_14                  3510.929                4727.4707 #> Demo_15                  4357.724                4726.3262 #> Demo_16                  3177.963                4330.8641 #> Demo_17                     0.000                   0.0000 #> Demo_18                  3743.162                4047.8533 #> Demo_19                  3341.837                4192.6431 #> Demo_20                  5620.308                4384.9440 #> Demo_21                  2765.009                3281.3442 #> Demo_22                  3489.281                2459.5896 #> Demo_23                  2026.240                4312.9920 #> Demo_24                  3429.106                4845.5462 #> Demo_25                  3080.462                3879.5330 #> Demo_26                  9520.289                9501.1954 #> Demo_27                 11448.902               13674.4774 #> Demo_28                  5608.585               11714.2210 #> Demo_29                 12089.233               12382.4281 #> Demo_30                 13161.217               13623.7625 #> Demo_31                 14218.275                8995.0657 #> Demo_32                 12438.835               11823.2117 #> Demo_33                 10230.274               12329.9880 #> Demo_34                 12679.971                9311.1555 #> Demo_35                 15276.493               11658.3713 #> Demo_36                  9550.301                8030.0447 #> Demo_37                  9549.278               12211.7094 #> Demo_38                     0.000               11745.6344 #> Demo_39                 12706.637               12034.9821 #> Demo_40                  5186.100               10344.8541 #> Demo_41                 11938.494               12459.6281 #> Demo_42                 10611.768                   0.0000 #> Demo_43                 13762.516               16603.1144 #> Demo_44                 11368.197               13088.4519 #> Demo_45                 13669.552               12808.6770 #> Demo_46                 14763.727                9196.6310 #> Demo_47                 11579.447               14268.6300 #> Demo_48                 13898.885               14358.0586 #> Demo_49                 13412.272               13941.5264 #> Demo_50                     0.000               12377.0714 #>         HILIC_pos_255_0094a7_9288 HILIC_pos_417_1474a2_8239 #> Demo_1                       0.00                 10493.154 #> Demo_2                   13337.36                 13203.846 #> Demo_3                   24720.58                  7404.564 #> Demo_4                   19596.66                  8473.505 #> Demo_5                   13502.05                 10585.893 #> Demo_6                   33232.92                  7606.321 #> Demo_7                   22658.54                 10503.249 #> Demo_8                   23490.84                 10248.730 #> Demo_9                   13453.53                 12484.654 #> Demo_10                  23476.89                  7941.329 #> Demo_11                  16704.43                 14304.507 #> Demo_12                  17526.23                  9452.752 #> Demo_13                  24666.39                 10867.548 #> Demo_14                  16573.71                  6352.073 #> Demo_15                      0.00                  5925.690 #> Demo_16                  24214.43                 10981.350 #> Demo_17                  12960.03                  5326.426 #> Demo_18                  16199.38                  9685.036 #> Demo_19                      0.00                  9400.199 #> Demo_20                  24957.66                  6573.978 #> Demo_21                  16358.50                 11576.244 #> Demo_22                  23738.86                  8245.232 #> Demo_23                  17986.24                  5671.661 #> Demo_24                  13415.70                 14366.342 #> Demo_25                  23120.81                  8537.976 #> Demo_26                  20955.82                 20193.923 #> Demo_27                  12923.76                 12707.669 #> Demo_28                  16717.05                  9098.358 #> Demo_29                  32602.76                 21476.455 #> Demo_30                  19575.83                     0.000 #> Demo_31                  29798.04                 16656.780 #> Demo_32                  19070.55                 20069.459 #> Demo_33                  25906.51                 22208.184 #> Demo_34                  28314.75                 17748.230 #> Demo_35                      0.00                 14271.070 #> Demo_36                  15868.32                 17260.872 #> Demo_37                      0.00                  6765.865 #> Demo_38                  25630.70                 15821.806 #> Demo_39                  27531.40                 10972.532 #> Demo_40                  21112.02                  9275.281 #> Demo_41                  20060.91                 13879.630 #> Demo_42                  23462.60                 12865.547 #> Demo_43                  25551.71                 13311.767 #> Demo_44                  24317.53                 14377.448 #> Demo_45                  32431.21                 18682.467 #> Demo_46                  30186.02                 11147.725 #> Demo_47                  24222.25                 17112.176 #> Demo_48                  28474.70                 15598.136 #> Demo_49                  26077.99                 12263.191 #> Demo_50                  24837.68                 18659.631 #>         HILIC_pos_297_8334a0_6647 HILIC_pos_449_2162a0_7574 #> Demo_1                   9501.849                      0.00 #> Demo_2                  14209.238                  45756.94 #> Demo_3                  14481.987                  34353.29 #> Demo_4                   4733.672                  29066.38 #> Demo_5                      0.000                  38225.24 #> Demo_6                  13809.009                  49100.26 #> Demo_7                  10656.428                      0.00 #> Demo_8                  10928.814                  36432.02 #> Demo_9                  15525.204                  29761.98 #> Demo_10                  7458.002                  53952.95 #> Demo_11                 10497.378                  58338.19 #> Demo_12                 10193.698                  34071.51 #> Demo_13                 11203.791                  46009.76 #> Demo_14                     0.000                  40433.01 #> Demo_15                     0.000                  32006.08 #> Demo_16                 11301.403                  48301.09 #> Demo_17                 13920.835                  21394.58 #> Demo_18                  8419.883                  37503.17 #> Demo_19                 10629.898                      0.00 #> Demo_20                  8827.931                  46104.58 #> Demo_21                  7812.028                  47757.47 #> Demo_22                  7020.523                  46186.87 #> Demo_23                  9138.228                  56182.15 #> Demo_24                 11048.782                  47815.09 #> Demo_25                  9696.774                      0.00 #> Demo_26                 18348.552                  49605.41 #> Demo_27                 13479.490                  47446.16 #> Demo_28                 14298.527                  55631.89 #> Demo_29                 15499.470                  41517.67 #> Demo_30                 14442.385                  53760.79 #> Demo_31                 17553.366                  46599.43 #> Demo_32                 20766.879                  54915.19 #> Demo_33                 17517.691                  51412.16 #> Demo_34                 18331.261                  59180.92 #> Demo_35                 22978.283                  40378.62 #> Demo_36                 17500.841                  42271.36 #> Demo_37                 21082.745                  40440.71 #> Demo_38                 21493.945                  71550.00 #> Demo_39                 17954.342                  62663.55 #> Demo_40                 17486.661                  46823.30 #> Demo_41                 19187.024                  43577.15 #> Demo_42                 16616.745                  55241.72 #> Demo_43                 23546.508                  55306.93 #> Demo_44                 17864.623                  59613.17 #> Demo_45                 19532.356                  40208.38 #> Demo_46                     0.000                  45465.87 #> Demo_47                 20430.461                  41280.44 #> Demo_48                 20916.768                  63962.84 #> Demo_49                 17582.500                  62498.91 #> Demo_50                 20291.269                  73285.51 #>         HILIC_pos_197_7438a7_72 HILIC_pos_141_601a7_387 #> Demo_1                 21291.82               23384.932 #> Demo_2                 34127.98               26769.867 #> Demo_3                 20363.48               22887.029 #> Demo_4                 17091.97               20942.324 #> Demo_5                 31996.57               23913.744 #> Demo_6                 12060.04               22169.451 #> Demo_7                 20558.79               19634.578 #> Demo_8                 40900.50               26689.933 #> Demo_9                 33431.14               19341.016 #> Demo_10                24935.21               15110.870 #> Demo_11                27837.61               15601.820 #> Demo_12                21365.28                7576.654 #> Demo_13                22461.83               20777.446 #> Demo_14                27031.65                   0.000 #> Demo_15                31049.50               27677.818 #> Demo_16                25482.06               13776.654 #> Demo_17                20589.34               25678.100 #> Demo_18                24177.10                9538.590 #> Demo_19                22762.19               18700.597 #> Demo_20                    0.00               32374.447 #> Demo_21                25652.87               19905.911 #> Demo_22                24259.32               27532.190 #> Demo_23                17920.17               19583.671 #> Demo_24                30167.72               11635.678 #> Demo_25                23583.49               22774.183 #> Demo_26                21188.95               32195.530 #> Demo_27                31293.25               30073.147 #> Demo_28                40007.95               30087.200 #> Demo_29                32318.43                   0.000 #> Demo_30                27947.09               20610.624 #> Demo_31                24585.42               25014.381 #> Demo_32                30358.08               24162.685 #> Demo_33                34976.95               23581.379 #> Demo_34                37409.91               26955.651 #> Demo_35                33133.90               37049.576 #> Demo_36                25885.77                   0.000 #> Demo_37                24924.45                   0.000 #> Demo_38                    0.00                   0.000 #> Demo_39                33977.36               32744.845 #> Demo_40                29792.69               13450.799 #> Demo_41                    0.00               18132.204 #> Demo_42                26587.05               24253.449 #> Demo_43                30170.94               27028.439 #> Demo_44                34582.03                   0.000 #> Demo_45                33645.92                   0.000 #> Demo_46                    0.00               31181.930 #> Demo_47                24496.20               16532.918 #> Demo_48                26450.33               24632.469 #> Demo_49                27307.49               26844.408 #> Demo_50                34259.65               18449.918 #>         HILIC_pos_448_1172a6_8567 HILIC_pos_346_6405a3_2719 #> Demo_1                   3503.792                 26549.654 #> Demo_2                   6580.277                 27838.422 #> Demo_3                   3640.264                 33747.768 #> Demo_4                   4463.996                 12663.144 #> Demo_5                   5648.307                 14842.366 #> Demo_6                   6911.674                 39551.769 #> Demo_7                   4068.310                 24861.292 #> Demo_8                   5707.620                 18621.321 #> Demo_9                   3764.727                 25436.161 #> Demo_10                  5979.400                 32876.148 #> Demo_11                  7440.551                 29596.416 #> Demo_12                  7341.835                 30963.092 #> Demo_13                  4697.705                 24158.613 #> Demo_14                  6150.538                     0.000 #> Demo_15                  4077.477                  6994.093 #> Demo_16                  3134.353                 14497.329 #> Demo_17                  5802.400                 29457.665 #> Demo_18                     0.000                 24721.483 #> Demo_19                  4581.453                 24410.586 #> Demo_20                  6602.982                 13537.482 #> Demo_21                  6951.016                 31239.718 #> Demo_22                  4320.621                 27977.134 #> Demo_23                  6518.310                  9085.253 #> Demo_24                  2765.345                 18762.233 #> Demo_25                  4643.586                 26678.703 #> Demo_26                 10799.300                 40272.149 #> Demo_27                 12715.247                 35566.951 #> Demo_28                 14954.008                 23356.267 #> Demo_29                 12827.375                 36906.882 #> Demo_30                 16348.899                 38617.759 #> Demo_31                 12299.613                 33083.623 #> Demo_32                 12970.085                 35168.907 #> Demo_33                 13376.061                 36401.443 #> Demo_34                 13398.106                 29760.774 #> Demo_35                     0.000                 46761.238 #> Demo_36                 15598.557                 36782.072 #> Demo_37                 12975.111                 34041.148 #> Demo_38                 15400.912                 32333.021 #> Demo_39                     0.000                 40069.664 #> Demo_40                  9494.677                 40396.796 #> Demo_41                 12785.330                 31615.481 #> Demo_42                 11794.328                 49942.331 #> Demo_43                 14841.262                 36911.558 #> Demo_44                 13953.159                 38570.370 #> Demo_45                 10827.981                 25936.629 #> Demo_46                 16492.251                 41056.443 #> Demo_47                     0.000                     0.000 #> Demo_48                 11361.743                 25131.935 #> Demo_49                 11974.741                 32929.174 #> Demo_50                 15600.289                 29251.751 #>         HILIC_pos_334_3285a1_7395 HILIC_pos_215_5364a2_6707 #> Demo_1                   2520.257                 18036.569 #> Demo_2                   4484.835                 26925.689 #> Demo_3                   3158.478                 15976.491 #> Demo_4                   2166.096                  9958.128 #> Demo_5                   4152.352                 21875.652 #> Demo_6                   4655.574                 19710.098 #> Demo_7                      0.000                 18648.270 #> Demo_8                      0.000                  7519.704 #> Demo_9                   1767.724                 16960.280 #> Demo_10                  4168.191                 18086.413 #> Demo_11                  3225.845                 16689.624 #> Demo_12                  2825.307                 11932.611 #> Demo_13                  2009.037                 17840.065 #> Demo_14                  2937.579                 30060.476 #> Demo_15                  2959.819                 15084.499 #> Demo_16                  2498.826                 13185.044 #> Demo_17                  2300.258                 11090.048 #> Demo_18                  1785.583                 20696.818 #> Demo_19                  1798.068                 12250.746 #> Demo_20                  2499.650                  9841.890 #> Demo_21                  3884.149                 14615.084 #> Demo_22                  3991.222                 28059.620 #> Demo_23                  2089.609                  9411.453 #> Demo_24                  2958.231                 24843.999 #> Demo_25                  1826.185                 14522.090 #> Demo_26                 11703.290                 29070.983 #> Demo_27                 13134.249                 22367.414 #> Demo_28                 11702.917                 31413.189 #> Demo_29                  9503.439                 30609.456 #> Demo_30                 10943.467                 23785.173 #> Demo_31                 13557.933                 31301.776 #> Demo_32                  7804.920                 25129.140 #> Demo_33                 12749.854                 27150.978 #> Demo_34                  8918.390                 18191.754 #> Demo_35                  8374.824                 13626.326 #> Demo_36                  8915.750                 31173.563 #> Demo_37                  9944.999                 17146.749 #> Demo_38                     0.000                 23576.358 #> Demo_39                  8846.154                 16324.803 #> Demo_40                  8735.961                 23762.770 #> Demo_41                 10869.691                 17332.474 #> Demo_42                  7278.923                 25640.408 #> Demo_43                  5429.293                 17927.253 #> Demo_44                  9768.366                 16856.307 #> Demo_45                     0.000                 28307.437 #> Demo_46                  7410.862                 30663.918 #> Demo_47                  7352.607                 22485.680 #> Demo_48                 10324.584                     0.000 #> Demo_49                  7093.728                 15258.965 #> Demo_50                  8587.537                 21107.233 #>         RP_neg_458_0877a1_5798 RP_neg_365_8511a5_6086 RP_neg_369_5116a6_4389 #> Demo_1               27642.481               32671.39              16537.304 #> Demo_2               37436.871               27950.34              27895.376 #> Demo_3                   0.000               33031.30              16739.227 #> Demo_4               23706.824               30040.74              20086.876 #> Demo_5               28551.317               46248.78              13822.591 #> Demo_6               36062.751               17049.42              16574.173 #> Demo_7               15189.138               33248.10              14072.142 #> Demo_8               14347.975               43929.23              10516.738 #> Demo_9               10506.528               36950.00              19539.999 #> Demo_10              21150.346               45416.39               5849.686 #> Demo_11              29435.464               39404.15              21036.884 #> Demo_12              27273.458               32609.91              20162.300 #> Demo_13                  0.000               39753.93              12364.188 #> Demo_14              22242.712               41087.93              12658.214 #> Demo_15              42620.366               24795.75              13088.960 #> Demo_16              21479.796               48372.72              24919.971 #> Demo_17              28542.284               35462.79              33660.272 #> Demo_18              18556.520               42250.68              15202.575 #> Demo_19              17119.956               37556.59              12175.168 #> Demo_20              31821.961               33581.09              13098.737 #> Demo_21              26313.706                   0.00              18544.031 #> Demo_22              23329.344               30574.93              17280.538 #> Demo_23              15757.859               33766.85              13227.682 #> Demo_24               7882.718                   0.00              23480.221 #> Demo_25              15154.520               27243.94              13082.445 #> Demo_26              44372.517               41882.50              28412.307 #> Demo_27              34967.009               45517.27              27215.066 #> Demo_28              28197.602               29091.82                  0.000 #> Demo_29                  0.000               34372.32              30515.162 #> Demo_30              35970.496               36698.39              26551.516 #> Demo_31              39262.516               55770.46              28039.705 #> Demo_32              29745.720               42011.75                  0.000 #> Demo_33              40053.048               41194.85              17739.658 #> Demo_34              21598.006               46200.00              28765.316 #> Demo_35              21625.722               39362.01              14803.010 #> Demo_36              27472.090               42861.96              28942.719 #> Demo_37              23901.500               59536.44              27861.609 #> Demo_38              31303.522               40475.58              25551.010 #> Demo_39              45044.697               56802.92              27553.354 #> Demo_40              13385.153               51348.56              24822.664 #> Demo_41              16703.495               57909.20              24690.258 #> Demo_42              33044.518               58006.44              15841.343 #> Demo_43              35875.416               31471.04              20671.965 #> Demo_44              25711.965               35685.24              18281.220 #> Demo_45              27387.870               43649.34              22428.713 #> Demo_46              33177.136               34826.27              13811.226 #> Demo_47              31502.822               27699.63              24030.967 #> Demo_48              18448.306               31228.78                  0.000 #> Demo_49              24012.839               36220.74              21093.366 #> Demo_50              30677.385               41284.59              24614.832 #>         RP_neg_222_4828a6_0392 RP_neg_114_84a3_0917 RP_neg_317_554a3_063 #> Demo_1               12737.326             21222.53            17485.507 #> Demo_2               12262.340             17336.15             5089.053 #> Demo_3               20521.124             29287.73            17116.180 #> Demo_4               11604.946             42751.76            20373.882 #> Demo_5               13334.002             12769.09            24910.096 #> Demo_6               14529.382                 0.00            26241.392 #> Demo_7               15018.955             21441.19            19918.535 #> Demo_8               12670.688             27726.69            16597.437 #> Demo_9               11706.755             11470.18            24709.202 #> Demo_10              19199.972             25622.25            23676.447 #> Demo_11              14901.825             19941.93            21765.879 #> Demo_12              16855.952             30795.04            19504.403 #> Demo_13              13130.352             21231.58            23779.790 #> Demo_14              18924.757             36472.65            24148.774 #> Demo_15               9466.138             20194.40            15095.094 #> Demo_16              13580.032             18816.53            22707.561 #> Demo_17              10932.804             24272.97            31966.644 #> Demo_18              13352.876                 0.00            19574.570 #> Demo_19              10963.922             22509.63                0.000 #> Demo_20               7956.729             17792.90            22362.133 #> Demo_21              18012.061             26908.68            26947.900 #> Demo_22                  0.000             28784.75            14994.429 #> Demo_23               9339.200             23405.99            28200.475 #> Demo_24              14479.052             23530.49                0.000 #> Demo_25              12181.257             17214.77            21264.792 #> Demo_26                  0.000             33516.37            21259.811 #> Demo_27              21795.345             30922.91            30136.213 #> Demo_28              20659.721             45328.81                0.000 #> Demo_29              14340.492             24751.39            17459.046 #> Demo_30              18011.514             32692.19            27126.616 #> Demo_31              18664.597             28384.65            21427.755 #> Demo_32              17660.064             33521.79            27969.138 #> Demo_33              21028.267             35720.57            19775.067 #> Demo_34              12540.307             27660.78            25452.577 #> Demo_35              26178.605             24784.85            24864.757 #> Demo_36              12997.451             18489.98            30480.002 #> Demo_37               3927.301             21526.28            30113.697 #> Demo_38              15323.747                 0.00            28114.126 #> Demo_39                  0.000             37069.97            22829.219 #> Demo_40              21688.372             33101.19            22169.668 #> Demo_41              18561.123             26394.55            32337.511 #> Demo_42                  0.000             25779.66            28402.166 #> Demo_43              17232.268             31033.21            14751.433 #> Demo_44              18188.171             30437.58            30395.846 #> Demo_45              16159.681             25965.36            30836.692 #> Demo_46              16375.903             24315.93            28598.604 #> Demo_47              12944.947             26917.77            33874.212 #> Demo_48              19041.077             43704.84            27659.735 #> Demo_49              16627.286             32817.33            30904.473 #> Demo_50              13962.245                 0.00            30772.826 #>         RP_neg_419_897a3_9617 RP_neg_493_3039a6_7816 RP_neg_359_0517a7_3652 #> Demo_1                   0.00               9779.074                   0.00 #> Demo_2                   0.00              13820.369                   0.00 #> Demo_3               21774.90               9138.159               30294.51 #> Demo_4               19642.50               5393.755               29770.45 #> Demo_5               23385.12               6582.631               20930.37 #> Demo_6               17191.46              17523.772               25778.04 #> Demo_7               18419.85              11113.036               24157.68 #> Demo_8               11790.13               6341.112                   0.00 #> Demo_9               12166.92                  0.000                   0.00 #> Demo_10              16696.80               8587.576               28396.62 #> Demo_11              11656.17              15088.259               29417.47 #> Demo_12              21277.61              10248.920               34570.18 #> Demo_13              18326.41               9740.764               25771.43 #> Demo_14              22579.12               8857.284                   0.00 #> Demo_15              12101.67               9523.228               19571.69 #> Demo_16              15650.16                  0.000               26893.15 #> Demo_17              12775.74               9297.974               35659.34 #> Demo_18                  0.00               8806.995               26553.97 #> Demo_19              18217.77               8175.174               25577.40 #> Demo_20              19578.43               8747.813               25164.58 #> Demo_21              20712.93               6163.309               20757.69 #> Demo_22              21311.91               7641.870               23699.18 #> Demo_23              15959.24               6642.146               18765.58 #> Demo_24              17615.78               5995.287               17040.49 #> Demo_25              21282.09               9703.572               23976.60 #> Demo_26              20974.72              15809.050               30076.33 #> Demo_27              25394.29              18818.111               35137.56 #> Demo_28              22514.74              16603.727               29597.37 #> Demo_29              22295.14              14481.734                   0.00 #> Demo_30              21784.90              14576.411               33402.51 #> Demo_31              22266.19                  0.000               42626.02 #> Demo_32              21713.65              12574.154               34898.22 #> Demo_33              25586.43              11917.186               30121.98 #> Demo_34              24769.48              13590.046               44165.76 #> Demo_35              26005.09              12902.608               34426.92 #> Demo_36              25936.71              10874.295               45854.22 #> Demo_37              27968.32              16985.851               37981.52 #> Demo_38              23215.90              16461.930               40362.58 #> Demo_39              21749.12              18515.000               43843.52 #> Demo_40              25890.81              16423.054               34758.37 #> Demo_41              30336.16              19571.502                   0.00 #> Demo_42              26259.54              10610.427                   0.00 #> Demo_43              19142.72              13631.816                   0.00 #> Demo_44              28673.51              11265.952               40841.38 #> Demo_45              27760.61               8545.218               34692.31 #> Demo_46              24273.37              21351.354               37077.04 #> Demo_47              32689.22              15385.429               44226.56 #> Demo_48              28966.69              15708.151               34267.69 #> Demo_49              28363.46              10895.964               29177.68 #> Demo_50              25357.15              11761.493               36902.98 #>         RP_neg_435_8009a6_2215 RP_neg_358_2061a5_2818 RP_neg_397_2502a3_7998 #> Demo_1                23591.56               5137.148              24761.416 #> Demo_2                20624.80               1062.904              17813.049 #> Demo_3                19754.69                  0.000              28305.690 #> Demo_4                21873.68               2840.441              21454.607 #> Demo_5                31685.66               4975.144              12252.365 #> Demo_6                25034.63               7327.390                  0.000 #> Demo_7                31756.51               4560.634                  0.000 #> Demo_8                41633.29               2335.304              13726.383 #> Demo_9                31581.84               4632.903              18999.621 #> Demo_10               25373.25               2975.278               9130.927 #> Demo_11               34229.64               5161.700              12921.777 #> Demo_12               24094.21               5465.525              26639.268 #> Demo_13               27460.72               4784.685              19958.353 #> Demo_14               21372.48               7200.389              20674.615 #> Demo_15               16971.95               4160.075              25355.620 #> Demo_16               23837.99               4909.613              17333.640 #> Demo_17               17144.72               5125.793              16197.176 #> Demo_18               34430.58               6716.246              11694.755 #> Demo_19               25870.74               4560.413              20157.389 #> Demo_20               40519.78               4060.557              10366.435 #> Demo_21               36081.26               4540.130              18104.311 #> Demo_22               40312.90                  0.000              20239.706 #> Demo_23                   0.00               5857.398              15619.287 #> Demo_24               23892.80               3862.531              14754.826 #> Demo_25               30086.04                  0.000              18840.376 #> Demo_26                   0.00              10850.890              31134.710 #> Demo_27               25808.15              10851.386                  0.000 #> Demo_28               36506.67               9763.750              22015.585 #> Demo_29               30120.41                  0.000              20259.298 #> Demo_30               32502.08               5708.827              27717.342 #> Demo_31               38419.13               7434.272              36305.244 #> Demo_32               38934.64               8745.126              28342.810 #> Demo_33               36863.17                  0.000              23927.307 #> Demo_34               35096.85              11856.572              24300.946 #> Demo_35               24305.40               8359.917              23694.553 #> Demo_36               30909.43              11187.666              20835.347 #> Demo_37                   0.00              11728.549              17196.525 #> Demo_38               41774.01              10336.185              29051.143 #> Demo_39               40494.67               6494.979              32521.046 #> Demo_40                   0.00               7814.128              18569.140 #> Demo_41               36426.36              14430.175              20830.357 #> Demo_42               27117.24               6162.744              25136.707 #> Demo_43               45691.03              11488.183              20582.916 #> Demo_44               42879.28              13064.379              22895.914 #> Demo_45               33259.46               9546.759              23953.980 #> Demo_46               37716.80               7343.381              32680.118 #> Demo_47               34958.01              10700.879              20408.669 #> Demo_48               39518.91               9157.886              30586.457 #> Demo_49               26951.10               8223.422              33129.008 #> Demo_50               39913.47               8297.671              24697.754 #>         RP_neg_165_9294a3_4261 RP_neg_413_1764a3_6741 RP_neg_115_4062a7_7329 #> Demo_1                17516.04               14353.05               20556.32 #> Demo_2                29397.39                   0.00               34270.08 #> Demo_3                15299.98               18387.16               37528.37 #> Demo_4                21085.76               11915.74               27943.91 #> Demo_5                21096.56               14801.10               32495.07 #> Demo_6                    0.00               18811.73               31937.42 #> Demo_7                19266.24                   0.00               25034.04 #> Demo_8                19231.71                   0.00               32434.98 #> Demo_9                16087.32               13239.26               26591.53 #> Demo_10               19976.81               15056.36               40782.10 #> Demo_11               14829.07               17184.09               27357.66 #> Demo_12               31619.49               18990.93               38389.26 #> Demo_13               20752.05               16451.49               28309.57 #> Demo_14               22879.62               19225.14               11928.36 #> Demo_15               17440.35                   0.00               37072.39 #> Demo_16               24100.16               15492.45               43181.02 #> Demo_17               28991.92               24315.39               22173.29 #> Demo_18               25622.83               17387.14               19254.55 #> Demo_19               17582.84               17332.35               31161.78 #> Demo_20               19361.07               14239.22               24313.77 #> Demo_21               15959.27               19002.54               50885.68 #> Demo_22               12439.37               15777.16               32697.86 #> Demo_23               29771.54               17151.89               29593.39 #> Demo_24               21432.29               19063.96               43437.95 #> Demo_25               16869.38               19045.05               25307.76 #> Demo_26               22080.85               19626.80               26387.84 #> Demo_27               22302.41               24560.42               29264.25 #> Demo_28               21918.49               18239.20               39219.41 #> Demo_29               27694.75               26747.22               45900.60 #> Demo_30               24723.14               30958.02               35105.40 #> Demo_31                   0.00               22234.04               38449.21 #> Demo_32               22769.02               24211.90               33445.59 #> Demo_33               24140.11               26967.84               35706.35 #> Demo_34               20812.22               24843.10               35705.20 #> Demo_35               27663.04               28535.39               38608.90 #> Demo_36               25086.75               27910.30               25055.19 #> Demo_37               26988.56               23744.07               43443.96 #> Demo_38               26956.55               27724.02               40180.75 #> Demo_39                   0.00               23354.05               37515.14 #> Demo_40               32344.70               29059.84               39258.83 #> Demo_41               26778.63               35298.19               32457.99 #> Demo_42               27804.08                   0.00               44455.67 #> Demo_43               33682.56               25263.22               43104.21 #> Demo_44               22596.98               25992.97               31968.23 #> Demo_45               29719.83               25514.92               40207.25 #> Demo_46               29608.53               32815.47               37394.07 #> Demo_47               29763.49               36373.84               36688.81 #> Demo_48               21045.59               29883.41               35346.14 #> Demo_49               33972.94               34327.48               29917.80 #> Demo_50               24559.68               27536.17               40021.53 #>         RP_neg_300_1295a1_6959 RP_neg_177_6084a5_2913 RP_neg_134_1196a2_9606 #> Demo_1               27124.802               3844.446               8048.658 #> Demo_2               26243.120               3591.619               9553.202 #> Demo_3               16804.431               2489.554               7721.296 #> Demo_4               20980.827               3287.172              10053.116 #> Demo_5               24274.694               5319.787              12673.406 #> Demo_6               22977.023               3836.802               8298.799 #> Demo_7               17577.247               5005.347               7964.492 #> Demo_8                   0.000               4545.676               9611.455 #> Demo_9               21356.903               5272.824               9382.784 #> Demo_10              13384.424               4048.895               9711.342 #> Demo_11              23609.938               5606.626              12942.282 #> Demo_12                  0.000               3415.074              12468.738 #> Demo_13              16572.113               4322.341                  0.000 #> Demo_14              11159.152               6900.563              13382.513 #> Demo_15              16452.866               4445.037              11655.122 #> Demo_16              16857.022               4984.288               9029.119 #> Demo_17              22037.681               4622.970              15244.075 #> Demo_18              20459.055                  0.000              11360.741 #> Demo_19                  0.000               4757.415              10370.051 #> Demo_20              33044.931               4066.688               9088.742 #> Demo_21               9327.979               4233.280              12702.893 #> Demo_22              19073.668               4114.431               7722.969 #> Demo_23              28817.285               5130.480              10628.662 #> Demo_24               6959.217               7189.575                  0.000 #> Demo_25              15745.236               5516.610              11020.450 #> Demo_26              35678.177              10494.752                  0.000 #> Demo_27              23088.187              10204.507              15068.110 #> Demo_28              28942.317                  0.000                  0.000 #> Demo_29              25254.199              13191.517              19318.712 #> Demo_30              22773.594              12440.886              23722.862 #> Demo_31              34369.488              13016.650              17313.285 #> Demo_32              26628.607              12365.865              21500.613 #> Demo_33              39745.901              15021.963              22655.086 #> Demo_34              32208.033              10736.814              16192.492 #> Demo_35              21971.222               8289.710              23362.501 #> Demo_36              27546.073              12696.642              19238.994 #> Demo_37              20468.534              11219.611              11766.207 #> Demo_38              24317.661              14730.527              20952.064 #> Demo_39              36349.704              10195.412                  0.000 #> Demo_40              10526.608                  0.000              17236.999 #> Demo_41              18439.150              13824.537              21113.560 #> Demo_42              19172.551              12466.826              20241.756 #> Demo_43              25144.741              13601.241              22595.221 #> Demo_44              28798.756              15493.604              17984.280 #> Demo_45              14332.396                  0.000              19337.527 #> Demo_46              25236.760                  0.000              23892.910 #> Demo_47              20781.864              16047.475              19899.925 #> Demo_48              31783.673              14082.544                  0.000 #> Demo_49              18409.453              13976.344                  0.000 #> Demo_50              24056.015              14684.550              22821.011 #>         RP_neg_139_4456a4_1251 RP_neg_385_6867a4_136 RP_pos_490_9235a4_0176 #> Demo_1                22042.14              9795.431               4237.887 #> Demo_2                29859.39             18156.735               4288.364 #> Demo_3                18245.79             10485.267               6012.477 #> Demo_4                17532.16             14809.505               9460.195 #> Demo_5                10807.08             14535.747               4982.011 #> Demo_6                10783.53             16186.823               6759.604 #> Demo_7                24200.61             12214.572               4456.269 #> Demo_8                20806.63             20485.445               7371.201 #> Demo_9                21868.19             19333.127               6590.484 #> Demo_10               14705.41              4166.869               6929.498 #> Demo_11               31497.58             14477.118               3315.220 #> Demo_12                   0.00             19040.040               5341.234 #> Demo_13               21671.99             12899.580               5763.631 #> Demo_14               14579.33             15467.870               2736.921 #> Demo_15                   0.00             13196.707               2095.365 #> Demo_16               19964.34             14205.721               4018.296 #> Demo_17               25745.66              9882.021               3310.710 #> Demo_18               18911.47             11549.446               7050.537 #> Demo_19                   0.00             15165.405               4993.150 #> Demo_20               26254.56             18982.906               5269.439 #> Demo_21               22899.63             16439.349               5038.686 #> Demo_22               27303.80             15881.207               6369.101 #> Demo_23               19901.34             13475.659               8322.629 #> Demo_24               16701.05             10083.204               5777.523 #> Demo_25               26536.26                 0.000               5743.973 #> Demo_26               18382.52             19212.037              13922.765 #> Demo_27                   0.00             14775.527              13856.030 #> Demo_28               33463.99             23493.496              13977.840 #> Demo_29               15236.96                 0.000              13125.507 #> Demo_30               29487.89             26855.766              18561.858 #> Demo_31                   0.00             25967.101                  0.000 #> Demo_32               22421.99             20430.493              16664.201 #> Demo_33               30099.99             22211.631              19006.823 #> Demo_34               23382.90             20605.647              11025.454 #> Demo_35               21240.12             19871.185                  0.000 #> Demo_36               27860.95             19407.614              17596.868 #> Demo_37               18030.86             18887.644              11803.585 #> Demo_38               22391.38             24082.557              18299.186 #> Demo_39               36031.87             19046.414              15299.599 #> Demo_40               21814.17             22911.698              18011.868 #> Demo_41               32291.25             19462.257              20737.373 #> Demo_42               26907.00                 0.000              12277.757 #> Demo_43               32813.46             19555.700              17834.569 #> Demo_44               22591.30             28595.579              16599.491 #> Demo_45               27098.40             24737.188              13210.905 #> Demo_46               30896.37             21069.286              15779.193 #> Demo_47               23981.90             22113.660              18006.985 #> Demo_48                   0.00             23927.706              12475.346 #> Demo_49               34252.82             19656.758              14916.624 #> Demo_50               24938.78             23913.442                  0.000 #>         RP_pos_383_4976a2_6503 RP_pos_344_9911a1_9656 RP_pos_117_7095a4_0945 #> Demo_1               17682.060              14100.298              26025.374 #> Demo_2                   0.000              20967.379              30661.490 #> Demo_3               14782.113               9917.908              22720.083 #> Demo_4               17353.351              19411.827              24526.015 #> Demo_5                5857.009              14996.379              26096.723 #> Demo_6               17955.669              19750.009              26109.278 #> Demo_7               14875.236              16331.844              18349.036 #> Demo_8               17079.857              13183.197              14815.381 #> Demo_9               14140.812              19122.839              17576.700 #> Demo_10              14709.813              12916.736              34401.066 #> Demo_11               8829.222              17972.214              16042.954 #> Demo_12              16666.322              24215.840              10581.991 #> Demo_13              15524.842              15520.672              22128.539 #> Demo_14                  0.000              13709.201               4584.569 #> Demo_15               8962.099              11648.747              16011.743 #> Demo_16              18456.510              13020.486              23227.274 #> Demo_17               6637.243              19986.133              30706.863 #> Demo_18              11215.611              11816.806              25618.106 #> Demo_19              11303.386              14400.726              18054.435 #> Demo_20               7025.005               8978.931              19416.532 #> Demo_21               7836.010              12985.343              24736.747 #> Demo_22               5793.983              17998.069              29596.105 #> Demo_23              18007.589              23479.344              17732.643 #> Demo_24              12440.536              20314.816              14106.764 #> Demo_25              15293.370              16261.692              16501.145 #> Demo_26              22966.788              22776.672              31964.595 #> Demo_27              28144.927              18852.265              26657.663 #> Demo_28              15541.966              20435.396                  0.000 #> Demo_29              15810.529              23886.274              19599.951 #> Demo_30              17990.422              33539.766              35239.787 #> Demo_31              26886.019              26612.376              35121.746 #> Demo_32              20837.441              23734.971              26060.897 #> Demo_33              15708.041              21417.436              24420.357 #> Demo_34              18654.847              17197.072              30000.588 #> Demo_35              21809.524              19046.311              34941.061 #> Demo_36              12857.693              10713.411              27323.891 #> Demo_37              29680.743              31710.584              27673.181 #> Demo_38              17571.386              25351.141              30036.325 #> Demo_39               9910.994              22952.059              14617.859 #> Demo_40                  0.000              24052.107              15027.904 #> Demo_41                  0.000              30266.204              30765.896 #> Demo_42              18230.720              25858.322                  0.000 #> Demo_43              28124.362              22911.919              23003.550 #> Demo_44              20981.163              24071.920                  0.000 #> Demo_45              16586.626              21671.464              18592.276 #> Demo_46              16777.497              30458.434              20768.310 #> Demo_47              17422.426              25040.396              27031.538 #> Demo_48              21849.139              35900.053              29245.500 #> Demo_49              10797.550              26233.002              19376.836 #> Demo_50              19640.525              28059.543              24944.871 #>         RP_pos_294_9596a6_7569 RP_pos_460_4815a0_8843 RP_pos_272_3545a3_5592 #> Demo_1               10266.824              31688.261              30188.260 #> Demo_2               17809.584              29930.988              21596.222 #> Demo_3                6965.798              34368.028              28764.738 #> Demo_4               15175.234                  0.000              30188.519 #> Demo_5               12766.173              20130.612              25358.109 #> Demo_6               15162.866              27517.769              26601.529 #> Demo_7               11397.648              29780.865              21826.209 #> Demo_8                6525.035              20885.039              15344.462 #> Demo_9               16894.431                  0.000              24252.279 #> Demo_10                  0.000              21885.379              31552.869 #> Demo_11              11080.007               4695.736              18356.095 #> Demo_12              10319.845              14762.247              20232.269 #> Demo_13              12539.138              33171.465              21931.843 #> Demo_14              14999.331              21666.755              24855.245 #> Demo_15              13332.329               3708.936              23821.124 #> Demo_16              16193.483              15444.261              17281.283 #> Demo_17              11884.029              11746.990              36902.727 #> Demo_18                  0.000              25727.394              15040.149 #> Demo_19              12172.723                  0.000              26162.606 #> Demo_20               9301.258               7594.448              48026.131 #> Demo_21                  0.000              20812.408               7026.475 #> Demo_22              16467.311              16932.578              28794.081 #> Demo_23               9486.456              31556.744              32810.458 #> Demo_24               9696.333              12093.086              28173.459 #> Demo_25              12656.737              31912.589              20230.325 #> Demo_26              20910.626              35206.406              37390.064 #> Demo_27              20058.885              31982.483              33889.182 #> Demo_28              24284.225              13700.718              36139.325 #> Demo_29                  0.000                  0.000              32205.374 #> Demo_30              22681.092              33111.923              36480.386 #> Demo_31              20816.739              33436.379              29451.807 #> Demo_32              23390.734              34702.471              33775.327 #> Demo_33              18162.980              28786.701              26275.067 #> Demo_34              20552.595              32280.281              32811.808 #> Demo_35              20200.235              29390.089              29360.406 #> Demo_36              17709.942              20436.546              24601.230 #> Demo_37                  0.000              31038.951              39636.252 #> Demo_38              24608.754              24707.362              30174.924 #> Demo_39              23070.993              24147.224              28482.647 #> Demo_40                  0.000              13157.217              23819.349 #> Demo_41              19537.726              25395.485              27111.379 #> Demo_42              21044.018               8584.651              32040.553 #> Demo_43              28131.164              15934.967              42814.200 #> Demo_44                  0.000              26226.302                  0.000 #> Demo_45              13716.151              23599.134              40064.053 #> Demo_46              25982.230              20983.454              31132.240 #> Demo_47              18906.693              29162.712                  0.000 #> Demo_48              22235.239              33580.902              36065.046 #> Demo_49              20430.392              26666.662              12676.605 #> Demo_50              23450.509              27596.692              27473.773 #>         RP_pos_409_2445a2_4149 RP_pos_245_9925a3_6251 RP_pos_369_1069a1_6271 #> Demo_1                29300.40              11071.660              10431.226 #> Demo_2                17904.03              12568.009                  0.000 #> Demo_3                14541.38              14165.399               8134.875 #> Demo_4                15476.57              11163.542              16775.663 #> Demo_5                29697.51                  0.000              13171.957 #> Demo_6                28601.16              11448.587              13355.363 #> Demo_7                23749.19               8306.422              10021.918 #> Demo_8                22349.76              10294.798              16780.903 #> Demo_9                13828.69              12730.436                  0.000 #> Demo_10               21691.96              15545.061              12129.474 #> Demo_11               15399.50              10915.284               9947.151 #> Demo_12               34810.71               9665.084              10733.356 #> Demo_13               23165.93               9770.794              11614.376 #> Demo_14               31129.97               8438.247              15537.121 #> Demo_15               19372.30               9042.005              14382.468 #> Demo_16               24922.36              12211.636              14099.579 #> Demo_17               19368.06               6356.227              11231.761 #> Demo_18               26866.06               8149.171              11744.452 #> Demo_19               19286.56               6644.213              11021.656 #> Demo_20               20429.43              10093.847               8819.258 #> Demo_21               11173.95              11096.098              11752.234 #> Demo_22               21721.43               9222.017              13013.991 #> Demo_23               17524.57               6827.740                  0.000 #> Demo_24               17903.24               7766.731               9223.041 #> Demo_25               22942.81               8162.552              10332.567 #> Demo_26               32668.48              19480.036              21935.993 #> Demo_27               35186.67              21867.846              19082.551 #> Demo_28               25377.33              13151.076              13511.488 #> Demo_29                   0.00              20304.289              28346.059 #> Demo_30               35621.55                  0.000              14675.891 #> Demo_31               32690.54              16604.897              22504.035 #> Demo_32               29766.50              13855.068              20479.159 #> Demo_33               22159.33               8771.706              20642.057 #> Demo_34               30705.29               6652.511              21095.744 #> Demo_35                   0.00              22311.648              19098.174 #> Demo_36               26483.75              18634.195              22898.267 #> Demo_37                   0.00                  0.000              15857.556 #> Demo_38               31470.42              13529.497              22445.820 #> Demo_39               33266.61              19006.228              26350.239 #> Demo_40               23216.16              15536.512              16952.022 #> Demo_41               31490.90              16619.049              21127.294 #> Demo_42               30288.69              14504.389              18484.603 #> Demo_43               19381.34              10972.782              20655.102 #> Demo_44               25169.08               7345.686              24815.132 #> Demo_45               16578.04              15837.069              26346.004 #> Demo_46               35208.14              20850.493              22972.892 #> Demo_47               27273.24              10072.540              18929.899 #> Demo_48               23445.04              18494.471              22620.785 #> Demo_49               23345.56              16663.677              26987.741 #> Demo_50               30922.10              12472.567              25008.679 #>         RP_pos_174_0715a4_3465 RP_pos_324_6195a4_7743 RP_pos_149_432a4_1341 #> Demo_1                22689.44              10006.762              22817.97 #> Demo_2                11294.47              13358.013              11525.11 #> Demo_3                12701.25               9386.096              30683.51 #> Demo_4                22131.12               6262.294              25244.33 #> Demo_5                32268.38               9270.838              25574.09 #> Demo_6                26267.98               7422.307              26464.56 #> Demo_7                23653.49               7871.130              18099.19 #> Demo_8                26581.74              15280.032              19054.01 #> Demo_9                26524.53                  0.000              22059.90 #> Demo_10               20784.55                  0.000                  0.00 #> Demo_11               17103.16              12933.052              29170.78 #> Demo_12               33853.07              11182.866                  0.00 #> Demo_13               25352.71               8159.695              16959.14 #> Demo_14               31295.99               7921.743              10417.52 #> Demo_15               23764.88               9541.848              27811.91 #> Demo_16               22921.69               5262.687              12992.71 #> Demo_17               28070.59               7917.768              12406.46 #> Demo_18                   0.00               6456.182              22814.48 #> Demo_19               23936.58               7877.897              14385.25 #> Demo_20               29001.93               4009.156                  0.00 #> Demo_21               41206.65              11489.980              17341.96 #> Demo_22               16619.00               5468.469                  0.00 #> Demo_23               22018.58               9014.755              26834.83 #> Demo_24               18367.21               9514.644              16344.53 #> Demo_25               29416.71               6401.168              11959.99 #> Demo_26               23648.66              14234.896              31619.61 #> Demo_27               28056.47              12474.310              33711.78 #> Demo_28               31664.43                  0.000              28762.52 #> Demo_29               33168.59              13302.190              23268.25 #> Demo_30               36712.93              16426.472              36389.02 #> Demo_31               29038.51              17987.973              34092.98 #> Demo_32               27573.54              11836.335              20104.76 #> Demo_33               36227.61               7327.618              20281.81 #> Demo_34               39635.81              15574.487                  0.00 #> Demo_35               47150.23              13350.498              13016.12 #> Demo_36               28172.42              13536.587              26539.30 #> Demo_37               20339.02              14079.443              22053.93 #> Demo_38               26239.93              14976.712              28511.95 #> Demo_39               27882.80                  0.000              12439.35 #> Demo_40               32777.97              16770.026              16565.16 #> Demo_41               23082.45              22150.168              13639.78 #> Demo_42               36028.80              16525.485              10592.95 #> Demo_43               31904.54              11640.234              25079.40 #> Demo_44               28639.75              14213.758              20235.12 #> Demo_45               24041.32              15587.282              20254.78 #> Demo_46               25356.25              18378.360              20245.18 #> Demo_47               33915.81              16175.924              28880.20 #> Demo_48               28611.45              15897.229              22813.31 #> Demo_49               26221.19              13959.333              12817.89 #> Demo_50               28970.59              12778.744              21834.40 #>         RP_pos_461_5891a7_1505 RP_pos_458_263a4_3477 RP_pos_226_7218a3_1371 #> Demo_1               14277.723              9330.848                   0.00 #> Demo_2               14973.973             11204.948                   0.00 #> Demo_3                4126.481             13787.590               15098.87 #> Demo_4               21222.287                 0.000               24627.18 #> Demo_5               19931.741              6473.272               35872.68 #> Demo_6                   0.000                 0.000               32553.97 #> Demo_7               15871.545                 0.000               28471.46 #> Demo_8               15486.988              9629.660               26067.48 #> Demo_9               22265.884             14436.345               17776.50 #> Demo_10              17273.669             12995.157               18572.56 #> Demo_11              21630.678             13909.376                   0.00 #> Demo_12              27839.921             16986.158               31317.15 #> Demo_13              14974.300              7952.845               31763.06 #> Demo_14              17746.089             14962.976               37360.21 #> Demo_15              16313.351              9776.330               15971.61 #> Demo_16              23345.727              9852.652               29497.18 #> Demo_17              21442.790              8787.361                   0.00 #> Demo_18              18052.232             11875.229               28041.32 #> Demo_19              17707.418              7047.687               26660.78 #> Demo_20              19520.544              8653.542               21350.87 #> Demo_21              22534.002             12422.451               29924.46 #> Demo_22              22701.638              7493.953               29264.68 #> Demo_23              19409.616             19970.594               40699.74 #> Demo_24              12201.307             16152.869               31060.56 #> Demo_25              15088.638              7507.630               27469.48 #> Demo_26              22902.065             22345.032               40303.29 #> Demo_27              23014.210             16357.880               40627.34 #> Demo_28              21766.909             21825.855               40832.25 #> Demo_29              26561.153                 0.000               36310.11 #> Demo_30              30750.285             20342.332               26594.76 #> Demo_31              37302.183              8791.548               38840.46 #> Demo_32              26807.474             20144.051               47285.45 #> Demo_33              30199.666             12560.843               43665.43 #> Demo_34              25523.439             17822.347               38085.71 #> Demo_35              32438.927             22811.346               46321.39 #> Demo_36              33555.000             26049.772               32672.84 #> Demo_37              29662.358             18377.043               50914.42 #> Demo_38              26922.700             17448.695               41162.88 #> Demo_39              21480.430             18141.645               36030.48 #> Demo_40              26794.456             20344.126               33907.41 #> Demo_41              28785.793             20254.339               35191.69 #> Demo_42              25939.425              8952.723                   0.00 #> Demo_43              33179.083             14106.108                   0.00 #> Demo_44              24567.494             15602.572               45430.53 #> Demo_45              22708.934             17340.539               33152.08 #> Demo_46              35647.443             15798.496               47095.96 #> Demo_47              29265.343             16135.377               37155.34 #> Demo_48                  0.000             19843.772               41465.63 #> Demo_49              23017.390             18334.292               35878.10 #> Demo_50              33605.454             15017.652               36023.77 #>         RP_pos_280_3779a4_0424 RP_pos_447_3232a2_2393 RP_pos_453_282a5_128 #> Demo_1               12103.978                  0.000            16593.213 #> Demo_2                8138.567               5282.648            16456.869 #> Demo_3                8913.693               4249.407            25383.547 #> Demo_4               12965.614               2845.611            26861.324 #> Demo_5                5320.602               4029.438                0.000 #> Demo_6               19450.417               4285.135            21404.728 #> Demo_7               13112.194               2575.872            18569.859 #> Demo_8               16682.569               3540.138            32856.211 #> Demo_9                7291.871               3620.725            27111.266 #> Demo_10              16795.367               3765.301            19555.883 #> Demo_11              15901.973               3109.231            31360.774 #> Demo_12              11338.909               5139.100            16370.351 #> Demo_13              15152.846               2685.988            20703.889 #> Demo_14              11767.714                  0.000             8949.317 #> Demo_15              13860.023               4391.168            21478.434 #> Demo_16                  0.000               4079.799            11279.086 #> Demo_17               4531.751               3424.477            31771.057 #> Demo_18              12583.641               2490.126            33249.553 #> Demo_19              14997.229               2650.580                0.000 #> Demo_20               6660.322               4766.255            18176.658 #> Demo_21              13373.834               4877.576            16993.287 #> Demo_22              15067.964               2500.657                0.000 #> Demo_23              14614.313               5766.469            35295.286 #> Demo_24                  0.000               2399.940            33334.823 #> Demo_25              14220.384               2294.673            19821.015 #> Demo_26              13156.304              12027.309                0.000 #> Demo_27                  0.000              11021.809            20709.912 #> Demo_28              21549.269              11759.069            32194.600 #> Demo_29              19627.584              11111.581            35804.589 #> Demo_30              21144.020              11552.068            28140.247 #> Demo_31              22557.681              12676.140            20486.390 #> Demo_32              16937.727               8971.789            33964.452 #> Demo_33              23072.061                  0.000            36922.256 #> Demo_34              27336.630               9686.707            27478.789 #> Demo_35              21612.167               9896.573            36658.944 #> Demo_36              12766.261              12135.621            38534.170 #> Demo_37                  0.000               9025.173            30315.596 #> Demo_38              15445.265              10909.142            37549.124 #> Demo_39              19229.133              11272.712            19704.185 #> Demo_40              19477.405              11139.160            36067.646 #> Demo_41              19417.009               7632.700            38262.864 #> Demo_42              22202.119              13065.363            40900.327 #> Demo_43                  0.000              10522.172            39820.368 #> Demo_44              18020.759               7752.091            39875.210 #> Demo_45              15061.916                  0.000            31421.477 #> Demo_46              18323.918               7375.840            32255.584 #> Demo_47              22180.472              10492.999            30470.378 #> Demo_48              19587.062              10073.470            29363.045 #> Demo_49              13953.975               8802.606            39144.781 #> Demo_50              16749.074               9794.668            40218.958 #>         RP_pos_153_9636a7_9986 #> Demo_1                   0.000 #> Demo_2                7826.645 #> Demo_3                8799.518 #> Demo_4                6834.312 #> Demo_5                   0.000 #> Demo_6                7979.740 #> Demo_7                9608.797 #> Demo_8                3696.684 #> Demo_9                9061.354 #> Demo_10               7919.092 #> Demo_11               5072.799 #> Demo_12               6147.846 #> Demo_13              11261.859 #> Demo_14               7234.797 #> Demo_15               8559.525 #> Demo_16                  0.000 #> Demo_17               2517.879 #> Demo_18               6553.340 #> Demo_19              10397.231 #> Demo_20               3296.753 #> Demo_21              11442.196 #> Demo_22               9290.146 #> Demo_23               8864.199 #> Demo_24                  0.000 #> Demo_25                  0.000 #> Demo_26              15303.344 #> Demo_27                  0.000 #> Demo_28              18607.788 #> Demo_29              10638.601 #> Demo_30              14772.907 #> Demo_31              11901.898 #> Demo_32              15498.366 #> Demo_33              10534.252 #> Demo_34              15343.995 #> Demo_35              10007.283 #> Demo_36              12337.743 #> Demo_37              16190.032 #> Demo_38              12215.015 #> Demo_39              13053.717 #> Demo_40              11206.935 #> Demo_41              12521.312 #> Demo_42                  0.000 #> Demo_43               9960.175 #> Demo_44               9804.544 #> Demo_45              14787.763 #> Demo_46               9387.237 #> Demo_47              15214.665 #> Demo_48                  0.000 #> Demo_49              11958.438 #> Demo_50              10615.150"},{"path":"https://hanhineva-lab.github.io/notame/reference/compress_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress clusters of features to a single feature — compress_clusters","title":"Compress clusters of features to a single feature — compress_clusters","text":"function compresses clusters found cluster_features, keeping feature highest median peak area. features discarded recorded feature data, Cluster_features.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/compress_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress clusters of features to a single feature — compress_clusters","text":"","code":"compress_clusters(object)"},{"path":"https://hanhineva-lab.github.io/notame/reference/compress_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress clusters of features to a single feature — compress_clusters","text":"object  SummarizedExperiment MetaboSet object","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/compress_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress clusters of features to a single feature — compress_clusters","text":"SummarizedExperiment MetaboSet object one feature per cluster.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/compress_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compress clusters of features to a single feature — compress_clusters","text":"","code":"data(example_set) clustered <- cluster_features(example_set,    rt_window = 1, corr_thresh = 0.5, d_thresh = 0.6) #> INFO [2025-06-23 22:36:28] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:28] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:28] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:28]  #> Starting feature clustering at 2025-06-23 22:36:28.829927 #> INFO [2025-06-23 22:36:28] Finding connections between features in HILIC_neg #> INFO [2025-06-23 22:36:28] Found 1 connections in HILIC_neg #> INFO [2025-06-23 22:36:28] Finding connections between features in HILIC_pos #> INFO [2025-06-23 22:36:28] Found 4 connections in HILIC_pos #> INFO [2025-06-23 22:36:28] Finding connections between features in RP_neg #> INFO [2025-06-23 22:36:29] Found 1 connections in RP_neg #> INFO [2025-06-23 22:36:29] Finding connections between features in RP_pos #> INFO [2025-06-23 22:36:29] Found 2 connections in RP_pos #> INFO [2025-06-23 22:36:29] Found 8 connections #> 5 components found #> 1 components found #> INFO [2025-06-23 22:36:29] Found 5 clusters of 2 or more features, clustering finished at 2025-06-23 22:36:29.211733 #> INFO [2025-06-23 22:36:29] Saved cluster plots to:  compressed <- compress_clusters(clustered) #> INFO [2025-06-23 22:36:29] Clusters compressed, left with 73 features"},{"path":"https://hanhineva-lab.github.io/notame/reference/construct_metabosets.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct MetaboSet objects — construct_metabosets","title":"Construct MetaboSet objects — construct_metabosets","text":"Construct MetaboSet objects input read read_from_excel. Returns list MetaboSet objects, one per mode. modes separated \"Split\" column feature data.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/construct_metabosets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct MetaboSet objects — construct_metabosets","text":"","code":"construct_metabosets(   exprs,   pheno_data,   feature_data,   group_col = NA_character_,   time_col = NA_character_,   subject_col = NA_character_,   split_data = TRUE )"},{"path":"https://hanhineva-lab.github.io/notame/reference/construct_metabosets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct MetaboSet objects — construct_metabosets","text":"exprs matrix, feature abundances, size features x samples pheno_data data frame, sample information, size sample info variables x samples feature_data data frame, information features, size features x feature info columns group_col character, name column pheno_data use grouping variable time_col character, name column pheno_data use time variable subject_col character, name column pheno_data use subject ID variable split_data logical, whether split data analytical mode recorded \"Split\" column feature data. TRUE (default), return list MetaboSet objects, one per analytical mode. FALSE, return single MetaboSet object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/construct_metabosets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct MetaboSet objects — construct_metabosets","text":"list MetaboSet objects single MetaboSet object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/construct_metabosets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct MetaboSet objects — construct_metabosets","text":"","code":"data <- read_from_excel(   file = system.file(\"extdata\", \"example_set.xlsx\",    package = \"notame\"), sheet = 1, corner_row = 11, corner_column = \"H\",   split_by = c(\"Column\", \"Ion_mode\")) #> INFO [2025-06-23 22:36:30] Corner detected correctly at row 11, column H #> INFO [2025-06-23 22:36:30]  #> Extracting sample information from rows 1 to 11 and columns I to BF #> INFO [2025-06-23 22:36:30] Replacing spaces in sample information column names with underscores (_) #> INFO [2025-06-23 22:36:30] Naming the last column of sample information \"Datafile\" #> INFO [2025-06-23 22:36:30]  #> Extracting feature information from rows 12 to 91 and columns A to H #> INFO [2025-06-23 22:36:30]  #> Extracting feature abundances from rows 12 to 91 and columns I to BF #> INFO [2025-06-23 22:36:30] Pheno data was cleaned #> INFO [2025-06-23 22:36:30] Feature data was cleaned #> INFO [2025-06-23 22:36:30]  #> Checking sample information #> INFO [2025-06-23 22:36:30] Checking 'Injection_order' column in feature data #> INFO [2025-06-23 22:36:30] Checking 'Sample_ID' column in pheno data #> INFO [2025-06-23 22:36:30] Checking 'QC' column in feature data #> INFO [2025-06-23 22:36:30] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:30]  #> Checking feature information #> INFO [2025-06-23 22:36:30] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:30] Checking that m/z and retention time values are reasonable. #> INFO [2025-06-23 22:36:30] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:30] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:36:30] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:30] Checking that feature data includes a 'Flag' column  modes <- construct_metabosets(exprs = data$exprs,    pheno_data = data$pheno_data, feature_data = data$feature_data,   group_col = \"Group\") #> INFO [2025-06-23 22:36:30]  #> Checking feature information #> INFO [2025-06-23 22:36:30] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:30] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:30] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:30] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:30] Setting row and column names of exprs based on feature and pheno data"},{"path":"https://hanhineva-lab.github.io/notame/reference/correct_drift.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct drift using cubic spline — correct_drift","title":"Correct drift using cubic spline — correct_drift","text":"wrapper function applying cubic spline drift correction saving plots.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/correct_drift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct drift using cubic spline — correct_drift","text":"","code":"correct_drift(   object,   log_transform = TRUE,   spar = NULL,   spar_lower = 0.5,   spar_upper = 1.5,   check_quality = FALSE,   condition = \"RSD_r < 0 & D_ratio_r < 0\",   plotting = FALSE,   file = NULL,   width = 16,   height = 8,   color = \"QC\",   shape = color,   color_scale = getOption(\"notame.color_scale_dis\"),   shape_scale = scale_shape_manual(values = c(15, 16)),   assay.type = NULL,   name = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/correct_drift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct drift using cubic spline — correct_drift","text":"object  SummarizedExperiment MetaboSet object log_transform logical, drift correction done log-transformed values? See Details spar smoothing parameter smooth.spline spar_lower, spar_upper lower upper limits smoothing parameter check_quality logical, whether quality monitored. condition character specifying condition used decide whether drift correction works adequately, see Details plotting logical, whether plots drawn file path PDF file plots saved width, height width height plots inches color character, name column used coloring points shape character, name column used shape color_scale, shape_scale color shape scales returned ggplot function assay.type character, assay used case multiple assays name character, name resultant assay case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/correct_drift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct drift using cubic spline — correct_drift","text":"SummarizedExperiment MetaboSet object one supplied, drift corrected features.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/correct_drift.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correct drift using cubic spline — correct_drift","text":"log_transform = TRUE, correction done log-transformed values. correction formula depends whether correction run original values log-transformed values. log-space: \\(corrected = original + mean QCs - prediction cubic spline\\). original space: \\(corrected = original * prediction first QC / prediction current point\\). recommend correction log-space since log-transfomred data better follows assumptions cubic spline regression. drift correction original space also sometimes results negative values, results rejection drift corrrection procedure. spar set NULL (default), smoothing parameter separately chosen feature range [spar_lower, spar_upper] using cross validation.  check_quality = TRUE, condition parameter character giving condition compatible filter. condition applied changes quality metrics RSD, RSD_r, D_ratio D_ratio_r. example, default \"RSD_r < 0 D_ratio_r < 0\", meaning RSD_r D_ratio_r need decrease drift correction, otherwise drift corrected feature discarded original retained. default, column used color also used shape.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/correct_drift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct drift using cubic spline — correct_drift","text":"","code":"data(example_set) corrected <- correct_drift(example_set) #> INFO [2025-06-23 22:36:30]  #> Starting drift correction at 2025-06-23 22:36:30.643302 #> INFO [2025-06-23 22:36:30] Zero values in feature abundances detected. Zeroes will be replaced with 1.1. #> INFO [2025-06-23 22:36:31] Drift correction performed at 2025-06-23 22:36:31.005327 #> INFO [2025-06-23 22:36:31] Inspecting drift correction results 2025-06-23 22:36:31.173394 #> INFO [2025-06-23 22:36:31] Drift correction results inspected at 2025-06-23 22:36:31.449137 #> INFO [2025-06-23 22:36:31]  #> Drift correction results inspected, report: #> Drift_corrected: 100%"},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_flagged.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop flagged features — drop_flagged","title":"Drop flagged features — drop_flagged","text":"Removes features flagged quality control functions. features flag (Flag == NA) retained.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_flagged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop flagged features — drop_flagged","text":"","code":"drop_flagged(object, all_features = FALSE)  # S4 method for class 'MetaboSet' drop_flagged(object, all_features = FALSE)  # S4 method for class 'SummarizedExperiment' drop_flagged(object, all_features = FALSE)"},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_flagged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop flagged features — drop_flagged","text":"object  SummarizedExperiment MetaboSet object all_features logical, features retained? Mainly used internal functions","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_flagged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop flagged features — drop_flagged","text":"SummarizedExperiment MetaboSet object without previously flagged features.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_flagged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop flagged features — drop_flagged","text":"","code":"data(example_set) dim(example_set) #> [1] 80 50 flagged <- flag_quality(example_set) #> INFO [2025-06-23 22:36:32]  #> 92% of features flagged for low quality noflags <- drop_flagged(flagged) dim(noflags) #> [1]  6 50"},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_qcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop QC samples — drop_qcs","title":"Drop QC samples — drop_qcs","text":"Drop QC samples","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_qcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop QC samples — drop_qcs","text":"","code":"drop_qcs(object)"},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_qcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop QC samples — drop_qcs","text":"object  SummarizedExperiment MetaboSet object","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_qcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop QC samples — drop_qcs","text":"SummarizedExperiment MetaboSet object one supplied, without QC samples.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/drop_qcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop QC samples — drop_qcs","text":"","code":"data(example_set) dim(example_set) #> [1] 80 50 noqc <- drop_qcs(example_set) dim(noqc) #> [1] 80 40"},{"path":"https://hanhineva-lab.github.io/notame/reference/example_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy data set — example_set","title":"Toy data set — example_set","text":"Contains imaginary data used testing package functions. dataset 50 samples 80 features. dataset includes multiple observations subjects, sampled two timepoints separate batches divided two groups. analytical modes also available separate MetaboSet objects. Note across batches, features different feature ID's, m/z retention time case real-world data. essence, example data reflects features aligned perfectly batches.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/example_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy data set — example_set","text":"","code":"example_set  hilic_neg_sample  hilic_pos_sample  rp_neg_sample  rp_pos_sample"},{"path":"https://hanhineva-lab.github.io/notame/reference/example_set.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy data set — example_set","text":"object class SummarizedExperiment 80 rows 50 columns. object class SummarizedExperiment 20 rows 50 columns. object class SummarizedExperiment 20 rows 50 columns. object class SummarizedExperiment 20 rows 50 columns. object class SummarizedExperiment 20 rows 50 columns.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/exponential.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential function — exponential","title":"Exponential function — exponential","text":"Apply exponential function peak table.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/exponential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential function — exponential","text":"","code":"exponential(object, base = exp(1))  # S4 method for class 'MetaboSet' exponential(object, base = exp(1))  # S4 method for class 'SummarizedExperiment' exponential(object, base = exp(1))"},{"path":"https://hanhineva-lab.github.io/notame/reference/exponential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exponential function — exponential","text":"object  SummarizedExperiment MetaboSet object base base exponential","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/exponential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exponential function — exponential","text":"object altered feature abundances.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/exponential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exponential function — exponential","text":"","code":"data(example_set) example_set <- mark_nas(example_set, value = 0) log_data <- log(example_set) orig_data <- exponential(log_data)"},{"path":"https://hanhineva-lab.github.io/notame/reference/finish_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Finish a log — finish_log","title":"Finish a log — finish_log","text":"Logs current date time session info, switches logging .","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/finish_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finish a log — finish_log","text":"","code":"finish_log()"},{"path":"https://hanhineva-lab.github.io/notame/reference/finish_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finish a log — finish_log","text":"None, function invoked side effect.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/finish_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finish a log — finish_log","text":"","code":"finish_log() #> INFO [2025-06-23 22:36:32] Finished analysis. Mon Jun 23 22:36:32 2025 #> Session info: #>  #> INFO [2025-06-23 22:36:32] R version 4.5.1 (2025-06-13) #> INFO [2025-06-23 22:36:32] Platform: x86_64-pc-linux-gnu #> INFO [2025-06-23 22:36:32] Running under: Ubuntu 24.04.2 LTS #> INFO [2025-06-23 22:36:32]  #> INFO [2025-06-23 22:36:32] Matrix products: default #> INFO [2025-06-23 22:36:32] BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> INFO [2025-06-23 22:36:32] LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #> INFO [2025-06-23 22:36:32]  #> INFO [2025-06-23 22:36:32] locale: #> INFO [2025-06-23 22:36:32]  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #> INFO [2025-06-23 22:36:32]  [4] LC_COLLATE=C           LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #> INFO [2025-06-23 22:36:32]  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> INFO [2025-06-23 22:36:32] [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #> INFO [2025-06-23 22:36:32]  #> INFO [2025-06-23 22:36:32] time zone: UTC #> INFO [2025-06-23 22:36:32] tzcode source: system (glibc) #> INFO [2025-06-23 22:36:32]  #> INFO [2025-06-23 22:36:32] attached base packages: #> INFO [2025-06-23 22:36:32] [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> INFO [2025-06-23 22:36:32] [8] base      #> INFO [2025-06-23 22:36:32]  #> INFO [2025-06-23 22:36:32] other attached packages: #> INFO [2025-06-23 22:36:32]  [1] notame_0.99.2               SummarizedExperiment_1.38.1 #> INFO [2025-06-23 22:36:32]  [3] GenomicRanges_1.60.0        GenomeInfoDb_1.44.0         #> INFO [2025-06-23 22:36:32]  [5] IRanges_2.42.0              S4Vectors_0.46.0            #> INFO [2025-06-23 22:36:32]  [7] MatrixGenerics_1.20.0       matrixStats_1.5.0           #> INFO [2025-06-23 22:36:32]  [9] magrittr_2.0.3              ggplot2_3.5.2               #> INFO [2025-06-23 22:36:32] [11] Biobase_2.68.0              BiocGenerics_0.54.0         #> INFO [2025-06-23 22:36:32] [13] generics_0.1.4              #> INFO [2025-06-23 22:36:32]  #> INFO [2025-06-23 22:36:32] loaded via a namespace (and not attached): #> INFO [2025-06-23 22:36:32]  [1] tidyselect_1.2.1        viridisLite_0.4.2       dplyr_1.1.4             #> INFO [2025-06-23 22:36:32]  [4] farver_2.1.2            fastmap_1.2.0           digest_0.6.37           #> INFO [2025-06-23 22:36:32]  [7] lifecycle_1.0.4         compiler_4.5.1          rlang_1.1.6             #> INFO [2025-06-23 22:36:32] [10] sass_0.4.10             tools_4.5.1             igraph_2.1.4            #> INFO [2025-06-23 22:36:32] [13] yaml_2.3.10             knitr_1.50              lambda.r_1.2.4          #> INFO [2025-06-23 22:36:32] [16] askpass_1.2.1           S4Arrays_1.8.1          labeling_0.4.3          #> INFO [2025-06-23 22:36:32] [19] htmlwidgets_1.6.4       curl_6.4.0              DelayedArray_0.34.1     #> INFO [2025-06-23 22:36:32] [22] xml2_1.3.8              RColorBrewer_1.1-3      abind_1.4-8             #> INFO [2025-06-23 22:36:32] [25] BiocParallel_1.42.1     Rtsne_0.17              withr_3.0.2             #> INFO [2025-06-23 22:36:32] [28] purrr_1.0.4             desc_1.4.3              grid_4.5.1              #> INFO [2025-06-23 22:36:32] [31] fansi_1.0.6             scales_1.4.0            cli_3.6.5               #> INFO [2025-06-23 22:36:32] [34] rmarkdown_2.29          crayon_1.5.3            ragg_1.4.0              #> INFO [2025-06-23 22:36:32] [37] httr_1.4.7              cachem_1.1.0            parallel_4.5.1          #> INFO [2025-06-23 22:36:32] [40] BiocManager_1.30.26     formatR_1.14            XVector_0.48.0          #> INFO [2025-06-23 22:36:32] [43] vctrs_0.6.5             Matrix_1.7-3            jsonlite_2.0.0          #> INFO [2025-06-23 22:36:32] [46] ggrepel_0.9.6           systemfonts_1.2.3       fontawesome_0.5.3       #> INFO [2025-06-23 22:36:32] [49] jquerylib_0.1.4         glue_1.8.0              pkgdown_2.1.3           #> INFO [2025-06-23 22:36:32] [52] codetools_0.2-20        stringi_1.8.7           gtable_0.3.6            #> INFO [2025-06-23 22:36:32] [55] futile.logger_1.4.3     UCSC.utils_1.4.0        downlit_0.4.4           #> INFO [2025-06-23 22:36:32] [58] tibble_3.3.0            pillar_1.10.2           rappdirs_0.3.3          #> INFO [2025-06-23 22:36:32] [61] pcaMethods_2.0.0        htmltools_0.5.8.1       openssl_2.3.3           #> INFO [2025-06-23 22:36:32] [64] GenomeInfoDbData_1.2.14 R6_2.6.1                httr2_1.1.2             #> INFO [2025-06-23 22:36:32] [67] textshaping_1.0.1       evaluate_1.0.4          lattice_0.22-7          #> INFO [2025-06-23 22:36:32] [70] futile.options_1.0.1    openxlsx_4.2.8          memoise_2.0.1           #> INFO [2025-06-23 22:36:32] [73] bslib_0.9.0             zip_2.3.3               Rcpp_1.0.14             #> INFO [2025-06-23 22:36:32] [76] SparseArray_1.8.0       whisker_0.4.1           xfun_0.52               #> INFO [2025-06-23 22:36:32] [79] fs_1.6.6                pkgconfig_2.0.3"},{"path":"https://hanhineva-lab.github.io/notame/reference/fit_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Random Forest — fit_rf","title":"Fit Random Forest — fit_rf","text":"Fits random forest, given response column pheno data predicted using features. Can used classification regression. information, see documentation randomForest. fitting random forest, use importance_rf shortcut getting feature importance random forest prediction.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fit_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Random Forest — fit_rf","text":"","code":"fit_rf(   object,   y,   all_features = FALSE,   covariates = NULL,   importance = TRUE,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/fit_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Random Forest — fit_rf","text":"object  SummarizedExperiment MetaboSet object y character, column name pheno data giving dependent variable model all_features logical, features included model? FALSE, flagged features left covariates character, column names pheno data use covariates model, addition molecular features importance importance features assessed? assay.type character, assay used case multiple assays ... parameters passed randomForest","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fit_rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Random Forest — fit_rf","text":"object class randomForest.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/fit_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Random Forest — fit_rf","text":"","code":"data(example_set) rf <- fit_rf(example_set, y = \"Group\") rf #>  #> Call: #>  randomForest(x = x, y = colData(object)[, y], importance = importance)  #>                Type of random forest: classification #>                      Number of trees: 500 #> No. of variables tried at each split: 8 #>  #>         OOB estimate of  error rate: 48% #> Confusion matrix: #>     A  B QC class.error #> A  11  9  0        0.45 #> B   8 12  0        0.40 #> QC  4  3  3        0.70 importance_rf(rf) #>                                          Feature_ID             A             B #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4_4322 -1.146825e-03 -2.085714e-03 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2_6121 -1.466667e-03  1.538167e-03 #> HILIC_neg_158_23a1_4128     HILIC_neg_158_23a1_4128 -5.238167e-03 -1.518254e-03 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0_6161  1.299206e-03 -2.623810e-03 #> HILIC_neg_401_52a4_211       HILIC_neg_401_52a4_211  2.022944e-03  3.310390e-03 #> HILIC_neg_400_7045a5_3842 HILIC_neg_400_7045a5_3842 -4.121284e-03  1.941342e-03 #> HILIC_neg_304_014a7_1311   HILIC_neg_304_014a7_1311 -3.569986e-04 -2.391270e-03 #> HILIC_neg_276_6328a2_7734 HILIC_neg_276_6328a2_7734 -1.580952e-03 -2.642857e-04 #> HILIC_neg_118_9111a4_1865 HILIC_neg_118_9111a4_1865 -1.458730e-03 -1.583333e-03 #> HILIC_neg_446_9413a2_315   HILIC_neg_446_9413a2_315 -1.370707e-03 -1.944444e-04 #> HILIC_neg_127_5856a4_3758 HILIC_neg_127_5856a4_3758  1.925469e-03 -1.189755e-03 #> HILIC_neg_303_2144a1_2372 HILIC_neg_303_2144a1_2372 -4.007937e-04 -2.904762e-04 #> HILIC_neg_366_6203a6_1825 HILIC_neg_366_6203a6_1825  2.801587e-04  7.238817e-04 #> HILIC_neg_258_7252a7_5445 HILIC_neg_258_7252a7_5445  3.095238e-04 -2.113564e-03 #> HILIC_neg_301_2643a4_0372 HILIC_neg_301_2643a4_0372 -1.553247e-03  2.204762e-03 #> HILIC_neg_224_4031a4_7409 HILIC_neg_224_4031a4_7409 -1.805556e-03 -1.403319e-04 #> HILIC_neg_424_8488a6_7736 HILIC_neg_424_8488a6_7736  3.287302e-03 -1.665945e-04 #> HILIC_neg_131_2034a6_1385 HILIC_neg_131_2034a6_1385  1.109452e-03  1.375397e-03 #> HILIC_neg_236_4114a5_6302 HILIC_neg_236_4114a5_6302 -2.339560e-03 -8.730159e-04 #> HILIC_neg_411_0148a0_7484 HILIC_neg_411_0148a0_7484  2.179365e-03 -8.753968e-04 #> HILIC_pos_288_6263a6_572   HILIC_pos_288_6263a6_572  2.452381e-03  1.673810e-03 #> HILIC_pos_331_1173a7_7822 HILIC_pos_331_1173a7_7822  8.324675e-04 -1.474603e-03 #> HILIC_pos_139_4044a6_0388 HILIC_pos_139_4044a6_0388 -1.123810e-03 -7.792929e-04 #> HILIC_pos_132_7373a6_4146 HILIC_pos_132_7373a6_4146  2.996032e-03 -1.414863e-04 #> HILIC_pos_298_6144a3_839   HILIC_pos_298_6144a3_839 -2.407143e-03 -1.961977e-03 #> HILIC_pos_410_9203a2_7329 HILIC_pos_410_9203a2_7329  7.511183e-03 -2.741991e-03 #> HILIC_pos_145_8514a2_811   HILIC_pos_145_8514a2_811 -7.792208e-05  2.436508e-04 #> HILIC_pos_306_0061a4_4049 HILIC_pos_306_0061a4_4049 -8.191198e-04  4.468254e-04 #> HILIC_pos_425_8858a4_4494 HILIC_pos_425_8858a4_4494 -2.672222e-03  3.153896e-03 #> HILIC_pos_436_332a6_1165   HILIC_pos_436_332a6_1165 -1.365079e-04  3.643579e-05 #> HILIC_pos_255_0094a7_9288 HILIC_pos_255_0094a7_9288 -4.113564e-03  2.222222e-05 #> HILIC_pos_417_1474a2_8239 HILIC_pos_417_1474a2_8239 -2.318903e-04  2.072150e-04 #> HILIC_pos_297_8334a0_6647 HILIC_pos_297_8334a0_6647 -6.531746e-04 -1.680303e-03 #> HILIC_pos_449_2162a0_7574 HILIC_pos_449_2162a0_7574  2.221429e-03 -1.944444e-04 #> HILIC_pos_197_7438a7_72     HILIC_pos_197_7438a7_72 -1.346825e-03 -1.626696e-03 #> HILIC_pos_141_601a7_387     HILIC_pos_141_601a7_387 -1.046825e-03 -1.229149e-03 #> HILIC_pos_448_1172a6_8567 HILIC_pos_448_1172a6_8567 -2.296825e-03  4.286436e-04 #> HILIC_pos_346_6405a3_2719 HILIC_pos_346_6405a3_2719 -4.634921e-04  1.053175e-03 #> HILIC_pos_334_3285a1_7395 HILIC_pos_334_3285a1_7395  1.395166e-03 -2.015152e-03 #> HILIC_pos_215_5364a2_6707 HILIC_pos_215_5364a2_6707 -1.843651e-03 -1.126263e-03 #> RP_neg_458_0877a1_5798       RP_neg_458_0877a1_5798  8.023810e-04 -2.520563e-03 #> RP_neg_365_8511a5_6086       RP_neg_365_8511a5_6086 -2.008730e-03  1.071429e-03 #> RP_neg_369_5116a6_4389       RP_neg_369_5116a6_4389  5.036580e-03  1.935786e-04 #> RP_neg_222_4828a6_0392       RP_neg_222_4828a6_0392  7.626263e-03  2.269149e-02 #> RP_neg_114_84a3_0917           RP_neg_114_84a3_0917 -4.489899e-04  2.392063e-03 #> RP_neg_317_554a3_063           RP_neg_317_554a3_063  9.050144e-03  5.460750e-03 #> RP_neg_419_897a3_9617         RP_neg_419_897a3_9617  1.288095e-03  3.047691e-03 #> RP_neg_493_3039a6_7816       RP_neg_493_3039a6_7816 -3.181818e-04  1.142929e-03 #> RP_neg_359_0517a7_3652       RP_neg_359_0517a7_3652 -1.681818e-03  9.960317e-04 #> RP_neg_435_8009a6_2215       RP_neg_435_8009a6_2215  3.016667e-03 -9.603175e-05 #> RP_neg_358_2061a5_2818       RP_neg_358_2061a5_2818 -7.880952e-04  8.730159e-06 #> RP_neg_397_2502a3_7998       RP_neg_397_2502a3_7998 -1.178571e-03 -1.490620e-03 #> RP_neg_165_9294a3_4261       RP_neg_165_9294a3_4261  3.311905e-03 -1.305556e-03 #> RP_neg_413_1764a3_6741       RP_neg_413_1764a3_6741 -5.142857e-04 -2.075974e-03 #> RP_neg_115_4062a7_7329       RP_neg_115_4062a7_7329 -1.388889e-03 -1.139683e-03 #> RP_neg_300_1295a1_6959       RP_neg_300_1295a1_6959 -5.158730e-05 -1.043723e-03 #> RP_neg_177_6084a5_2913       RP_neg_177_6084a5_2913 -1.632468e-03 -1.384921e-03 #> RP_neg_134_1196a2_9606       RP_neg_134_1196a2_9606 -1.333261e-03 -3.228644e-03 #> RP_neg_139_4456a4_1251       RP_neg_139_4456a4_1251  4.514646e-03  9.441558e-03 #> RP_neg_385_6867a4_136         RP_neg_385_6867a4_136 -2.178571e-03 -2.866667e-03 #> RP_pos_490_9235a4_0176       RP_pos_490_9235a4_0176 -7.119048e-04 -8.523810e-04 #> RP_pos_383_4976a2_6503       RP_pos_383_4976a2_6503  1.488817e-03 -2.610317e-03 #> RP_pos_344_9911a1_9656       RP_pos_344_9911a1_9656 -1.969048e-03 -1.046032e-03 #> RP_pos_117_7095a4_0945       RP_pos_117_7095a4_0945 -1.452381e-04 -1.399351e-03 #> RP_pos_294_9596a6_7569       RP_pos_294_9596a6_7569 -1.373882e-03 -2.694444e-03 #> RP_pos_460_4815a0_8843       RP_pos_460_4815a0_8843  9.479315e-03 -2.874459e-04 #> RP_pos_272_3545a3_5592       RP_pos_272_3545a3_5592  8.158009e-04 -1.160173e-03 #> RP_pos_409_2445a2_4149       RP_pos_409_2445a2_4149 -9.190476e-04  2.690476e-04 #> RP_pos_245_9925a3_6251       RP_pos_245_9925a3_6251  7.776335e-04  1.050794e-03 #> RP_pos_369_1069a1_6271       RP_pos_369_1069a1_6271  9.357143e-04 -1.553102e-03 #> RP_pos_174_0715a4_3465       RP_pos_174_0715a4_3465 -2.293651e-03 -1.162626e-03 #> RP_pos_324_6195a4_7743       RP_pos_324_6195a4_7743  2.937229e-04 -2.446032e-03 #> RP_pos_149_432a4_1341         RP_pos_149_432a4_1341 -2.707937e-03  1.108730e-03 #> RP_pos_461_5891a7_1505       RP_pos_461_5891a7_1505  1.016364e-02  4.041919e-03 #> RP_pos_458_263a4_3477         RP_pos_458_263a4_3477  5.714286e-04 -1.910317e-03 #> RP_pos_226_7218a3_1371       RP_pos_226_7218a3_1371  5.555556e-04  1.286436e-04 #> RP_pos_280_3779a4_0424       RP_pos_280_3779a4_0424  2.216017e-03  1.062121e-03 #> RP_pos_447_3232a2_2393       RP_pos_447_3232a2_2393  5.461039e-04  2.287157e-05 #> RP_pos_453_282a5_128           RP_pos_453_282a5_128 -1.869841e-03 -8.103175e-04 #> RP_pos_153_9636a7_9986       RP_pos_153_9636a7_9986  1.010317e-03 -7.444444e-04 #>                                      QC MeanDecreaseAccuracy MeanDecreaseGini #> HILIC_neg_259_9623a4_4322  6.500000e-04        -1.108028e-03        0.3424575 #> HILIC_neg_108_1065a2_6121  3.733333e-03         5.117787e-04        0.3398187 #> HILIC_neg_158_23a1_4128    6.333333e-03        -1.624944e-03        0.4450538 #> HILIC_neg_251_0056a0_6161  2.633333e-03        -1.276767e-04        0.5445001 #> HILIC_neg_401_52a4_211     1.166667e-03         2.589966e-03        0.4417473 #> HILIC_neg_400_7045a5_3842 -4.283333e-03        -1.301267e-03        0.5635683 #> HILIC_neg_304_014a7_1311   6.285714e-03         7.800070e-04        0.4112469 #> HILIC_neg_276_6328a2_7734  6.666667e-04        -5.446324e-04        0.1459476 #> HILIC_neg_118_9111a4_1865  3.500000e-03        -7.466773e-04        0.3652469 #> HILIC_neg_446_9413a2_315   2.333333e-04        -5.002127e-04        0.1611228 #> HILIC_neg_127_5856a4_3758  1.900000e-03         7.435617e-04        0.1921621 #> HILIC_neg_303_2144a1_2372 -1.066667e-03        -3.547017e-04        0.2169643 #> HILIC_neg_366_6203a6_1825  3.166667e-03         1.034897e-03        0.4007566 #> HILIC_neg_258_7252a7_5445 -1.580952e-03        -7.191223e-04        0.4433297 #> HILIC_neg_301_2643a4_0372 -1.833333e-03        -6.209840e-05        0.3029642 #> HILIC_neg_224_4031a4_7409  3.166667e-03        -6.956870e-05        0.3327361 #> HILIC_neg_424_8488a6_7736  2.361905e-02         5.818613e-03        0.6737774 #> HILIC_neg_131_2034a6_1385  1.666667e-03         1.423015e-03        0.3681105 #> HILIC_neg_236_4114a5_6302  1.133333e-03        -8.174398e-04        0.3773775 #> HILIC_neg_411_0148a0_7484  8.933333e-03         1.921912e-03        0.5220028 #> HILIC_pos_288_6263a6_572   1.485714e-03         1.770518e-03        0.2320538 #> HILIC_pos_331_1173a7_7822  4.933333e-03         2.482079e-05        0.3615678 #> HILIC_pos_139_4044a6_0388  3.633333e-03         1.328496e-04        0.4270742 #> HILIC_pos_132_7373a6_4146  3.033333e-03         1.457494e-03        0.4514935 #> HILIC_pos_298_6144a3_839   1.233333e-03        -1.885910e-03        0.2741926 #> HILIC_pos_410_9203a2_7329  1.161905e-02         4.060381e-03        0.7341371 #> HILIC_pos_145_8514a2_811  -9.000000e-04        -3.178699e-04        0.1795066 #> HILIC_pos_306_0061a4_4049  3.166667e-03         4.279735e-04        0.2616871 #> HILIC_pos_425_8858a4_4494  2.333333e-03         7.822570e-04        0.2775185 #> HILIC_pos_436_332a6_1165   1.000000e-04         6.549909e-06        0.1704676 #> HILIC_pos_255_0094a7_9288 -5.000000e-04        -1.436363e-03        0.2284752 #> HILIC_pos_417_1474a2_8239  1.480952e-03        -3.853358e-04        0.3111200 #> HILIC_pos_297_8334a0_6647  3.690476e-04        -8.814177e-04        0.2940872 #> HILIC_pos_449_2162a0_7574  2.369524e-02         5.250873e-03        0.6915003 #> HILIC_pos_197_7438a7_72   -1.685714e-03        -2.267420e-03        0.4090463 #> HILIC_pos_141_601a7_387    3.000000e-03        -4.294466e-04        0.3025703 #> HILIC_pos_448_1172a6_8567 -1.666667e-04        -8.199205e-04        0.1955576 #> HILIC_pos_346_6405a3_2719  9.000000e-04         4.709838e-04        0.2342236 #> HILIC_pos_334_3285a1_7395  1.700000e-03         2.008600e-04        0.3668552 #> HILIC_pos_215_5364a2_6707  1.433333e-03        -8.736572e-04        0.2503169 #> RP_neg_458_0877a1_5798     5.871429e-03         6.876067e-04        0.4736754 #> RP_neg_365_8511a5_6086    -1.400000e-03        -6.277765e-04        0.1933216 #> RP_neg_369_5116a6_4389     5.100000e-03         2.108758e-03        0.6774124 #> RP_neg_222_4828a6_0392     8.980952e-03         1.394462e-02        1.2177556 #> RP_neg_114_84a3_0917      -1.857143e-04         1.374860e-03        0.7197551 #> RP_neg_317_554a3_063       4.000000e-03         5.955602e-03        0.8504420 #> RP_neg_419_897a3_9617      4.933333e-03         1.828761e-03        0.4055433 #> RP_neg_493_3039a6_7816    -6.666667e-05         2.652572e-04        0.2577545 #> RP_neg_359_0517a7_3652     2.133333e-03         1.498689e-04        0.1740933 #> RP_neg_435_8009a6_2215     5.219048e-03         1.852317e-03        0.4256321 #> RP_neg_358_2061a5_2818     1.504762e-03        -1.372205e-04        0.2948291 #> RP_neg_397_2502a3_7998     1.233333e-03        -6.796384e-04        0.2859919 #> RP_neg_165_9294a3_4261     3.566667e-03         1.348796e-03        0.2332887 #> RP_neg_413_1764a3_6741    -1.966667e-03        -1.155828e-03        0.3206510 #> RP_neg_115_4062a7_7329     2.433333e-03        -3.868223e-04        0.5043250 #> RP_neg_300_1295a1_6959     3.566667e-03         4.383973e-05        0.3743560 #> RP_neg_177_6084a5_2913     3.800000e-03        -5.195628e-04        0.3309632 #> RP_neg_134_1196a2_9606     1.400000e-03        -1.530651e-03        0.2542685 #> RP_neg_139_4456a4_1251     4.833333e-03         5.914602e-03        1.0856241 #> RP_neg_385_6867a4_136      2.400000e-03        -1.215630e-03        0.2887230 #> RP_pos_490_9235a4_0176     4.233333e-03         1.136629e-04        0.2872520 #> RP_pos_383_4976a2_6503     4.338095e-03         6.967881e-04        0.4617988 #> RP_pos_344_9911a1_9656     1.500000e-03        -8.808234e-04        0.3229758 #> RP_pos_117_7095a4_0945    -4.333333e-04        -7.387323e-04        0.2009462 #> RP_pos_294_9596a6_7569     1.333333e-03        -1.417598e-03        0.1872497 #> RP_pos_460_4815a0_8843     1.280000e-02         5.316032e-03        0.8229978 #> RP_pos_272_3545a3_5592     1.100000e-03        -5.677831e-05        0.3200114 #> RP_pos_409_2445a2_4149     6.666667e-05        -2.304388e-04        0.2686083 #> RP_pos_245_9925a3_6251     1.733333e-03         9.067975e-04        0.3750133 #> RP_pos_369_1069a1_6271     2.133333e-03         4.375534e-04        0.2915167 #> RP_pos_174_0715a4_3465     2.333333e-03        -1.046157e-03        0.3934266 #> RP_pos_324_6195a4_7743    -1.666667e-04        -8.661110e-04        0.3188757 #> RP_pos_149_432a4_1341     -1.476190e-04        -6.200952e-04        0.4103764 #> RP_pos_461_5891a7_1505     1.545238e-02         8.049910e-03        0.8222344 #> RP_pos_458_263a4_3477      2.433333e-03         7.525589e-05        0.2650737 #> RP_pos_226_7218a3_1371    -1.066667e-03         1.516917e-04        0.2561316 #> RP_pos_280_3779a4_0424     2.400000e-03         1.529904e-03        0.4819051 #> RP_pos_447_3232a2_2393     4.566667e-03         1.609335e-03        0.3962084 #> RP_pos_453_282a5_128       6.314286e-03        -1.957784e-04        0.4421796 #> RP_pos_153_9636a7_9986    -3.666667e-03        -9.220508e-04        0.5252699"},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_MSMS.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the MS/MS output to publication ready — fix_MSMS","title":"Transform the MS/MS output to publication ready — fix_MSMS","text":"Change MS/MS output MS-DIAL format publication-ready format. Original spectra sorted according abundance percentage clarified. See example .","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_MSMS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the MS/MS output to publication ready — fix_MSMS","text":"","code":"fix_MSMS(   object,   ms_ms_spectrum_col = \"MS_MS_spectrum\",   peak_num = 10,   min_abund = 5,   deci_num = 3 )"},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_MSMS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the MS/MS output to publication ready — fix_MSMS","text":"object  SummarizedExperiment MetaboSet object ms_ms_spectrum_col name column original MS/MS spectra peak_num maximum number peak kept (Recommended: 4-10) min_abund minimum relative abundance kept (Recommended: 1-5) deci_num maximum number decimals m/z value (Recommended: >2)","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_MSMS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the MS/MS output to publication ready — fix_MSMS","text":"SummarizedExperiment MetaboSet object one supplied, publication-ready MS/MS peak information.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_MSMS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform the MS/MS output to publication ready — fix_MSMS","text":"Original MS/MS spectra MS-DIAL: m/z:Raw Abundance 23.193:254 26.13899:5 27.50986:25 55.01603:82 70.1914:16 73.03017:941 73.07685:13 73.13951:120 Spectra transformation: m/z  (Abundance) 73.03 (100), 23.193 (27), 73.14 (12.8), 55.016 (8.7)","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_MSMS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform the MS/MS output to publication ready — fix_MSMS","text":"","code":"data(example_set) # Spectra before fixing ex_set <- example_set rowData(ex_set)$MS_MS_spectrum <- NA rowData(ex_set)[1, ]$MS_MS_spectrum <-    \"28.769:53 44.933:42 52.106:89 69.518:140\" rowData(ex_set)$MS_MS_spectrum[   !is.na(rowData(ex_set)$MS_MS_spectrum)] #> [1] \"28.769:53 44.933:42 52.106:89 69.518:140\" # Fixing spectra with default settings fixed_MSMS_peaks <- fix_MSMS(ex_set) #> INFO [2025-06-23 22:36:33] Saving fixed MS/MS spectra to column 'MS_MS_Spectrum_clean' in rowData # Spectra after fixing rowData(fixed_MSMS_peaks)$MS_MS_Spectrum_clean[   !is.na(rowData(fixed_MSMS_peaks)$MS_MS_Spectrum_clean)] #> [1] \"69.518 (100), 52.106 (63.6), 28.769 (37.9), 44.933 (30)\""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix object for functioning of notame — fix_object","title":"Fix object for functioning of notame — fix_object","text":"Attempts create missing columns pheno feature data. Optionally cleans object splits object mode. Modifies supplied \"Sample_ID\" column needed. Aims make object compatible notame.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix object for functioning of notame — fix_object","text":"","code":"fix_object(   object,   id_prefix = \"ID_\",   id_column = NULL,   split_by = NULL,   name = NULL,   clean = TRUE,   split_data = FALSE,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix object for functioning of notame — fix_object","text":"object  SummarizedExperiment MetaboSet object id_prefix character, prefix autogenerated sample IDs, see Details id_column character, column name unique identification samples split_by character vector, case modes object, column names feature data used separate modes (usually Mode Column) name case object contains one mode, name mode, \"Hilic_neg\" clean boolean, whether select best classes, reorder columns consistently rename columns pheno feature split_data logical, whether split data analytical mode recorded \"Split\" column feature data. TRUE (default), return list MetaboSet objects, one per analytical mode. FALSE, return single MetaboSet object. assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix object for functioning of notame — fix_object","text":"new SummarizedExperiment object MetaboSet object single peak table. split_data = TRUE, list containing separate objects analytical modes.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix object for functioning of notame — fix_object","text":"specify one split_by name. feature data contain columns named \"Split\", used separate features different modes, \"Flag\" recording flagged features. Unless column named \"Feature_ID\" found feature data, feature ID generated based value \"Split\", mass retention time. function try find columns mass retention time looking common alternatives, throw error matching column found. Sample information needs contain row called \"Injection_order\", values need unique. addition, possible sample identifier row needs named \"Sample_ID\", specified id_column, values need unique, exception QC samples: \"QC\" identifiers, replaced \"QC_1\", \"QC_2\" . \"Sample_ID\" column found, created using id_prefix injection order renaming id_column.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fix_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix object for functioning of notame — fix_object","text":"","code":"data(example_set) ex_set <- example_set rowData(ex_set)$Flag <- NULL fixed <- fix_object(ex_set) #> INFO [2025-06-23 22:36:33] Pheno data was cleaned #> INFO [2025-06-23 22:36:33] Initializing 'Flag' column with unflagged features #> INFO [2025-06-23 22:36:33] Feature data was cleaned"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set the values in the flag column — flag","title":"Get and set the values in the flag column — flag","text":"Get set values flag column","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set the values in the flag column — flag","text":"","code":"flag(object)  flag(object) <- value  # S4 method for class 'SummarizedExperiment' flag(object)  # S4 method for class 'SummarizedExperiment' flag(object) <- value"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set the values in the flag column — flag","text":"object  SummarizedExperiment MetaboSet object value character vector, values flag column","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set the values in the flag column — flag","text":"Character vector feature flags. endomorphism, object modified flag column.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set the values in the flag column — flag","text":"","code":"data(example_set) # Get values in flag column of rowData flag(example_set) #>  [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [76] NA NA NA NA NA  data(example_set) # Flag a suspicious feature manually flag(example_set)[1] <- \"Contaminant, known from experience\""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_contaminants.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag contaminants based on blanks — flag_contaminants","title":"Flag contaminants based on blanks — flag_contaminants","text":"Flags contaminant features comparing median values blanks biological samples. Biological sampels defined samples marked blanks QCs. median blanks > median biological samples times set ratio, feature flagged contaminant.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_contaminants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag contaminants based on blanks — flag_contaminants","text":"","code":"flag_contaminants(   object,   blank_col,   blank_label,   flag_thresh = 0.05,   flag_label = \"Contaminant\",   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_contaminants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag contaminants based on blanks — flag_contaminants","text":"object  SummarizedExperiment MetaboSet object blank_col character, column name pheno data blank labels blank_label character, label blank samples blank_col flag_thresh numeric, ratio threshold flagging contaminants. median blanks > flag_thresh * median biological samples, feature gets flagged. flag_label character, label used flagging contaminants. Can changed sample processing contaminants carryover contaminants flagged separately. assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_contaminants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag contaminants based on blanks — flag_contaminants","text":"SummarizedExperiment MetaboSet object contaminant features flagged.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_contaminants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag contaminants based on blanks — flag_contaminants","text":"","code":"data(example_set) # Make a blank sample which has one (first) feature exceeding the threshold ## Abundance matrix med <- median(assay(example_set)[1, example_set$QC != \"QC\"]) assay <- matrix(c(med * 0.05 + 1, rep(0, 79)), ncol = 1, nrow = 80,                    dimnames = list(NULL, \"Demo_51\")) assay <- cbind(assay(example_set), assay) ## Sample metadata pheno_data <- colData(example_set)[1, ] rownames(pheno_data) <- \"Demo_51\" pheno_data$Sample_ID <- \"Demo_51\" pheno_data$Injection_order <- 51 pheno_data[c(\"Subject_ID\", \"Group\", \"QC\", \"Time\")] <- \"Blank\" pheno_data <- rbind(colData(example_set), pheno_data) ## Feature metadata feature_data <- rowData(example_set)  # Construct SummarizedExperiment object with blank sample ex_set <- SummarizedExperiment(assays = assay,                                 colData = pheno_data,                                rowData = feature_data) # Flag contaminant(s) contaminants_flagged <- flag_contaminants(ex_set, blank_col = \"QC\",                                            blank_label = \"Blank\") #> INFO [2025-06-23 22:36:34]  #> 1% of features flagged as contaminants"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_detection.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag features with low detection rate — flag_detection","title":"Flag features with low detection rate — flag_detection","text":"Flags features high amount missing values. two detection rate limits, defined minimum proportion samples need value (NA) feature kept. 'qc_limit detection rate limit QC samples, 'group_limit detection rate limit actual study groups. group limit passed LEAST ONE GROUP, feature kept. Features low detection rate QCs flagged \"Low_qc_detection\", low detection rate study groups flagged \"Low_group_detection\". detection rates groups recorded feature data.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_detection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag features with low detection rate — flag_detection","text":"","code":"flag_detection(   object,   qc_limit = 0.7,   group_limit = 0.5,   group = NULL,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_detection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag features with low detection rate — flag_detection","text":"object  SummarizedExperiment MetaboSet object qc_limit detection rate limit QC samples group_limit detection rate limit study groups group columns name sample information use grouping variable assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_detection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag features with low detection rate — flag_detection","text":"SummarizedExperiment MetaboSet object features flagged.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_detection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag features with low detection rate — flag_detection","text":"","code":"data(example_set) ex_set <- mark_nas(example_set, value = 0) ex_set <- flag_detection(ex_set, group = \"Group\") #> INFO [2025-06-23 22:36:34]  #> 1% of features flagged for low detection rate rowData(ex_set) #> DataFrame with 80 rows and 11 columns #>                                       Feature_ID       Split Alignment #>                                      <character> <character> <integer> #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4..   HILIC_neg         1 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2..   HILIC_neg         2 #> HILIC_neg_158_23a1_4128   HILIC_neg_158_23a1_4..   HILIC_neg         3 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0..   HILIC_neg         4 #> HILIC_neg_401_52a4_211    HILIC_neg_401_52a4_211   HILIC_neg         5 #> ...                                          ...         ...       ... #> RP_pos_226_7218a3_1371    RP_pos_226_7218a3_1371      RP_pos        16 #> RP_pos_280_3779a4_0424    RP_pos_280_3779a4_0424      RP_pos        17 #> RP_pos_447_3232a2_2393    RP_pos_447_3232a2_2393      RP_pos        18 #> RP_pos_453_282a5_128        RP_pos_453_282a5_128      RP_pos        19 #> RP_pos_153_9636a7_9986    RP_pos_153_9636a7_9986      RP_pos        20 #>                           Average_Mz Average_Rt_min      Column    Ion_mode #>                            <numeric>      <numeric> <character> <character> #> HILIC_neg_259_9623a4_4322    259.962       4.432241       HILIC         neg #> HILIC_neg_108_1065a2_6121    108.107       2.612073       HILIC         neg #> HILIC_neg_158_23a1_4128      158.230       1.412822       HILIC         neg #> HILIC_neg_251_0056a0_6161    251.006       0.616145       HILIC         neg #> HILIC_neg_401_52a4_211       401.520       4.210970       HILIC         neg #> ...                              ...            ...         ...         ... #> RP_pos_226_7218a3_1371       226.722        3.13714          RP         pos #> RP_pos_280_3779a4_0424       280.378        4.04238          RP         pos #> RP_pos_447_3232a2_2393       447.323        2.23926          RP         pos #> RP_pos_453_282a5_128         453.282        5.12797          RP         pos #> RP_pos_153_9636a7_9986       153.964        7.99864          RP         pos #>                                  Flag Detection_rate_Group_A #>                           <character>              <numeric> #> HILIC_neg_259_9623a4_4322          NA                   0.95 #> HILIC_neg_108_1065a2_6121          NA                   0.90 #> HILIC_neg_158_23a1_4128            NA                   0.95 #> HILIC_neg_251_0056a0_6161          NA                   0.90 #> HILIC_neg_401_52a4_211             NA                   0.95 #> ...                               ...                    ... #> RP_pos_226_7218a3_1371             NA                   0.85 #> RP_pos_280_3779a4_0424             NA                   0.85 #> RP_pos_447_3232a2_2393             NA                   0.95 #> RP_pos_453_282a5_128               NA                   0.90 #> RP_pos_153_9636a7_9986             NA                   0.80 #>                           Detection_rate_Group_B Detection_rate_QC #>                                        <numeric>         <numeric> #> HILIC_neg_259_9623a4_4322                   0.90               1.0 #> HILIC_neg_108_1065a2_6121                   0.95               0.9 #> HILIC_neg_158_23a1_4128                     0.90               0.8 #> HILIC_neg_251_0056a0_6161                   0.95               1.0 #> HILIC_neg_401_52a4_211                      0.95               1.0 #> ...                                          ...               ... #> RP_pos_226_7218a3_1371                       0.9               0.9 #> RP_pos_280_3779a4_0424                       0.9               1.0 #> RP_pos_447_3232a2_2393                       0.9               0.9 #> RP_pos_453_282a5_128                         1.0               0.8 #> RP_pos_153_9636a7_9986                       0.9               0.8"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag low-quality features — flag_quality","title":"Flag low-quality features — flag_quality","text":"Flags low-quality features using quality metrics defined (Broadhurst 2018). metrics described detain Details. condition keeping features given character, passed filter.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag low-quality features — flag_quality","text":"","code":"flag_quality flag_quality(object, assay.type = NULL, condition =   \"(RSD_r < 0.2 & D_ratio_r < 0.4) |    (RSD < 0.1 & RSD_r < 0.1 & D_ratio < 0.1)\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag low-quality features — flag_quality","text":"object  SummarizedExperiment MetaboSet object assay.type character, assay used case multiple assays condition character, condition keeping features, see Details","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag low-quality features — flag_quality","text":"SummarizedExperiment MetaboSet object features flagged.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_quality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flag low-quality features — flag_quality","text":"quality metrics measure two things: internal spread QCs, spread QCs compared spread biological samples. Internal spread measured relative standard deviation (RSD), also known coefficient variation (CV). $$RSD = sd(QC) / mean(QC) $$ \\(sd(QC)\\) standard deviation QC samples '\\(mean(QC)\\) sample mean signal QC samples. RSD can also replaced non-parametric, robust version based median median absolute deviation (MAD):   $$RSD_r = 1.4826 * MAD(QC) / median(QC)$$ spread QC samples compared biological samples measured using metric called D-ratio:   $$D_ratio = sd(QC) / sd(biological)$$ , , non-parametric, robust alternative:   $$D_ratio_r = MAD(QC) / MAD(biolofical) $$ default condition keeps features pass either two following conditions: $$RSD_r < 0.2 \\& D_ratio_r < 0.4$$ $$RSD < 0.1 \\& RSD_r < 0.1 \\& D_ratio < 0.1$$","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_quality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flag low-quality features — flag_quality","text":"Broadhurst, David et al. Guidelines considerations use system suitability quality control samples mass spectrometry assays applied untargeted clinical metabolomic studies. Metabolomics : Official journal Metabolomic Society vol. 14,6 (2018): 72. doi:10.1007/s11306-018-1367-3","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag low-quality features — flag_quality","text":"","code":"data(example_set) ex_set <- flag_quality(example_set) #> INFO [2025-06-23 22:36:34]  #> 92% of features flagged for low quality rowData(ex_set) #> DataFrame with 80 rows and 12 columns #>                                       Feature_ID       Split Alignment #>                                      <character> <character> <integer> #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4..   HILIC_neg         1 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2..   HILIC_neg         2 #> HILIC_neg_158_23a1_4128   HILIC_neg_158_23a1_4..   HILIC_neg         3 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0..   HILIC_neg         4 #> HILIC_neg_401_52a4_211    HILIC_neg_401_52a4_211   HILIC_neg         5 #> ...                                          ...         ...       ... #> RP_pos_226_7218a3_1371    RP_pos_226_7218a3_1371      RP_pos        16 #> RP_pos_280_3779a4_0424    RP_pos_280_3779a4_0424      RP_pos        17 #> RP_pos_447_3232a2_2393    RP_pos_447_3232a2_2393      RP_pos        18 #> RP_pos_453_282a5_128        RP_pos_453_282a5_128      RP_pos        19 #> RP_pos_153_9636a7_9986    RP_pos_153_9636a7_9986      RP_pos        20 #>                           Average_Mz Average_Rt_min      Column    Ion_mode #>                            <numeric>      <numeric> <character> <character> #> HILIC_neg_259_9623a4_4322    259.962       4.432241       HILIC         neg #> HILIC_neg_108_1065a2_6121    108.107       2.612073       HILIC         neg #> HILIC_neg_158_23a1_4128      158.230       1.412822       HILIC         neg #> HILIC_neg_251_0056a0_6161    251.006       0.616145       HILIC         neg #> HILIC_neg_401_52a4_211       401.520       4.210970       HILIC         neg #> ...                              ...            ...         ...         ... #> RP_pos_226_7218a3_1371       226.722        3.13714          RP         pos #> RP_pos_280_3779a4_0424       280.378        4.04238          RP         pos #> RP_pos_447_3232a2_2393       447.323        2.23926          RP         pos #> RP_pos_453_282a5_128         453.282        5.12797          RP         pos #> RP_pos_153_9636a7_9986       153.964        7.99864          RP         pos #>                                  Flag       RSD     RSD_r   D_ratio D_ratio_r #>                           <character> <numeric> <numeric> <numeric> <numeric> #> HILIC_neg_259_9623a4_4322 Low_quality  0.127075  0.156465  0.363022  0.475271 #> HILIC_neg_108_1065a2_6121 Low_quality  0.468943  0.375347  1.202952  1.223426 #> HILIC_neg_158_23a1_4128   Low_quality  0.568911  0.188623  1.019238  0.509172 #> HILIC_neg_251_0056a0_6161 Low_quality  0.366231  0.383584  0.875327  1.089626 #> HILIC_neg_401_52a4_211    Low_quality  0.153478  0.222952  0.419890  0.710290 #> ...                               ...       ...       ...       ...       ... #> RP_pos_226_7218a3_1371    Low_quality  0.419258  0.298690  0.986842  1.069176 #> RP_pos_280_3779a4_0424             NA  0.126026  0.173915  0.253066  0.370787 #> RP_pos_447_3232a2_2393    Low_quality  0.729257  0.948402  1.106946  1.207068 #> RP_pos_453_282a5_128      Low_quality  0.663424  1.133718  1.465057  2.228991 #> RP_pos_153_9636a7_9986    Low_quality  0.570564  0.183891  1.075597  0.439143 # Custom condition ex_set <- flag_quality(example_set,    condition = \"RSD_r < 0.3 & D_ratio_r < 0.6\") #> INFO [2025-06-23 22:36:35]  #> 70% of features flagged for low quality rowData(ex_set) #> DataFrame with 80 rows and 12 columns #>                                       Feature_ID       Split Alignment #>                                      <character> <character> <integer> #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4..   HILIC_neg         1 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2..   HILIC_neg         2 #> HILIC_neg_158_23a1_4128   HILIC_neg_158_23a1_4..   HILIC_neg         3 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0..   HILIC_neg         4 #> HILIC_neg_401_52a4_211    HILIC_neg_401_52a4_211   HILIC_neg         5 #> ...                                          ...         ...       ... #> RP_pos_226_7218a3_1371    RP_pos_226_7218a3_1371      RP_pos        16 #> RP_pos_280_3779a4_0424    RP_pos_280_3779a4_0424      RP_pos        17 #> RP_pos_447_3232a2_2393    RP_pos_447_3232a2_2393      RP_pos        18 #> RP_pos_453_282a5_128        RP_pos_453_282a5_128      RP_pos        19 #> RP_pos_153_9636a7_9986    RP_pos_153_9636a7_9986      RP_pos        20 #>                           Average_Mz Average_Rt_min      Column    Ion_mode #>                            <numeric>      <numeric> <character> <character> #> HILIC_neg_259_9623a4_4322    259.962       4.432241       HILIC         neg #> HILIC_neg_108_1065a2_6121    108.107       2.612073       HILIC         neg #> HILIC_neg_158_23a1_4128      158.230       1.412822       HILIC         neg #> HILIC_neg_251_0056a0_6161    251.006       0.616145       HILIC         neg #> HILIC_neg_401_52a4_211       401.520       4.210970       HILIC         neg #> ...                              ...            ...         ...         ... #> RP_pos_226_7218a3_1371       226.722        3.13714          RP         pos #> RP_pos_280_3779a4_0424       280.378        4.04238          RP         pos #> RP_pos_447_3232a2_2393       447.323        2.23926          RP         pos #> RP_pos_453_282a5_128         453.282        5.12797          RP         pos #> RP_pos_153_9636a7_9986       153.964        7.99864          RP         pos #>                                  Flag       RSD     RSD_r   D_ratio D_ratio_r #>                           <character> <numeric> <numeric> <numeric> <numeric> #> HILIC_neg_259_9623a4_4322          NA  0.127075  0.156465  0.363022  0.475271 #> HILIC_neg_108_1065a2_6121 Low_quality  0.468943  0.375347  1.202952  1.223426 #> HILIC_neg_158_23a1_4128            NA  0.568911  0.188623  1.019238  0.509172 #> HILIC_neg_251_0056a0_6161 Low_quality  0.366231  0.383584  0.875327  1.089626 #> HILIC_neg_401_52a4_211    Low_quality  0.153478  0.222952  0.419890  0.710290 #> ...                               ...       ...       ...       ...       ... #> RP_pos_226_7218a3_1371    Low_quality  0.419258  0.298690  0.986842  1.069176 #> RP_pos_280_3779a4_0424             NA  0.126026  0.173915  0.253066  0.370787 #> RP_pos_447_3232a2_2393    Low_quality  0.729257  0.948402  1.106946  1.207068 #> RP_pos_453_282a5_128      Low_quality  0.663424  1.133718  1.465057  2.228991 #> RP_pos_153_9636a7_9986             NA  0.570564  0.183891  1.075597  0.439143"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_report.html","id":null,"dir":"Reference","previous_headings":"","what":"A report of flagged features — flag_report","title":"A report of flagged features — flag_report","text":"Computes number features stage flagging mode.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A report of flagged features — flag_report","text":"","code":"flag_report(object)"},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A report of flagged features — flag_report","text":"object  SummarizedExperiment MetaboSet object","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A report of flagged features — flag_report","text":"data frame number features stage flagging.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/flag_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A report of flagged features — flag_report","text":"","code":"data(example_set) flagged <- example_set %>%   mark_nas(0) %>%   flag_detection(group = \"Group\") %>%   flag_quality() #> INFO [2025-06-23 22:36:35]  #> 1% of features flagged for low detection rate #> INFO [2025-06-23 22:36:35]  #> 91% of features flagged for low quality flag_report(flagged) #>       Split Kept Low_quality Total Flagged Low_qc_detection #> 1 HILIC_neg    3          17    20      17               NA #> 2 HILIC_pos    1          18    20      19                1 #> 3    RP_neg    2          18    20      18               NA #> 4    RP_pos    0          20    20      20               NA"},{"path":"https://hanhineva-lab.github.io/notame/reference/fold_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Fold change — fold_change","title":"Fold change — fold_change","text":"Computes fold change group feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fold_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fold change — fold_change","text":"","code":"fold_change(object, group, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/fold_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fold change — fold_change","text":"object  SummarizedExperiment MetaboSet object group character, name group column assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fold_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fold change — fold_change","text":"data frame fold changes feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/fold_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fold change — fold_change","text":"","code":"data(example_set) # Between groups fc <- fold_change(example_set, group = \"Group\") #> INFO [2025-06-23 22:36:35] Starting to compute fold changes. #> INFO [2025-06-23 22:36:35] Fold changes computed. # Between time points fc <- fold_change(example_set, group = \"Time\") #> INFO [2025-06-23 22:36:35] Starting to compute fold changes. #> INFO [2025-06-23 22:36:35] Fold changes computed."},{"path":"https://hanhineva-lab.github.io/notame/reference/group_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set name of the special column for group labels — group_col","title":"Get and set name of the special column for group labels — group_col","text":"Get set name special column group labels","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/group_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set name of the special column for group labels — group_col","text":"","code":"group_col(object)  group_col(object) <- value"},{"path":"https://hanhineva-lab.github.io/notame/reference/group_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set name of the special column for group labels — group_col","text":"object MetaboSet object value string, name column designated holding group labels","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/group_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set name of the special column for group labels — group_col","text":"Character, name grouping variable. endomorphism, object grouping variable set specified variable.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/group_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set name of the special column for group labels — group_col","text":"","code":"data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:36:36]  #> Checking feature information #> INFO [2025-06-23 22:36:36] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:36] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:36] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:36] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:36] Setting row and column names of exprs based on feature and pheno data # Get name of grouping variable group_col(ex_set) #> [1] NA  data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:36:36]  #> Checking feature information #> INFO [2025-06-23 22:36:36] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:36] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:36] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:36] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:36] Setting row and column names of exprs based on feature and pheno data # Set grouping variable group_col(ex_set) <- \"Group\""},{"path":"https://hanhineva-lab.github.io/notame/reference/importance_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature importance in random forest — importance_rf","title":"Feature importance in random forest — importance_rf","text":"Extracts feature importance random forest nice format.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/importance_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature importance in random forest — importance_rf","text":"","code":"importance_rf(rf)"},{"path":"https://hanhineva-lab.github.io/notame/reference/importance_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature importance in random forest — importance_rf","text":"rf object class randomForest","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/importance_rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Feature importance in random forest — importance_rf","text":"data frame feature importance.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/importance_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature importance in random forest — importance_rf","text":"","code":"data(example_set) rf <- fit_rf(example_set, y = \"Group\") rf #>  #> Call: #>  randomForest(x = x, y = colData(object)[, y], importance = importance)  #>                Type of random forest: classification #>                      Number of trees: 500 #> No. of variables tried at each split: 8 #>  #>         OOB estimate of  error rate: 48% #> Confusion matrix: #>     A B QC class.error #> A  15 5  0        0.25 #> B  11 9  0        0.55 #> QC  4 4  2        0.80 importance_rf(rf) #>                                          Feature_ID             A             B #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4_4322  1.616667e-03 -1.952381e-03 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2_6121 -1.095960e-03  2.987302e-03 #> HILIC_neg_158_23a1_4128     HILIC_neg_158_23a1_4128 -3.826118e-03  1.934055e-03 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0_6161  3.142857e-04 -2.682540e-04 #> HILIC_neg_401_52a4_211       HILIC_neg_401_52a4_211 -3.445166e-04 -3.000000e-04 #> HILIC_neg_400_7045a5_3842 HILIC_neg_400_7045a5_3842  3.246032e-04  3.204040e-03 #> HILIC_neg_304_014a7_1311   HILIC_neg_304_014a7_1311  1.292807e-03  1.651515e-04 #> HILIC_neg_276_6328a2_7734 HILIC_neg_276_6328a2_7734  1.235714e-03  1.523810e-04 #> HILIC_neg_118_9111a4_1865 HILIC_neg_118_9111a4_1865  3.594517e-04  1.521429e-03 #> HILIC_neg_446_9413a2_315   HILIC_neg_446_9413a2_315 -9.675325e-04  2.678644e-03 #> HILIC_neg_127_5856a4_3758 HILIC_neg_127_5856a4_3758 -1.681818e-04  1.688961e-03 #> HILIC_neg_303_2144a1_2372 HILIC_neg_303_2144a1_2372  4.461039e-04  9.793651e-04 #> HILIC_neg_366_6203a6_1825 HILIC_neg_366_6203a6_1825  6.063492e-04  4.268398e-04 #> HILIC_neg_258_7252a7_5445 HILIC_neg_258_7252a7_5445 -3.450000e-03 -1.161905e-03 #> HILIC_neg_301_2643a4_0372 HILIC_neg_301_2643a4_0372  1.752525e-03  1.177128e-03 #> HILIC_neg_224_4031a4_7409 HILIC_neg_224_4031a4_7409 -2.040404e-03  1.569841e-03 #> HILIC_neg_424_8488a6_7736 HILIC_neg_424_8488a6_7736  3.707937e-03  5.683261e-04 #> HILIC_neg_131_2034a6_1385 HILIC_neg_131_2034a6_1385 -3.531025e-04  2.722944e-03 #> HILIC_neg_236_4114a5_6302 HILIC_neg_236_4114a5_6302 -1.349278e-03 -2.551515e-03 #> HILIC_neg_411_0148a0_7484 HILIC_neg_411_0148a0_7484  2.791708e-04 -2.121573e-03 #> HILIC_pos_288_6263a6_572   HILIC_pos_288_6263a6_572 -3.315873e-03  1.753968e-04 #> HILIC_pos_331_1173a7_7822 HILIC_pos_331_1173a7_7822 -2.601732e-03 -2.928571e-04 #> HILIC_pos_139_4044a6_0388 HILIC_pos_139_4044a6_0388 -1.925469e-03 -1.138095e-03 #> HILIC_pos_132_7373a6_4146 HILIC_pos_132_7373a6_4146  1.623160e-03  2.500000e-03 #> HILIC_pos_298_6144a3_839   HILIC_pos_298_6144a3_839 -7.430014e-04 -3.011905e-03 #> HILIC_pos_410_9203a2_7329 HILIC_pos_410_9203a2_7329  9.014214e-03 -1.845310e-03 #> HILIC_pos_145_8514a2_811   HILIC_pos_145_8514a2_811 -8.293651e-04 -2.461111e-03 #> HILIC_pos_306_0061a4_4049 HILIC_pos_306_0061a4_4049  1.262121e-03 -1.461111e-03 #> HILIC_pos_425_8858a4_4494 HILIC_pos_425_8858a4_4494  2.680231e-03  2.777778e-05 #> HILIC_pos_436_332a6_1165   HILIC_pos_436_332a6_1165 -1.697691e-03 -2.208802e-03 #> HILIC_pos_255_0094a7_9288 HILIC_pos_255_0094a7_9288 -7.277778e-04 -4.357143e-04 #> HILIC_pos_417_1474a2_8239 HILIC_pos_417_1474a2_8239 -2.112698e-03 -5.182540e-04 #> HILIC_pos_297_8334a0_6647 HILIC_pos_297_8334a0_6647  5.769841e-04 -9.373737e-04 #> HILIC_pos_449_2162a0_7574 HILIC_pos_449_2162a0_7574  2.483405e-04  5.921356e-04 #> HILIC_pos_197_7438a7_72     HILIC_pos_197_7438a7_72 -3.552453e-03  2.022222e-03 #> HILIC_pos_141_601a7_387     HILIC_pos_141_601a7_387  1.992063e-04 -5.992063e-04 #> HILIC_pos_448_1172a6_8567 HILIC_pos_448_1172a6_8567 -3.372222e-03 -5.166667e-04 #> HILIC_pos_346_6405a3_2719 HILIC_pos_346_6405a3_2719 -2.885714e-03  3.460317e-04 #> HILIC_pos_334_3285a1_7395 HILIC_pos_334_3285a1_7395 -1.381674e-04  2.269120e-04 #> HILIC_pos_215_5364a2_6707 HILIC_pos_215_5364a2_6707 -1.213492e-03 -2.166883e-03 #> RP_neg_458_0877a1_5798       RP_neg_458_0877a1_5798  1.491342e-03  3.584848e-03 #> RP_neg_365_8511a5_6086       RP_neg_365_8511a5_6086 -5.571429e-04 -2.371429e-03 #> RP_neg_369_5116a6_4389       RP_neg_369_5116a6_4389  4.165079e-03 -1.814358e-03 #> RP_neg_222_4828a6_0392       RP_neg_222_4828a6_0392  4.320635e-03  1.375483e-02 #> RP_neg_114_84a3_0917           RP_neg_114_84a3_0917  1.648413e-03 -1.560317e-03 #> RP_neg_317_554a3_063           RP_neg_317_554a3_063  4.815079e-03  6.144444e-03 #> RP_neg_419_897a3_9617         RP_neg_419_897a3_9617  2.717838e-05 -2.196970e-03 #> RP_neg_493_3039a6_7816       RP_neg_493_3039a6_7816  1.826118e-04 -1.701587e-03 #> RP_neg_359_0517a7_3652       RP_neg_359_0517a7_3652 -1.224359e-03  1.666667e-04 #> RP_neg_435_8009a6_2215       RP_neg_435_8009a6_2215  8.261183e-05 -4.342136e-03 #> RP_neg_358_2061a5_2818       RP_neg_358_2061a5_2818  1.873665e-03 -9.507937e-04 #> RP_neg_397_2502a3_7998       RP_neg_397_2502a3_7998  1.007937e-03 -6.286436e-04 #> RP_neg_165_9294a3_4261       RP_neg_165_9294a3_4261 -7.380952e-04 -7.896825e-04 #> RP_neg_413_1764a3_6741       RP_neg_413_1764a3_6741  8.151515e-04  3.252525e-04 #> RP_neg_115_4062a7_7329       RP_neg_115_4062a7_7329 -6.618326e-04 -1.166667e-04 #> RP_neg_300_1295a1_6959       RP_neg_300_1295a1_6959  1.230159e-03  3.539683e-04 #> RP_neg_177_6084a5_2913       RP_neg_177_6084a5_2913 -1.810317e-03 -6.142857e-04 #> RP_neg_134_1196a2_9606       RP_neg_134_1196a2_9606 -3.888889e-05  6.579365e-04 #> RP_neg_139_4456a4_1251       RP_neg_139_4456a4_1251  4.612648e-03  5.306349e-03 #> RP_neg_385_6867a4_136         RP_neg_385_6867a4_136 -1.262698e-03  1.007937e-04 #> RP_pos_490_9235a4_0176       RP_pos_490_9235a4_0176  1.533333e-03  1.175469e-03 #> RP_pos_383_4976a2_6503       RP_pos_383_4976a2_6503  2.316861e-03 -2.817460e-04 #> RP_pos_344_9911a1_9656       RP_pos_344_9911a1_9656 -4.540404e-04  1.215007e-03 #> RP_pos_117_7095a4_0945       RP_pos_117_7095a4_0945 -6.111111e-04  2.380952e-06 #> RP_pos_294_9596a6_7569       RP_pos_294_9596a6_7569 -1.398341e-03  3.809524e-04 #> RP_pos_460_4815a0_8843       RP_pos_460_4815a0_8843  7.904473e-03 -3.280231e-03 #> RP_pos_272_3545a3_5592       RP_pos_272_3545a3_5592 -6.634921e-04 -4.690476e-04 #> RP_pos_409_2445a2_4149       RP_pos_409_2445a2_4149 -1.123016e-03 -7.539683e-05 #> RP_pos_245_9925a3_6251       RP_pos_245_9925a3_6251 -5.468975e-05  1.611111e-04 #> RP_pos_369_1069a1_6271       RP_pos_369_1069a1_6271 -2.738817e-04 -2.940476e-03 #> RP_pos_174_0715a4_3465       RP_pos_174_0715a4_3465  5.732323e-04  3.179509e-03 #> RP_pos_324_6195a4_7743       RP_pos_324_6195a4_7743  2.300938e-03 -6.522367e-05 #> RP_pos_149_432a4_1341         RP_pos_149_432a4_1341 -2.421429e-03 -2.460317e-05 #> RP_pos_461_5891a7_1505       RP_pos_461_5891a7_1505  7.050794e-03  1.434005e-03 #> RP_pos_458_263a4_3477         RP_pos_458_263a4_3477  5.612554e-04 -3.555556e-04 #> RP_pos_226_7218a3_1371       RP_pos_226_7218a3_1371 -2.879437e-03  8.809524e-04 #> RP_pos_280_3779a4_0424       RP_pos_280_3779a4_0424 -1.443001e-06  5.029582e-04 #> RP_pos_447_3232a2_2393       RP_pos_447_3232a2_2393 -1.950866e-03 -8.540404e-04 #> RP_pos_453_282a5_128           RP_pos_453_282a5_128 -4.476190e-04  1.173810e-03 #> RP_pos_153_9636a7_9986       RP_pos_153_9636a7_9986  1.970829e-03  1.796032e-03 #>                                      QC MeanDecreaseAccuracy MeanDecreaseGini #> HILIC_neg_259_9623a4_4322  2.400000e-03         3.066175e-04        0.3528518 #> HILIC_neg_108_1065a2_6121  3.566667e-03         1.014352e-03        0.3138330 #> HILIC_neg_158_23a1_4128    3.166667e-03        -4.369480e-04        0.3280608 #> HILIC_neg_251_0056a0_6161 -2.600000e-03        -4.589124e-05        0.3752928 #> HILIC_neg_401_52a4_211     3.366667e-03         4.070062e-04        0.4361627 #> HILIC_neg_400_7045a5_3842  9.100000e-03         2.621228e-03        0.6078230 #> HILIC_neg_304_014a7_1311  -1.500000e-03         5.133867e-04        0.3039561 #> HILIC_neg_276_6328a2_7734 -7.666667e-04         4.405938e-04        0.2250095 #> HILIC_neg_118_9111a4_1865  3.000000e-04         7.096941e-04        0.3984765 #> HILIC_neg_446_9413a2_315  -6.666667e-04         5.241457e-05        0.1681697 #> HILIC_neg_127_5856a4_3758 -2.333333e-03        -5.396273e-05        0.3212593 #> HILIC_neg_303_2144a1_2372  2.433333e-03         6.774455e-04        0.3221395 #> HILIC_neg_366_6203a6_1825  1.866667e-03         1.017298e-03        0.3566595 #> HILIC_neg_258_7252a7_5445  9.000000e-04        -1.073779e-03        0.5214690 #> HILIC_neg_301_2643a4_0372 -1.733333e-03         1.045124e-03        0.2986726 #> HILIC_neg_224_4031a4_7409  3.866667e-03         8.964195e-04        0.3213630 #> HILIC_neg_424_8488a6_7736  8.733333e-03         3.717326e-03        0.6571522 #> HILIC_neg_131_2034a6_1385  3.666667e-03         1.475920e-03        0.3041777 #> HILIC_neg_236_4114a5_6302 -2.171429e-03        -1.589113e-03        0.4244208 #> HILIC_neg_411_0148a0_7484  3.571429e-03         3.548476e-04        0.4441159 #> HILIC_pos_288_6263a6_572   1.150000e-03        -8.289494e-04        0.2202516 #> HILIC_pos_331_1173a7_7822  6.585714e-03         2.088111e-04        0.3177510 #> HILIC_pos_139_4044a6_0388 -1.666667e-03        -1.506580e-03        0.3613624 #> HILIC_pos_132_7373a6_4146  3.185714e-03         2.496701e-03        0.5345994 #> HILIC_pos_298_6144a3_839   2.733333e-03        -6.652521e-04        0.3183029 #> HILIC_pos_410_9203a2_7329  1.086667e-02         4.723847e-03        0.7728827 #> HILIC_pos_145_8514a2_811  -6.666667e-04        -1.702240e-03        0.2716367 #> HILIC_pos_306_0061a4_4049  3.000000e-03         1.964515e-04        0.3678906 #> HILIC_pos_425_8858a4_4494 -2.466667e-03         5.413264e-04        0.2730234 #> HILIC_pos_436_332a6_1165   1.200000e-03        -9.797226e-04        0.2361371 #> HILIC_pos_255_0094a7_9288  1.266667e-03        -2.511094e-04        0.2384000 #> HILIC_pos_417_1474a2_8239  2.052381e-03        -4.019299e-04        0.4486455 #> HILIC_pos_297_8334a0_6647 -1.110223e-19        -1.896971e-04        0.2458268 #> HILIC_pos_449_2162a0_7574  1.568571e-02         3.038663e-03        0.6008917 #> HILIC_pos_197_7438a7_72    1.015238e-02         1.041810e-03        0.4806152 #> HILIC_pos_141_601a7_387   -3.855556e-03        -9.039216e-04        0.3180582 #> HILIC_pos_448_1172a6_8567  5.700000e-03        -2.496850e-05        0.2822332 #> HILIC_pos_346_6405a3_2719  2.466667e-03        -2.313992e-04        0.3162277 #> HILIC_pos_334_3285a1_7395  4.400000e-03         9.142713e-04        0.3901337 #> HILIC_pos_215_5364a2_6707  5.000000e-04        -1.281154e-03        0.2416363 #> RP_neg_458_0877a1_5798     2.000000e-04         1.890429e-03        0.5428883 #> RP_neg_365_8511a5_6086     3.000000e-03        -8.513760e-04        0.2099833 #> RP_neg_369_5116a6_4389     5.661905e-03         1.690248e-03        0.8317551 #> RP_neg_222_4828a6_0392     3.500000e-03         7.276089e-03        0.9085766 #> RP_neg_114_84a3_0917       4.166667e-03         9.867154e-04        0.7800590 #> RP_neg_317_554a3_063       3.719048e-03         4.604729e-03        0.6987228 #> RP_neg_419_897a3_9617      3.333333e-03        -2.659171e-04        0.3555057 #> RP_neg_493_3039a6_7816    -1.052381e-03        -7.335251e-04        0.2416877 #> RP_neg_359_0517a7_3652     2.000000e-03        -1.577290e-04        0.1645055 #> RP_neg_435_8009a6_2215     6.433333e-03        -8.801949e-04        0.5645848 #> RP_neg_358_2061a5_2818    -2.966667e-03        -6.382409e-04        0.4081995 #> RP_neg_397_2502a3_7998     1.266667e-03         3.215089e-04        0.2268712 #> RP_neg_165_9294a3_4261     1.466667e-03        -6.093472e-04        0.2713563 #> RP_neg_413_1764a3_6741    -1.000000e-03         1.524272e-04        0.2940782 #> RP_neg_115_4062a7_7329     5.133333e-03         7.509362e-04        0.4084590 #> RP_neg_300_1295a1_6959    -1.100000e-03         4.299941e-04        0.3403362 #> RP_neg_177_6084a5_2913     7.352381e-03         4.134515e-04        0.3118073 #> RP_neg_134_1196a2_9606    -1.600000e-03        -8.856086e-05        0.2135450 #> RP_neg_139_4456a4_1251    -6.666667e-04         3.173709e-03        0.6838947 #> RP_neg_385_6867a4_136      2.666667e-03        -1.946071e-04        0.2544628 #> RP_pos_490_9235a4_0176     4.052381e-03         1.625588e-03        0.2697409 #> RP_pos_383_4976a2_6503     1.333333e-04         1.039508e-03        0.5210794 #> RP_pos_344_9911a1_9656     3.766667e-03         7.567239e-04        0.2630070 #> RP_pos_117_7095a4_0945     9.190476e-04         3.298532e-05        0.1546072 #> RP_pos_294_9596a6_7569     1.233333e-03        -8.966422e-05        0.2665878 #> RP_pos_460_4815a0_8843     1.820476e-02         4.886752e-03        0.8931058 #> RP_pos_272_3545a3_5592     2.333333e-04        -3.658850e-04        0.2662781 #> RP_pos_409_2445a2_4149     3.900000e-03        -1.443850e-04        0.2244028 #> RP_pos_245_9925a3_6251    -8.476190e-04        -2.902390e-04        0.3300598 #> RP_pos_369_1069a1_6271     6.400000e-03        -3.477783e-04        0.3066665 #> RP_pos_174_0715a4_3465     2.733333e-03         2.332519e-03        0.2807195 #> RP_pos_324_6195a4_7743    -3.433333e-03         3.874968e-04        0.3519453 #> RP_pos_149_432a4_1341      4.666667e-04        -9.720988e-04        0.3715794 #> RP_pos_461_5891a7_1505     1.223810e-02         5.657739e-03        0.7578792 #> RP_pos_458_263a4_3477      5.633333e-03         1.040435e-03        0.3869341 #> RP_pos_226_7218a3_1371     4.166667e-03         7.289596e-04        0.3255116 #> RP_pos_280_3779a4_0424     6.400000e-03         1.218840e-03        0.5905074 #> RP_pos_447_3232a2_2393     2.666667e-03        -9.974242e-04        0.3440355 #> RP_pos_453_282a5_128      -2.933333e-03        -3.675164e-05        0.3835782 #> RP_pos_153_9636a7_9986     2.566667e-03         1.566978e-03        0.5862039"},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing values using random forest — impute_rf","title":"Impute missing values using random forest — impute_rf","text":"Impute missing values peak table object using random forest. estimated error imputation logged. recommended set seed number reproducibility (called random forest reason). wrapper around missForest. Use parallelize = \"variables\" run parallel faster testing. NOTE: running parallel prevents user setting seed number.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing values using random forest — impute_rf","text":"","code":"impute_rf(object, all_features = FALSE, assay.type = NULL, name = NULL, ...)"},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing values using random forest — impute_rf","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed imputation. assay.type character, assay used case multiple assays name character, name resultant assay case multiple assays ... passed missForest","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute missing values using random forest — impute_rf","text":"object one supplied, missing values imputed.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute missing values using random forest — impute_rf","text":"","code":"data(example_set) missing <- mark_nas(example_set, 0) set.seed(38) imputed <- impute_rf(missing) #> INFO [2025-06-23 22:36:38]  #> Starting random forest imputation at 2025-06-23 22:36:38.315989 #> INFO [2025-06-23 22:36:41] Out-of-bag error in random forest imputation: 0.467 #> INFO [2025-06-23 22:36:41] Random forest imputation finished at 2025-06-23 22:36:41.965843  #>"},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple imputation — impute_simple","title":"Simple imputation — impute_simple","text":"Impute missing values using simple imputation strategy. missing values feature imputed value. possible impute features large number missing values way. can useful using function random forest imputation speed things . imputation strategies available : numeric value: impute missing values features value, e.g. 1 \"mean\": impute missing values feature mean observed values feature \"median\": impute missing values feature median observed values feature \"min\": impute missing values feature minimum observed value feature \"half_min\": impute missing values feature half minimum observed value feature \"small_random\": impute missing values feature random numbers 0 minimum feature (uniform distribution, remember set seed number!).","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple imputation — impute_simple","text":"","code":"impute_simple(object, value, na_limit = 0, assay.type = NULL, name = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple imputation — impute_simple","text":"object  SummarizedExperiment MetaboSet object value value used imputation, either numeric one '\"min\", \"half_min\", \"small_random\", see na_limit impute features proportion NAs limit. example, na_limit = 0.5, features least half values missing imputed. assay.type character, assay used case multiple assays name character, name resultant assay case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple imputation — impute_simple","text":"SummarizedExperiment Metaboset object imputed peak table.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/impute_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple imputation — impute_simple","text":"","code":"data(example_set) missing <- mark_nas(example_set, 0) imputed <- impute_simple(missing, value = \"min\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/init_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize log to a file — init_log","title":"Initialize log to a file — init_log","text":"Initialize log file current data time. major operations run logged specified file.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/init_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize log to a file — init_log","text":"","code":"init_log(log_file)"},{"path":"https://hanhineva-lab.github.io/notame/reference/init_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize log to a file — init_log","text":"log_file Path log file","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/init_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize log to a file — init_log","text":"None, function invoked side effect.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/init_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize log to a file — init_log","text":"","code":"file_name <- \"log.txt\" init_log(file_name) #> INFO [2025-06-23 22:36:42] Starting logging # Print the contents of the file scan(file_name, sep = \"\\n\", what = \"character\") #> [1] \"INFO [2025-06-23 22:36:42] Starting logging\""},{"path":"https://hanhineva-lab.github.io/notame/reference/inverse_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse-rank normalization — inverse_normalize","title":"Inverse-rank normalization — inverse_normalize","text":"Applies inverse rank normalization features approximate normal distribution.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/inverse_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse-rank normalization — inverse_normalize","text":"","code":"inverse_normalize(object, assay.type = NULL, name = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/inverse_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse-rank normalization — inverse_normalize","text":"object  SummarizedExperiment MetaboSet object assay.type character, assay used case multiple assays name character, name resultant assay case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/inverse_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse-rank normalization — inverse_normalize","text":"object one supplied, normalized features.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/inverse_normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse-rank normalization — inverse_normalize","text":"","code":"data(example_set) normalized <- inverse_normalize(example_set)"},{"path":"https://hanhineva-lab.github.io/notame/reference/join_colData.html","id":null,"dir":"Reference","previous_headings":"","what":"Join new columns to pheno data — join_colData","title":"Join new columns to pheno data — join_colData","text":"Join new data frame information pheno data SummarizedExperiment object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_colData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join new columns to pheno data — join_colData","text":"","code":"join_colData(object, dframe)  # S4 method for class 'SummarizedExperiment,data.frame' join_colData(object, dframe)"},{"path":"https://hanhineva-lab.github.io/notame/reference/join_colData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join new columns to pheno data — join_colData","text":"object  SummarizedExperiment object dframe data frame new information","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_colData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join new columns to pheno data — join_colData","text":"SummarizedExperiment object new information added colData(object).","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_colData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join new columns to pheno data — join_colData","text":"","code":"data(example_set) new_info <- data.frame(   Sample_ID = colnames(example_set),   BMI = stats::runif(ncol(example_set), 22, 26) ) with_new_info <- join_colData(example_set, new_info) colnames(colData(with_new_info)) #>  [1] \"Sample_ID\"          \"Injection_order\"    \"Subject_ID\"         #>  [4] \"Group\"              \"QC\"                 \"Time\"               #>  [7] \"Batch\"              \"HILIC_neg_Datafile\" \"HILIC_pos_Datafile\" #> [10] \"RP_neg_Datafile\"    \"RP_pos_Datafile\"    \"BMI\""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_fData.html","id":null,"dir":"Reference","previous_headings":"","what":"Join new columns to feature data — join_fData","title":"Join new columns to feature data — join_fData","text":"Join new data frame information feature data MetaboSet object. data frame needs column \"Feature_ID\". function usually used internally functions package, can useful.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_fData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join new columns to feature data — join_fData","text":"","code":"join_fData(object, dframe)"},{"path":"https://hanhineva-lab.github.io/notame/reference/join_fData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join new columns to feature data — join_fData","text":"object MetaboSet object dframe data frame new information","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_fData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join new columns to feature data — join_fData","text":"MetaboSet object new information added fData(object).","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_fData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join new columns to feature data — join_fData","text":"","code":"data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:36:42]  #> Checking feature information #> INFO [2025-06-23 22:36:42] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:42] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:42] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:42] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:42] Setting row and column names of exprs based on feature and pheno data new_info <- data.frame(   Feature_ID = featureNames(ex_set),   Feature_number = seq_len(nrow(ex_set)) ) with_new_info <- join_fData(ex_set, new_info) colnames(fData(with_new_info)) #> [1] \"Feature_ID\"     \"Split\"          \"Alignment\"      \"Average_Mz\"     #> [5] \"Average_Rt_min\" \"Column\"         \"Ion_mode\"       \"Flag\"           #> [9] \"Feature_number\""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_pData.html","id":null,"dir":"Reference","previous_headings":"","what":"Join new columns to pheno data — join_pData","title":"Join new columns to pheno data — join_pData","text":"Join new data frame information pheno data MetaboSet object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_pData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join new columns to pheno data — join_pData","text":"","code":"join_pData(object, dframe)"},{"path":"https://hanhineva-lab.github.io/notame/reference/join_pData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join new columns to pheno data — join_pData","text":"object MetaboSet object dframe data frame new information","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_pData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join new columns to pheno data — join_pData","text":"MetaboSet object new information added pData(object).","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_pData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join new columns to pheno data — join_pData","text":"","code":"data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:36:43]  #> Checking feature information #> INFO [2025-06-23 22:36:43] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:43] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:43] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:43] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:43] Setting row and column names of exprs based on feature and pheno data new_info <- data.frame(   Sample_ID = sampleNames(ex_set),   BMI = stats::runif(ncol(ex_set), 22, 26) ) with_new_info <- join_pData(ex_set, new_info) #> Joining with `by = join_by(Sample_ID)` colnames(pData(with_new_info)) #>  [1] \"Sample_ID\"          \"Injection_order\"    \"Subject_ID\"         #>  [4] \"Group\"              \"QC\"                 \"Time\"               #>  [7] \"Batch\"              \"HILIC_neg_Datafile\" \"HILIC_pos_Datafile\" #> [10] \"RP_neg_Datafile\"    \"RP_pos_Datafile\"    \"BMI\""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_rowData.html","id":null,"dir":"Reference","previous_headings":"","what":"Join new columns to feature data — join_rowData","title":"Join new columns to feature data — join_rowData","text":"Join new data frame information feature data SummarizedExperiment object. data frame needs column \"Feature_ID\". function usually used internally functions package, can useful.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_rowData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join new columns to feature data — join_rowData","text":"","code":"join_rowData(object, dframe)  # S4 method for class 'SummarizedExperiment,data.frame' join_rowData(object, dframe)"},{"path":"https://hanhineva-lab.github.io/notame/reference/join_rowData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join new columns to feature data — join_rowData","text":"object  SummarizedExperiment dframe data frame new information","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_rowData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join new columns to feature data — join_rowData","text":"SummarizedExperiment object new information added rowData(object).","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/join_rowData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join new columns to feature data — join_rowData","text":"","code":"data(example_set) new_info <- data.frame(   Feature_ID = rownames(example_set),   Feature_number = seq_len(nrow(example_set)) ) with_new_info <- join_rowData(example_set, new_info) colnames(rowData(with_new_info)) #> [1] \"Feature_ID\"     \"Split\"          \"Alignment\"      \"Average_Mz\"     #> [5] \"Average_Rt_min\" \"Column\"         \"Ion_mode\"       \"Flag\"           #> [9] \"Feature_number\""},{"path":"https://hanhineva-lab.github.io/notame/reference/log.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm — log","title":"Logarithm — log","text":"Log-transforms peak table SummarzedExperiment MetaboSet object. Shortcuts log2 log10 also implemented. information, see log.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm — log","text":"","code":"# S4 method for class 'MetaboSet' log(x, base = exp(1))  # S4 method for class 'MetaboSet' log2(x)  # S4 method for class 'MetaboSet' log10(x)  # S4 method for class 'SummarizedExperiment' log(x, base = exp(1))  # S4 method for class 'SummarizedExperiment' log2(x)  # S4 method for class 'SummarizedExperiment' log10(x)"},{"path":"https://hanhineva-lab.github.io/notame/reference/log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm — log","text":"x  SummarizedExperiment MetaboSet object base base logarithm","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm — log","text":"SummarizedExperiment MetaboSet object peak table transformed.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/log_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Log text to the current log file — log_text","title":"Log text to the current log file — log_text","text":"specified text printed written current log file. overwrite file. Also used internally many functions package.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/log_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log text to the current log file — log_text","text":"","code":"log_text(text)"},{"path":"https://hanhineva-lab.github.io/notame/reference/log_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log text to the current log file — log_text","text":"text text logged","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/log_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log text to the current log file — log_text","text":"None, function invoked side effect.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/log_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log text to the current log file — log_text","text":"","code":"file_name <- \"log.txt\" init_log(file_name) #> INFO [2025-06-23 22:36:43] Starting logging log_text(\"Hello World!\") #> INFO [2025-06-23 22:36:43] Hello World! # Print the contents of the file scan(file_name, sep = \"\\n\", what = \"character\") #> [1] \"INFO [2025-06-23 22:36:42] Starting logging\" #> [2] \"INFO [2025-06-23 22:36:43] Starting logging\" #> [3] \"INFO [2025-06-23 22:36:43] Hello World!\""},{"path":"https://hanhineva-lab.github.io/notame/reference/manhattan_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Manhattan plot — manhattan_plot","title":"Manhattan plot — manhattan_plot","text":"Draws (directed) Manhattan plot p-values versus e.g. retention time mass--charge ratio. effect size direction supplied, - log10(p-value) y-axis multiplied direction (sign) effect, part points \"drop\" p = 1 (-log10(p) = 0) line. results -called directed Manhattan plot.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/manhattan_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manhattan plot — manhattan_plot","text":"","code":"manhattan_plot(   object,   x,   p,   effect = NULL,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   x_lim = NULL,   y_lim = NULL,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Manhattan plot\",   subtitle = NULL,   ... )  # S4 method for class 'MetaboSet' manhattan_plot(   object,   x,   p,   effect = NULL,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   x_lim = NULL,   y_lim = NULL,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Manhattan plot\",   subtitle = NULL,   ... )  # S4 method for class 'data.frame' manhattan_plot(   object,   x,   p,   effect = NULL,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   x_lim = NULL,   y_lim = NULL,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Manhattan plot\",   subtitle = NULL,   ... )  # S4 method for class 'SummarizedExperiment' manhattan_plot(   object,   x,   p,   effect = NULL,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   x_lim = NULL,   y_lim = NULL,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Manhattan plot\",   subtitle = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/manhattan_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manhattan plot — manhattan_plot","text":"object  SummarizedExperiment , MetaboSet object data frame. Feature data used. x data frame, used . x, p column names x-axis p-values effect column name effect size (negative positive values). p_fdr column name FDR corrected p-values, used draw line showing fdr-corrected significance level color column name used color plots p_breaks numerical vector p_values show y-axis fdr_limit significance level used experiment x_lim, y_lim numerical vectors length 2 manually setting axis limits color_scale color scale returned ggplot function title, subtitle title subtitle plot ... parameters passed geom_point, shape alpha values. New aesthetics can also passed using mapping = aes(...).","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/manhattan_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manhattan plot — manhattan_plot","text":"ggplot object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/manhattan_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manhattan plot — manhattan_plot","text":"","code":"data(example_set) # naturally, this looks messy as there are not enough p-values lm_results <- perform_lm(drop_qcs(example_set),    formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:36:43] Starting linear regression. #> INFO [2025-06-23 22:36:44] Linear regression performed. lm_data <- dplyr::left_join(as.data.frame(rowData(example_set)), lm_results) #> Joining with `by = join_by(Feature_ID)` # Traditional Manhattan plot from data frame manhattan_plot(lm_data,   x = \"Average_Mz\",   p = \"GroupB_P\", p_fdr = \"GroupB_P_FDR\",   fdr_limit = 0.1 ) #> Warning: None of the FDR-adjusted p-values are below the significance level, not plotting the horizontal line.  # Directed Manhattan plot from SummarizedExperiment with_results <- join_rowData(example_set, lm_results) manhattan_plot(with_results,   x = \"Average_Mz\", effect = \"GroupB_Estimate\",   p = \"GroupB_P\", p_fdr = \"GroupB_P_FDR\",   fdr_limit = 0.1 ) #> Warning: None of the FDR-adjusted p-values are below the significance level, not plotting the horizontal line."},{"path":"https://hanhineva-lab.github.io/notame/reference/mark_nas.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark specified values as missing — mark_nas","title":"Mark specified values as missing — mark_nas","text":"Replaces values peak table equal specified value NA. example, vendor software might use 0 1 signal missing value, understood R.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/mark_nas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark specified values as missing — mark_nas","text":"","code":"mark_nas(object, value, assay.type = NULL, name = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/mark_nas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark specified values as missing — mark_nas","text":"object  SummarizedExperiment MetaboSet object value value converted NA assay.type character, assay used case multiple assays name character, name resultant assay case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/mark_nas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark specified values as missing — mark_nas","text":"SummarizedExperiment MetaboSet object one supplied, missing values correctly set NA.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/mark_nas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark specified values as missing — mark_nas","text":"","code":"data(example_set) nas_marked <- mark_nas(example_set, value = 0)"},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_metabosets.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge MetaboSet objects together — merge_metabosets","title":"Merge MetaboSet objects together — merge_metabosets","text":"Merges two MetaboSet objects together. Can used merge analytical modes batches.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_metabosets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge MetaboSet objects together — merge_metabosets","text":"","code":"merge_metabosets(..., merge = c(\"features\", \"samples\"))"},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_metabosets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge MetaboSet objects together — merge_metabosets","text":"... MetaboSet objects list MetaboSet objects merge merge? features used combining analytical modes, samples used batches","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_metabosets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge MetaboSet objects together — merge_metabosets","text":"merged MetaboSet object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_metabosets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge MetaboSet objects together — merge_metabosets","text":"merging samples, sample IDs beging \"QC\" \"Ref\" combined running numbers . means batches samples called \"QC_1\", result error, sample IDs adjusted unique.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_metabosets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge MetaboSet objects together — merge_metabosets","text":"","code":"# Merge analytical modes data(hilic_neg_sample, hilic_pos_sample, rp_neg_sample, rp_pos_sample) modes <- list(hilic_neg_sample, hilic_pos_sample,                rp_neg_sample, rp_pos_sample) modes <- lapply(modes, function(mode) as(mode, \"MetaboSet\")) #> INFO [2025-06-23 22:36:45]  #> Checking feature information #> INFO [2025-06-23 22:36:45] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:45] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:45] Setting row and column names of exprs based on feature and pheno data #> INFO [2025-06-23 22:36:45]  #> Checking feature information #> INFO [2025-06-23 22:36:45] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:45] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:45] Setting row and column names of exprs based on feature and pheno data #> INFO [2025-06-23 22:36:45]  #> Checking feature information #> INFO [2025-06-23 22:36:45] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:45] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:45] Setting row and column names of exprs based on feature and pheno data #> INFO [2025-06-23 22:36:45]  #> Checking feature information #> INFO [2025-06-23 22:36:45] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:36:45] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:36:45] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:36:45] Setting row and column names of exprs based on feature and pheno data merged <- merge_metabosets(modes)  # Merge batches data(example_set) batch1 <- example_set[, example_set$Batch == 1] batch2 <- example_set[, example_set$Batch == 2] merged <- merge_metabosets(batch1, batch2, merge = \"samples\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge SummarizedExperiment objects together — merge_objects","title":"Merge SummarizedExperiment objects together — merge_objects","text":"Merges two SummarizedExperiment objects together. Can used merge analytical modes batches.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge SummarizedExperiment objects together — merge_objects","text":"","code":"merge_objects(..., merge = c(\"features\", \"samples\"), assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge SummarizedExperiment objects together — merge_objects","text":"... SummarizedExperiment objects list objects merge merge? features used combining analytical modes, samples used batches assay.type character, assay used case multiple assays. assay needs present objects merged, resultant object contains single assay.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge SummarizedExperiment objects together — merge_objects","text":"merged SummarizedExperiment object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_objects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge SummarizedExperiment objects together — merge_objects","text":"merging samples, sample IDs begin \"QC\" \"Ref\" combined running numbers . means batches samples called \"QC_1\", result error, sample IDs adjusted unique.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/merge_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge SummarizedExperiment objects together — merge_objects","text":"","code":"# Merge analytical modes data(hilic_neg_sample, hilic_pos_sample, rp_neg_sample, rp_pos_sample) merged <- merge_objects(   hilic_neg_sample, hilic_pos_sample,   rp_neg_sample, rp_pos_sample ) # Merge batches batch1 <- example_set[, example_set$Batch == 1] batch2 <- example_set[, example_set$Batch == 2] merged <- merge_objects(batch1, batch2, merge = \"samples\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/muvr_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate modelling with minimally biased variable selection (MUVR) — muvr_analysis","title":"Multivariate modelling with minimally biased variable selection (MUVR) — muvr_analysis","text":"wrapper around MUVR2 (random forest, PLS(-DA)) MUVR2_EN (elastic net) functions MUVR2 package.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/muvr_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate modelling with minimally biased variable selection (MUVR) — muvr_analysis","text":"","code":"muvr_analysis(   object,   y = NULL,   id = NULL,   multi_level = FALSE,   multi_level_var = NULL,   covariates = NULL,   static_covariates = NULL,   all_features = FALSE,   nRep = 50,   nOuter = 6,   nInner = nOuter - 1,   varRatio = 0.75,   method = c(\"PLS\", \"RF\"),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/muvr_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate modelling with minimally biased variable selection (MUVR) — muvr_analysis","text":"object  SummarizedExperiment MetaboSet object y character, column name pheno data target variable id character, column name pheno data subject ID variable case repeated measurements multi_level logical, whether multi-level modeling applied, see Details multi_level_var character, column name pheno data variable splitting data multi-level modeling covariates, static_covariates character, column names pheno data use covariates model, addition molecular features. static_covariates ignored non-multi-level models. multi-level models, change covariates computed, static_covariates taken first time point. all_features logical, features included model? FALSE, flagged features left nRep Number repetitions double CV, parameter MUVR nOuter Number outer CV loop segments, parameter MUVR nInner Number inner CV loop segments, parameter MUVR varRatio Ratio variables include subsequent inner loop iteration, parameter MUVR method Multivariate method. Supports 'PLS', 'RF' 'EN' assay.type character, assay used case multiple assays ... parameters MUVR2 MUVR2_EN getVar (method == \"EN\")","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/muvr_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate modelling with minimally biased variable selection (MUVR) — muvr_analysis","text":"MUVR object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/muvr_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate modelling with minimally biased variable selection (MUVR) — muvr_analysis","text":"function now using MUVR2 package, characterized upgrade extending original MUVR package inclusion elastic net regression (EN) functionality covered wrapper. Elastic net regression supports covariate adjustment suppressing regularization specified features regularization procedure. Note different simply including covariates sex. EN also differs PLS RF recursive variable elimination performed, additional scheme used obtain 'min', 'mid' 'max' models using getVar. Sex entered static covariate, since change sex zero individuals, computing change using covariate make sense. Note several plots available MUVR2 inspecting results, notably plotMV, plotStability plotVIRank Many return different plots depending model specification.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/muvr_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate modelling with minimally biased variable selection (MUVR) — muvr_analysis","text":"","code":"data(example_set) ex_set <- drop_qcs(example_set)[1:10, ] ex_set$Injection_order %<>% as.numeric() # Simple PLS regression model pls_model <- muvr_analysis(ex_set,    y = \"Injection_order\", nRep = 2, method = \"PLS\") #> all 10 variables are numeric.    #> There are originally 10 variables #> They are transformed into 10 variables by onehotencoding #> X is transformed to a matrix by onehotencoding. #> Warning:  #> Missing ID -> Assume all unique (i.e. sample independence) #>  #> Missing fitness -> RMSEP #> Warning: executing %dopar% sequentially: no parallel backend registered #> Type 'citation(\"pROC\")' for a citation. #>  #> Attaching package: ‘pROC’ #> The following objects are masked from ‘package:IRanges’: #>  #>     cov, var #> The following objects are masked from ‘package:S4Vectors’: #>  #>     cov, var #> The following object is masked from ‘package:BiocGenerics’: #>  #>     var #> The following objects are masked from ‘package:stats’: #>  #>     cov, smooth, var #>  #>    Repetition 1 of 2: #>  #>  Segment 1 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 2 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 3 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 4 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 5 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 6 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>    Repetition 2 of 2: #>  #>  Segment 1 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 2 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 3 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 4 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 5 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 6 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Elapsed time 0.0406833333333334 mins    # RF classification with covariate and repeated measures (not longitudinal) rf_model <- muvr_analysis(ex_set, y = \"Group\", id = \"Subject_ID\",    nRep = 2, method = \"RF\", covariates = \"Injection_order\") #>  #> Y is factor -> Classification (2 classes) #>  #> Missing fitness -> BER #> randomForest 4.7-1.2 #> Type rfNews() to see new features/changes/bug fixes. #>  #> Attaching package: ‘randomForest’ #> The following object is masked from ‘package:ggplot2’: #>  #>     margin #> The following object is masked from ‘package:Biobase’: #>  #>     combine #> The following object is masked from ‘package:BiocGenerics’: #>  #>     combine #>  #>    Repetition 1 of 2: #>  #>  Segment 1 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 2 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 3 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 4 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 5 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 6 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>    Repetition 2 of 2: #>  #>  Segment 1 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 2 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 3 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 4 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 5 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 6 (variables): #> 11 #> . #> . #> . #> . #> . #> 8 #> . #> . #> . #> . #> . #> 6 #> . #> . #> . #> . #> . #> 4 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Elapsed time 0.03065 mins    # RF classification on multilevel variable comparing levels of y rf_model_ <- muvr_analysis(ex_set,    y = \"Group\", multi_level = TRUE, id = \"Subject_ID\",    multi_level_var = \"Time\", method = \"RF\", nRep = 2) #> Computing effect matrix according to Time : 2 - 1 #> Warning:  #> Missing ID -> Assume all unique (i.e. sample independence) #>  #> Y is factor -> Classification (2 classes) #>  #> Missing fitness -> BER #>  #>    Repetition 1 of 2: #>  #>  Segment 1 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 2 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 3 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 4 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 5 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 6 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>    Repetition 2 of 2: #>  #>  Segment 1 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 2 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 3 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 4 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 5 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Segment 6 (variables): #> 10 #> . #> . #> . #> . #> . #> 7 #> . #> . #> . #> . #> . #> 5 #> . #> . #> . #> . #> . #> 3 #> . #> . #> . #> . #> . #> 2 #> . #> . #> . #> . #> . #>  #>  Elapsed time 0.0216166666666667 mins    # EN regression on multilevel variable with covariate and static covariate ex_set$Group %<>% as.numeric() en_model <- muvr_analysis(ex_set, id = \"Subject_ID\",   multi_level = TRUE, multi_level_var = \"Time\",   covariates = \"Injection_order\", static_covariates = \"Group\",   method = \"EN\", nRep = 2) #> Computing effect matrix according to Time : 2 - 1 #> all 12 variables are numeric.    #> There are originally 12 variables #> They are transformed into 12 variables by onehotencoding #> X is transformed to a matrix by onehotencoding. #>  #> 1variables with near zero variance detected -> removed from X and stored under $nzv #>  #> Missing ID -> Assume all unique (i.e. sample independence) #>  #> Multilevel -> Regression on (-1,1) & fitness=MISS #> Loading required package: Matrix #>  #> Attaching package: ‘Matrix’ #> The following object is masked from ‘package:S4Vectors’: #>  #>     expand #> Loaded glmnet 4.1-9 #>  #>    Repetition 1 of 2: #>  #>  Segment 1 (Inner repeat):  #> 1...  #>  #>  Segment 2 (Inner repeat):  #> 1...  #>  #>  Segment 3 (Inner repeat):  #> 1...  #>  #>  Segment 4 (Inner repeat):  #> 1...  #>  #>  Segment 5 (Inner repeat):  #> 1...  #>  #>  Segment 6 (Inner repeat):  #> 1...  #>  #>    Repetition 2 of 2: #>  #>  Segment 1 (Inner repeat):  #> 1...  #>  #>  Segment 2 (Inner repeat):  #> 1...  #>  #>  Segment 3 (Inner repeat):  #> 1...  #>  #>  Segment 4 (Inner repeat):  #> 1...  #>  #>  Segment 5 (Inner repeat):  #> 1...  #>  #>  Segment 6 (Inner repeat):  #> 1...  #>  #>  Elapsed time 0.0613000000000001 mins"},{"path":"https://hanhineva-lab.github.io/notame/reference/mz_rt_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot m/z vs retention time plot (cloud plot) — mz_rt_plot","title":"Plot m/z vs retention time plot (cloud plot) — mz_rt_plot","text":"Plots scatter plot results statistical tests, point represents feature. plot retention time x-axis, m/z y-axis size points scaled based p-value","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/mz_rt_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot m/z vs retention time plot (cloud plot) — mz_rt_plot","text":"","code":"mz_rt_plot(   object,   p_col = NULL,   p_limit = NULL,   mz_col = NULL,   rt_col = NULL,   color = NULL,   title = \"m/z retention time\",   subtitle = NULL,   color_scale = getOption(\"notame.color_scale_con\"),   ... )  # S4 method for class 'MetaboSet' mz_rt_plot(   object,   p_col = NULL,   p_limit = NULL,   mz_col = NULL,   rt_col = NULL,   color = NULL,   title = \"m/z vs retention time\",   subtitle = NULL,   color_scale = getOption(\"notame.color_scale_con\"),   all_features = FALSE )  # S4 method for class 'data.frame' mz_rt_plot(   object,   p_col = NULL,   p_limit = NULL,   mz_col = NULL,   rt_col = NULL,   color = NULL,   title = \"m/z vs retention time\",   subtitle = NULL,   color_scale = getOption(\"notame.color_scale_con\") )  # S4 method for class 'SummarizedExperiment' mz_rt_plot(   object,   p_col = NULL,   p_limit = NULL,   mz_col = NULL,   rt_col = NULL,   color = NULL,   title = \"m/z vs retention time\",   subtitle = NULL,   color_scale = getOption(\"notame.color_scale_con\"),   all_features = FALSE )"},{"path":"https://hanhineva-lab.github.io/notame/reference/mz_rt_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot m/z vs retention time plot (cloud plot) — mz_rt_plot","text":"object  SummarizedExperiment , MetaboSet object data frame. Feature data used. x data frame, used . p_col column name containing p-values. used scale size points. p_limit numeric, limits plotted features p-values. NULL, plots features. mz_col, rt_col column names m/z retention time. NULL, automatic detection attempted. color column name used color points title plot title subtitle plot subtitle color_scale color scale returned ggplot function. Defaults current continuous color scale. ... parameters passed geom_point, shape alpha values. New aesthetics can also passed using mapping = aes(...). all_features logical, features retained? used x SummarizedExperiment object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/mz_rt_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot m/z vs retention time plot (cloud plot) — mz_rt_plot","text":"ggplot object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/mz_rt_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot m/z vs retention time plot (cloud plot) — mz_rt_plot","text":"","code":"data(example_set) # Compute results from a linear model lm_results <- perform_lm(example_set, formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:36:59] Starting linear regression. #> INFO [2025-06-23 22:37:00] Linear regression performed. with_results <- join_rowData(example_set, lm_results)  # Plot from the SummarizedExperiment object # automatically facet by analytical mode in variable Split mz_rt_plot(with_results, p_col = \"GroupB_P\", color = \"GroupB_Estimate\") #> INFO [2025-06-23 22:37:00] Identified m/z column Average_Mz and retention time column Average_Rt_min #> Multiple splits detected, plotting them to separate panes.   # Plot the results from the results dataframe lm_data <- dplyr::left_join(as.data.frame(rowData(example_set)), lm_results) #> Joining with `by = join_by(Feature_ID)` mz_rt_plot(lm_data, p_col = \"GroupB_P\", color = \"GroupB_Estimate\") #> INFO [2025-06-23 22:37:00] Identified m/z column Average_Mz and retention time column Average_Rt_min #> Multiple splits detected, plotting them to separate panes."},{"path":"https://hanhineva-lab.github.io/notame/reference/notame-package.html","id":null,"dir":"Reference","previous_headings":"","what":"notame package. — notame-package","title":"notame package. — notame-package","text":"Provides functionality untargeted LC-MS metabolomics research specified associated publication 'Metabolomics Data Processing Data Analysis—Current Best Practices' special issue Metabolites journal (2020). includes tabular data preprocessing, feature selection supporting visualizations. Raw data preprocessing functionality related biological context, pathway analysis, included.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/notame-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"notame package. — notame-package","text":"roughly chronological order, functionality notame follows. Please see vignettes paper information. Tabular data preprocessing (reducing unwanted variation completing dataset, returning modifed objects): mark_nas mark specified values missing flag_detection flag features low detection rate flag_contaminants flag contaminants based blanks correct_drift correct drift using cubic spline ruvs_qc Remove Unwanted Variation (RUV) batches pca_bhattacharyya_dist Bhattacharyya distance batches PCA space perform_repeatability compute repeatability measures assess_quality assess quality information features quality extract quality information features flag_quality flag low-quality features flag_report report flagged features impute_rf impute missing values using random forest impute_simple impute missing values using simple imputation cluster_features cluster correlated features originating metabolite compress_clusters Compress clusters features single feature log logarithms exponential exponential pqn_normalization probabilistic quotient normalization inverse_normalize inverse-rank normalization scale scale Tabular data preprocessing visualizations (saved file default): visualizations write relevant data preprocessing visualizations pdf plot_injection_lm estimate magnitude drift plot_sample_boxplots plot boxplot sample plot_dist_density plot distance density plot_tsne, plot_pca t-SNE PCA plot plot_tsne_arrows, plot_pca_arrows t-SNE PCA plots arrows plot_tsne_hexbin, plot_pca_hexbin t-SNE PCA hexbin plots plot_dendrogram sample dendrogram plot_sample_heatmap sample heatmap plot_pca_loadings PCA loadings plot plot_quality plot quality metrics Feature selection – Univariate analysis (return data.frames): perform_lm linear models perform_logistic logistic regression perform_lmer linear mixed models perform_oneway_anova Welch’s ANOVA classic ANOVA perform_lm_anova linear models ANOVA table perform_t_test pairwise paired t-tests perform_kruskal_wallis Kruskal-Wallis rank-sum test perform_non_parametric pairwise paired non- parametric tests perform_correlation_tests correlation test perform_auc area curve perform_homoscedasticity_tests test homoscedasticity cohens_d Cohen's D fold_change fold change summary_statistics summary statistics summarize_results statistics cleaning Feature selection – Supervised learning (return various objects): muvr_analysis multivariate modelling minimally biased variable selection (MUVR2) mixomics_pls, mixomics_plsda simple PLS(-DA) model set number components features mixomics_pls_optimize, mixomics_plsda_optimize test different numbers components PLS(-DA) mixomics_spls_optimize, mixomics_splsda_optimize test different numbers components features PLS(-DA) fit_rf, importance_rf fit random forest feature importance perform_permanova PERMANOVA Feature-wise visualizations (often drawn subset interesting features analysis, saved default): save_beeswarm_plots save beeswarm plots feature group save_group_boxplots save box plots feature group save_scatter_plots save scatter plots feature set variable save_subject_line_plots save line plots mean save_group_lineplots save line plots errorbars group save_batch_plots save batch correction plots Results visualizations (returned default, save using save_plot): plot_p_histogram histogram p-values volcano_plot volcano plot manhattan_plot manhattan plot mz_rt_plot m/z vs retention time plot (cloud plot) plot_effect_heatmap heatmap effects variables, correlations Object utilities: read_from_excel read formatted Excel files construct_metabosets construct MetaboSet objects write_to_excel write results Excel file group_col get set name special column group labels time_col get set name special column time points subject_col get set name special column subject identifiers flag get set values flag column drop_flagged drop flagged features drop_qcs drop QC samples join_fData join new columns feature data join_pData join new columns pheno data combined_data retrieve sample information features merge_metabosets merge MetaboSet objects together merge_objects merge SummarizedExperiment objects together fix_object fix object functioning notame MetaboSet-class MetaboSet utilities: citations show citations init_log initialize log file log_text log text current log file finish_log finish log save_plot save plot chosen format fix_MSMS transform MS/MS output publication ready","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/notame-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"notame package. — notame-package","text":"Klåvus et al. (2020). \"notame\": Workflow Non-Targeted LC-MS Metabolic Profiling. Metabolites, 10: 135.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/notame-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"notame package. — notame-package","text":"Maintainer: Vilhelm Suksi vksuks@utu.fi (ORCID) Authors: Anton Klåvus (ORCID) [copyright holder] Jussi Paananen (ORCID) [copyright holder] Oskari Timonen (ORCID) [copyright holder] Atte Lihtamo Retu Haikonen (ORCID) Leo Lahti (ORCID) Kati Hanhineva (ORCID) contributors: Ville Koistinen (ORCID) [contributor] Olli Kärkkäinen (ORCID) [contributor] Artur Sannikov [contributor]","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pca_bhattacharyya_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Bhattacharyya distance between batches in PCA space — pca_bhattacharyya_dist","title":"Bhattacharyya distance between batches in PCA space — pca_bhattacharyya_dist","text":"Computes Bhattacharyya distance pairs batches using fpc:bhattacharyya.matrix projecting samples PCA space pca.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pca_bhattacharyya_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bhattacharyya distance between batches in PCA space — pca_bhattacharyya_dist","text":"","code":"pca_bhattacharyya_dist(   object,   batch,   all_features = FALSE,   center = TRUE,   scale = \"uv\",   nPcs = 3,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/pca_bhattacharyya_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bhattacharyya distance between batches in PCA space — pca_bhattacharyya_dist","text":"object  SummarizedExperiment MetaboSet object batch column name pheno data giving batch labels all_features logical, features used? FALSE (default), flagged features removed imputation. center logical, data centered prior PCA? (usually yes) scale scaling used, prep. Default \"uv\" unit variance nPcs number principal components use assay.type character, assay used case multiple assays ... parameters pca","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pca_bhattacharyya_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bhattacharyya distance between batches in PCA space — pca_bhattacharyya_dist","text":"matrix Bhattacharyya distances batches.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pca_bhattacharyya_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bhattacharyya distance between batches in PCA space — pca_bhattacharyya_dist","text":"","code":"data(example_set) # Batch correction replicates <- list(which(example_set$QC == \"QC\")) batch_corrected <- ruvs_qc(example_set, replicates = replicates) # Evaluate batch correction pca_bhattacharyya_dist(example_set, batch = \"Batch\") #>          [,1]     [,2] #> [1,]       NA 11.28682 #> [2,] 11.28682       NA pca_bhattacharyya_dist(batch_corrected, batch = \"Batch\") #> Warning: Variance is below eps for 1 variables. Not scaling them. #>          [,1]     [,2] #> [1,]       NA 1.516404 #> [2,] 1.516404       NA"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Area under curve — perform_auc","title":"Area under curve — perform_auc","text":"Compute area curve (AUC) subject feature. Creates pseudo SummarizedExperiment MetaboSet object, \"samples\" subjects (subject/group combinations case subjects submitted different treatments) \"abundances\" AUCs. object can  used compute results e.g. t-tests AUCs groups.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area under curve — perform_auc","text":"","code":"perform_auc(object, time, subject, group, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area under curve — perform_auc","text":"object  SummarizedExperiment MetaboSet object time, subject, group column names pheno data holding time, subject group labels assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area under curve — perform_auc","text":"pseudo SummarizedExperiment MetaboSet object AUCs.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area under curve — perform_auc","text":"","code":"data(example_set) # Drop QC samples before computing AUCs aucs <- perform_auc(drop_qcs(example_set), time = \"Time\",                      subject = \"Subject_ID\", group = \"Group\") #> INFO [2025-06-23 22:37:08] Starting AUC computation #> INFO [2025-06-23 22:37:12] AUC computation finished # t-test with the AUCs t_test_results <- perform_t_test(aucs, formula_char = \"Feature ~ Group\") #> The functionality of this function has changed. It now encompasses pairwise and paired t-tests. #> Remember that t.test returns difference between group means in different order than lm. #> This function mimics this behavior, so the effect size is mean of first level minus mean of second level. #> INFO [2025-06-23 22:37:12] Starting tests for A & B #> INFO [2025-06-23 22:37:12] Tests performed"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_correlation_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation test — perform_correlation_tests","title":"Correlation test — perform_correlation_tests","text":"Performs correlation test two sets variables. variables must either feature names column names pheno data (sample information). two ways use function: either provide set variables x, correlations variables computed. provide two distinct sets variables x, y correlations x variable y variable computed.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_correlation_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation test — perform_correlation_tests","text":"","code":"perform_correlation_tests(   object,   x,   y = x,   id = NULL,   object2 = NULL,   fdr = TRUE,   all_pairs = TRUE,   duplicates = FALSE,   assay.type1 = NULL,   assay.type2 = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_correlation_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation test — perform_correlation_tests","text":"object  SummarizedExperiment MetaboSet object x character vector, names variables correlated y character vector, either identical x (default) distinct set variables correlated x id character, column name subject IDs. provided, correlation computed using rmcorr package object2 optional second object. provided, x variables taken object y variables taken object2. objects number samples. fdr logical, whether p-values correlation test adjusted FDR correction all_pairs logical, whether pairs x y tested. FALSE, x y give exact pairs variables test, length. duplicates logical, whether correlations duplicated. TRUE, correlation included results twice, order variables '(x y) changed. Can useful e.g. plotting heatmap results, see examples plot_effect_heatmap assay.type1 character, assay object(1) used case multiple assays assay.type2 character, assay object2 used case multiple assays ... parameters passed cor.test, method","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_correlation_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation test — perform_correlation_tests","text":"data frame results correlation tests: pair variables, correlation coefficient p-value.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_correlation_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation test — perform_correlation_tests","text":"","code":"data(example_set) # Correlations between all features correlations <- perform_correlation_tests(example_set,    x = rownames(example_set), id = \"Subject_ID\") #> INFO [2025-06-23 22:37:12] Starting correlation tests. #> INFO [2025-06-23 22:37:12] Performing correlation tests for single object #> INFO [2025-06-23 22:37:20] Correlation tests performed.  # Spearman Correlations between features and sample information variables # Drop QCs and convert time to numeric no_qc <- drop_qcs(example_set) no_qc$Time <- as.numeric(no_qc$Time) correlations <- perform_correlation_tests(no_qc,   x = rownames(example_set),   y = c(\"Time\", \"Injection_order\"), method = \"spearman\" ) #> INFO [2025-06-23 22:37:20] Starting correlation tests. #> INFO [2025-06-23 22:37:20] Performing correlation tests for single object #> INFO [2025-06-23 22:37:20] Correlation tests performed.  # Correlations between variables from two distinct objects cross_object_cor <- perform_correlation_tests(hilic_neg_sample,   x = rownames(hilic_neg_sample),   object2 = hilic_pos_sample,   y = rownames(hilic_pos_sample),   all_pairs = FALSE ) #> INFO [2025-06-23 22:37:20] Starting correlation tests. #> INFO [2025-06-23 22:37:20] Performing correlation tests for two objects #> INFO [2025-06-23 22:37:20] Correlation tests performed."},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_homoscedasticity_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Test homoscedasticity — perform_homoscedasticity_tests","title":"Test homoscedasticity — perform_homoscedasticity_tests","text":"Performs Bartlett's, Levene's Fligner-Killeen tests equality variances.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_homoscedasticity_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test homoscedasticity — perform_homoscedasticity_tests","text":"","code":"perform_homoscedasticity_tests(   object,   formula_char,   all_features = FALSE,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_homoscedasticity_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test homoscedasticity — perform_homoscedasticity_tests","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details) all_features features included FDR correction? assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_homoscedasticity_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test homoscedasticity — perform_homoscedasticity_tests","text":"data frame results.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_homoscedasticity_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test homoscedasticity — perform_homoscedasticity_tests","text":"model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual Feature IDs model fitting. example, testing equality variances study groups, use \"Feature ~ Group\".","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_homoscedasticity_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test homoscedasticity — perform_homoscedasticity_tests","text":"","code":"data(example_set) perform_homoscedasticity_tests(example_set, formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:37:21] Starting homoscedasticity tests. #> INFO [2025-06-23 22:37:21] Homoscedasticity tests performed. #>                                          Feature_ID   Bartlett_P Bartlett_P_FDR #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4_4322 8.239674e-03   0.0662339820 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2_6121 5.017484e-01   0.8375866593 #> HILIC_neg_158_23a1_4128     HILIC_neg_158_23a1_4128 4.961588e-01   0.8375866593 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0_6161 8.621024e-01   0.9993139950 #> HILIC_neg_401_52a4_211       HILIC_neg_401_52a4_211 2.090082e-02   0.1520059365 #> HILIC_neg_400_7045a5_3842 HILIC_neg_400_7045a5_3842 1.781934e-01   0.4802404366 #> HILIC_neg_304_014a7_1311   HILIC_neg_304_014a7_1311 7.874479e-01   0.9993139950 #> HILIC_neg_276_6328a2_7734 HILIC_neg_276_6328a2_7734 5.525536e-01   0.8582029220 #> HILIC_neg_118_9111a4_1865 HILIC_neg_118_9111a4_1865 2.250420e-03   0.0257190816 #> HILIC_neg_446_9413a2_315   HILIC_neg_446_9413a2_315 4.576351e-01   0.8320638095 #> HILIC_neg_127_5856a4_3758 HILIC_neg_127_5856a4_3758 3.893095e-02   0.1946547349 #> HILIC_neg_303_2144a1_2372 HILIC_neg_303_2144a1_2372 2.256470e-01   0.5169836237 #> HILIC_neg_366_6203a6_1825 HILIC_neg_366_6203a6_1825 2.261803e-01   0.5169836237 #> HILIC_neg_258_7252a7_5445 HILIC_neg_258_7252a7_5445 7.790240e-02   0.2709648619 #> HILIC_neg_301_2643a4_0372 HILIC_neg_301_2643a4_0372 4.245270e-02   0.1997773998 #> HILIC_neg_224_4031a4_7409 HILIC_neg_224_4031a4_7409 4.467058e-04   0.0119121545 #> HILIC_neg_424_8488a6_7736 HILIC_neg_424_8488a6_7736 1.711205e-01   0.4802404366 #> HILIC_neg_131_2034a6_1385 HILIC_neg_131_2034a6_1385 9.094558e-01   0.9993139950 #> HILIC_neg_236_4114a5_6302 HILIC_neg_236_4114a5_6302 6.663041e-01   0.9536276417 #> HILIC_neg_411_0148a0_7484 HILIC_neg_411_0148a0_7484 4.526072e-01   0.8320638095 #> HILIC_pos_288_6263a6_572   HILIC_pos_288_6263a6_572 9.754482e-01   0.9993139950 #> HILIC_pos_331_1173a7_7822 HILIC_pos_331_1173a7_7822 5.691902e-01   0.8591550605 #> HILIC_pos_139_4044a6_0388 HILIC_pos_139_4044a6_0388 1.695926e-01   0.4802404366 #> HILIC_pos_132_7373a6_4146 HILIC_pos_132_7373a6_4146 3.327233e-01   0.7133179762 #> HILIC_pos_298_6144a3_839   HILIC_pos_298_6144a3_839 8.685692e-01   0.9993139950 #> HILIC_pos_410_9203a2_7329 HILIC_pos_410_9203a2_7329 5.170495e-03   0.0517049477 #> HILIC_pos_145_8514a2_811   HILIC_pos_145_8514a2_811 3.612720e-02   0.1946547349 #> HILIC_pos_306_0061a4_4049 HILIC_pos_306_0061a4_4049 7.686014e-02   0.2709648619 #> HILIC_pos_425_8858a4_4494 HILIC_pos_425_8858a4_4494 9.141574e-01   0.9993139950 #> HILIC_pos_436_332a6_1165   HILIC_pos_436_332a6_1165 9.993140e-01   0.9993139950 #> HILIC_pos_255_0094a7_9288 HILIC_pos_255_0094a7_9288 5.578319e-01   0.8582029220 #> HILIC_pos_417_1474a2_8239 HILIC_pos_417_1474a2_8239 9.841691e-01   0.9993139950 #> HILIC_pos_297_8334a0_6647 HILIC_pos_297_8334a0_6647 6.675393e-01   0.9536276417 #> HILIC_pos_449_2162a0_7574 HILIC_pos_449_2162a0_7574 2.466490e-06   0.0001973192 #> HILIC_pos_197_7438a7_72     HILIC_pos_197_7438a7_72 2.852761e-01   0.6339467899 #> HILIC_pos_141_601a7_387     HILIC_pos_141_601a7_387 9.888917e-01   0.9993139950 #> HILIC_pos_448_1172a6_8567 HILIC_pos_448_1172a6_8567 9.825974e-01   0.9993139950 #> HILIC_pos_346_6405a3_2719 HILIC_pos_346_6405a3_2719 6.986569e-02   0.2709648619 #> HILIC_pos_334_3285a1_7395 HILIC_pos_334_3285a1_7395 4.983938e-01   0.8375866593 #> HILIC_pos_215_5364a2_6707 HILIC_pos_215_5364a2_6707 1.724331e-01   0.4802404366 #> RP_neg_458_0877a1_5798       RP_neg_458_0877a1_5798 3.691919e-02   0.1946547349 #> RP_neg_365_8511a5_6086       RP_neg_365_8511a5_6086 2.209932e-03   0.0257190816 #> RP_neg_369_5116a6_4389       RP_neg_369_5116a6_4389 1.376476e-01   0.4404724682 #> RP_neg_222_4828a6_0392       RP_neg_222_4828a6_0392 8.633717e-01   0.9993139950 #> RP_neg_114_84a3_0917           RP_neg_114_84a3_0917 8.279248e-03   0.0662339820 #> RP_neg_317_554a3_063           RP_neg_317_554a3_063 7.686581e-01   0.9993139950 #> RP_neg_419_897a3_9617         RP_neg_419_897a3_9617 5.025520e-01   0.8375866593 #> RP_neg_493_3039a6_7816       RP_neg_493_3039a6_7816 7.353651e-02   0.2709648619 #> RP_neg_359_0517a7_3652       RP_neg_359_0517a7_3652 7.408720e-01   0.9993139950 #> RP_neg_435_8009a6_2215       RP_neg_435_8009a6_2215 3.764570e-01   0.7394215442 #> RP_neg_358_2061a5_2818       RP_neg_358_2061a5_2818 9.489779e-01   0.9993139950 #> RP_neg_397_2502a3_7998       RP_neg_397_2502a3_7998 2.081508e-01   0.5046080268 #> RP_neg_165_9294a3_4261       RP_neg_165_9294a3_4261 1.868145e-03   0.0257190816 #> RP_neg_413_1764a3_6741       RP_neg_413_1764a3_6741 9.072634e-01   0.9993139950 #> RP_neg_115_4062a7_7329       RP_neg_115_4062a7_7329 7.700736e-01   0.9993139950 #> RP_neg_300_1295a1_6959       RP_neg_300_1295a1_6959 6.382540e-01   0.9455614950 #> RP_neg_177_6084a5_2913       RP_neg_177_6084a5_2913 9.861303e-01   0.9993139950 #> RP_neg_134_1196a2_9606       RP_neg_134_1196a2_9606 7.420896e-01   0.9993139950 #> RP_neg_139_4456a4_1251       RP_neg_139_4456a4_1251 2.013042e-01   0.5032603777 #> RP_neg_385_6867a4_136         RP_neg_385_6867a4_136 4.481696e-01   0.8320638095 #> RP_pos_490_9235a4_0176       RP_pos_490_9235a4_0176 9.143520e-01   0.9993139950 #> RP_pos_383_4976a2_6503       RP_pos_383_4976a2_6503 2.951801e-02   0.1816493160 #> RP_pos_344_9911a1_9656       RP_pos_344_9911a1_9656 5.571486e-01   0.8582029220 #> RP_pos_117_7095a4_0945       RP_pos_117_7095a4_0945 8.638983e-01   0.9993139950 #> RP_pos_294_9596a6_7569       RP_pos_294_9596a6_7569 5.178686e-01   0.8454997549 #> RP_pos_460_4815a0_8843       RP_pos_460_4815a0_8843 8.022830e-01   0.9993139950 #> RP_pos_272_3545a3_5592       RP_pos_272_3545a3_5592 6.643056e-02   0.2709648619 #> RP_pos_409_2445a2_4149       RP_pos_409_2445a2_4149 6.753504e-02   0.2709648619 #> RP_pos_245_9925a3_6251       RP_pos_245_9925a3_6251 3.394498e-01   0.7133179762 #> RP_pos_369_1069a1_6271       RP_pos_369_1069a1_6271 9.028045e-01   0.9993139950 #> RP_pos_174_0715a4_3465       RP_pos_174_0715a4_3465 6.210426e-04   0.0124208514 #> RP_pos_324_6195a4_7743       RP_pos_324_6195a4_7743 1.932921e-01   0.4988183119 #> RP_pos_149_432a4_1341         RP_pos_149_432a4_1341 1.800902e-01   0.4802404366 #> RP_pos_461_5891a7_1505       RP_pos_461_5891a7_1505 2.465437e-02   0.1643624518 #> RP_pos_458_263a4_3477         RP_pos_458_263a4_3477 3.789535e-01   0.7394215442 #> RP_pos_226_7218a3_1371       RP_pos_226_7218a3_1371 9.834699e-01   0.9993139950 #> RP_pos_280_3779a4_0424       RP_pos_280_3779a4_0424 4.307065e-04   0.0119121545 #> RP_pos_447_3232a2_2393       RP_pos_447_3232a2_2393 8.207835e-01   0.9993139950 #> RP_pos_453_282a5_128           RP_pos_453_282a5_128 1.132768e-01   0.3775893737 #> RP_pos_153_9636a7_9986       RP_pos_153_9636a7_9986 3.477425e-01   0.7133179762 #>                               Levene_P Levene_P_FDR   Fligner_P Fligner_P_FDR #> HILIC_neg_259_9623a4_4322 1.671860e-01  0.671705185 0.088359357     0.6187064 #> HILIC_neg_108_1065a2_6121 4.282653e-01  0.881034875 0.371333037     0.8387200 #> HILIC_neg_158_23a1_4128   3.250685e-01  0.801556921 0.157315495     0.6623810 #> HILIC_neg_251_0056a0_6161 9.209126e-01  0.976619923 0.779184482     0.9444660 #> HILIC_neg_401_52a4_211    2.430201e-01  0.794478955 0.256391222     0.7325463 #> HILIC_neg_400_7045a5_3842 7.256470e-01  0.976619923 0.681799315     0.8971783 #> HILIC_neg_304_014a7_1311  8.714312e-01  0.976619923 0.745884646     0.9323558 #> HILIC_neg_276_6328a2_7734 8.689023e-01  0.976619923 0.998977575     0.9989776 #> HILIC_neg_118_9111a4_1865 1.186316e-01  0.671705185 0.040183304     0.6187064 #> HILIC_neg_446_9413a2_315  4.433132e-01  0.881034875 0.407402878     0.8387200 #> HILIC_neg_127_5856a4_3758 3.078606e-01  0.794478955 0.330451942     0.8261299 #> HILIC_neg_303_2144a1_2372 2.693659e-01  0.794478955 0.090022210     0.6187064 #> HILIC_neg_366_6203a6_1825 4.887411e-01  0.881034875 0.499565132     0.8927439 #> HILIC_neg_258_7252a7_5445 2.647973e-01  0.794478955 0.204838191     0.6692671 #> HILIC_neg_301_2643a4_0372 2.908832e-01  0.794478955 0.348030285     0.8387200 #> HILIC_neg_224_4031a4_7409 1.272869e-01  0.671705185 0.066950142     0.6187064 #> HILIC_neg_424_8488a6_7736 1.467904e-01  0.671705185 0.117965680     0.6187064 #> HILIC_neg_131_2034a6_1385 7.809490e-01  0.976619923 0.446215225     0.8503699 #> HILIC_neg_236_4114a5_6302 6.494079e-01  0.976619923 0.618450337     0.8971783 #> HILIC_neg_411_0148a0_7484 4.708217e-01  0.881034875 0.543357005     0.8927439 #> HILIC_pos_288_6263a6_572  8.817436e-01  0.976619923 0.939694324     0.9989776 #> HILIC_pos_331_1173a7_7822 2.902995e-01  0.794478955 0.446444184     0.8503699 #> HILIC_pos_139_4044a6_0388 4.955821e-01  0.881034875 0.557964930     0.8927439 #> HILIC_pos_132_7373a6_4146 7.994257e-01  0.976619923 0.959363807     0.9989776 #> HILIC_pos_298_6144a3_839  8.217079e-01  0.976619923 0.777942064     0.9444660 #> HILIC_pos_410_9203a2_7329 3.889300e-02  0.671705185 0.047915307     0.6187064 #> HILIC_pos_145_8514a2_811  1.140233e-01  0.671705185 0.108248392     0.6187064 #> HILIC_pos_306_0061a4_4049 3.851130e-01  0.855806677 0.408876008     0.8387200 #> HILIC_pos_425_8858a4_4494 4.835146e-01  0.881034875 0.546022077     0.8927439 #> HILIC_pos_436_332a6_1165  9.211934e-01  0.976619923 0.976424292     0.9989776 #> HILIC_pos_255_0094a7_9288 8.327279e-01  0.976619923 0.606087367     0.8971783 #> HILIC_pos_417_1474a2_8239 9.378184e-01  0.976619923 0.839196821     0.9729818 #> HILIC_pos_297_8334a0_6647 9.766199e-01  0.976619923 0.977882864     0.9989776 #> HILIC_pos_449_2162a0_7574 3.431988e-05  0.002745591 0.004348933     0.3479146 #> HILIC_pos_197_7438a7_72   9.170199e-01  0.976619923 0.910231609     0.9989776 #> HILIC_pos_141_601a7_387   8.890795e-01  0.976619923 0.877909201     0.9989776 #> HILIC_pos_448_1172a6_8567 7.637235e-01  0.976619923 0.926856231     0.9989776 #> HILIC_pos_346_6405a3_2719 2.739173e-01  0.794478955 0.300735290     0.7760911 #> HILIC_pos_334_3285a1_7395 5.729316e-01  0.935398564 0.506750659     0.8927439 #> HILIC_pos_215_5364a2_6707 1.718103e-01  0.671705185 0.152198878     0.6623810 #> RP_neg_458_0877a1_5798    3.859735e-02  0.671705185 0.046603206     0.6187064 #> RP_neg_365_8511a5_6086    1.191497e-01  0.671705185 0.085404878     0.6187064 #> RP_neg_369_5116a6_4389    2.568842e-01  0.794478955 0.224895845     0.6884769 #> RP_neg_222_4828a6_0392    5.997370e-01  0.954245124 0.395957005     0.8387200 #> RP_neg_114_84a3_0917      1.557715e-01  0.671705185 0.209145976     0.6692671 #> RP_neg_317_554a3_063      8.904211e-01  0.976619923 0.815558844     0.9612014 #> RP_neg_419_897a3_9617     8.737100e-01  0.976619923 0.603597569     0.8971783 #> RP_neg_493_3039a6_7816    1.016400e-01  0.671705185 0.110294158     0.6187064 #> RP_neg_359_0517a7_3652    7.419440e-01  0.976619923 0.555340813     0.8927439 #> RP_neg_435_8009a6_2215    3.479377e-01  0.818676982 0.269344901     0.7430204 #> RP_neg_358_2061a5_2818    8.348346e-01  0.976619923 0.668218859     0.8971783 #> RP_neg_397_2502a3_7998    5.284749e-01  0.919086763 0.723761491     0.9323558 #> RP_neg_165_9294a3_4261    1.060963e-01  0.671705185 0.123230794     0.6187064 #> RP_neg_413_1764a3_6741    7.622112e-01  0.976619923 0.742410835     0.9323558 #> RP_neg_115_4062a7_7329    8.008976e-01  0.976619923 0.642670599     0.8971783 #> RP_neg_300_1295a1_6959    6.474032e-01  0.976619923 0.656177849     0.8971783 #> RP_neg_177_6084a5_2913    9.404345e-01  0.976619923 0.994189205     0.9989776 #> RP_neg_134_1196a2_9606    6.748461e-01  0.976619923 0.965858020     0.9989776 #> RP_neg_139_4456a4_1251    1.209802e-01  0.671705185 0.123741273     0.6187064 #> RP_neg_385_6867a4_136     3.014675e-01  0.794478955 0.232360970     0.6884769 #> RP_pos_490_9235a4_0176    9.630576e-01  0.976619923 0.900646171     0.9989776 #> RP_pos_383_4976a2_6503    1.597276e-01  0.671705185 0.197297344     0.6692671 #> RP_pos_344_9911a1_9656    5.630002e-01  0.935398564 0.511033610     0.8927439 #> RP_pos_117_7095a4_0945    9.111847e-01  0.976619923 0.817021168     0.9612014 #> RP_pos_294_9596a6_7569    4.804149e-01  0.881034875 0.610741042     0.8971783 #> RP_pos_460_4815a0_8843    6.083313e-01  0.954245124 0.436295024     0.8503699 #> RP_pos_272_3545a3_5592    1.763226e-01  0.671705185 0.176107210     0.6692671 #> RP_pos_409_2445a2_4149    2.746851e-01  0.794478955 0.166904358     0.6676174 #> RP_pos_245_9925a3_6251    4.680215e-01  0.881034875 0.401024558     0.8387200 #> RP_pos_369_1069a1_6271    8.766328e-01  0.976619923 0.666267800     0.8971783 #> RP_pos_174_0715a4_3465    8.674231e-02  0.671705185 0.054349895     0.6187064 #> RP_pos_324_6195a4_7743    3.844206e-01  0.855806677 0.521810111     0.8927439 #> RP_pos_149_432a4_1341     1.647204e-01  0.671705185 0.122629595     0.6187064 #> RP_pos_461_5891a7_1505    1.124831e-01  0.671705185 0.147545993     0.6623810 #> RP_pos_458_263a4_3477     3.963266e-01  0.856922292 0.380954740     0.8387200 #> RP_pos_226_7218a3_1371    9.658473e-01  0.976619923 0.684098459     0.8971783 #> RP_pos_280_3779a4_0424    1.279069e-02  0.511627641 0.013268337     0.5307335 #> RP_pos_447_3232a2_2393    5.439063e-01  0.925798008 0.642422882     0.8971783 #> RP_pos_453_282a5_128      3.306422e-01  0.801556921 0.283762977     0.7567013 #> RP_pos_153_9636a7_9986    1.365519e-01  0.671705185 0.197629298     0.6692671"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_kruskal_wallis.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskal-Wallis rank-sum test — perform_kruskal_wallis","title":"Kruskal-Wallis rank-sum test — perform_kruskal_wallis","text":"Performs Kruskal-Wallis rank-sum test equality.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_kruskal_wallis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskal-Wallis rank-sum test — perform_kruskal_wallis","text":"","code":"perform_kruskal_wallis(   object,   formula_char,   all_features = FALSE,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_kruskal_wallis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskal-Wallis rank-sum test — perform_kruskal_wallis","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details) all_features features included FDR correction? assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_kruskal_wallis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kruskal-Wallis rank-sum test — perform_kruskal_wallis","text":"data frame results.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_kruskal_wallis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kruskal-Wallis rank-sum test — perform_kruskal_wallis","text":"model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual Feature IDs model fitting. example, testing equality means study groups, use \"Feature ~ Group\".","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_kruskal_wallis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kruskal-Wallis rank-sum test — perform_kruskal_wallis","text":"","code":"data(example_set) perform_kruskal_wallis(example_set, formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:37:25] Starting Kruskal-Wallis tests. #> INFO [2025-06-23 22:37:26] Kruskal-Wallis tests performed. #>                                          Feature_ID  Kruskal_P Kruskal_P_FDR #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4_4322 0.59642299     0.9791248 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2_6121 0.79906451     0.9791248 #> HILIC_neg_158_23a1_4128     HILIC_neg_158_23a1_4128 0.34642917     0.9791248 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0_6161 0.53453632     0.9791248 #> HILIC_neg_401_52a4_211       HILIC_neg_401_52a4_211 0.46971718     0.9791248 #> HILIC_neg_400_7045a5_3842 HILIC_neg_400_7045a5_3842 0.26447193     0.9791248 #> HILIC_neg_304_014a7_1311   HILIC_neg_304_014a7_1311 0.18838827     0.9791248 #> HILIC_neg_276_6328a2_7734 HILIC_neg_276_6328a2_7734 0.92053699     0.9791248 #> HILIC_neg_118_9111a4_1865 HILIC_neg_118_9111a4_1865 0.42209206     0.9791248 #> HILIC_neg_446_9413a2_315   HILIC_neg_446_9413a2_315 0.94919342     0.9791248 #> HILIC_neg_127_5856a4_3758 HILIC_neg_127_5856a4_3758 0.89286857     0.9791248 #> HILIC_neg_303_2144a1_2372 HILIC_neg_303_2144a1_2372 0.80642224     0.9791248 #> HILIC_neg_366_6203a6_1825 HILIC_neg_366_6203a6_1825 0.43237129     0.9791248 #> HILIC_neg_258_7252a7_5445 HILIC_neg_258_7252a7_5445 0.22602134     0.9791248 #> HILIC_neg_301_2643a4_0372 HILIC_neg_301_2643a4_0372 0.39854239     0.9791248 #> HILIC_neg_224_4031a4_7409 HILIC_neg_224_4031a4_7409 0.68821774     0.9791248 #> HILIC_neg_424_8488a6_7736 HILIC_neg_424_8488a6_7736 0.63336660     0.9791248 #> HILIC_neg_131_2034a6_1385 HILIC_neg_131_2034a6_1385 0.48964326     0.9791248 #> HILIC_neg_236_4114a5_6302 HILIC_neg_236_4114a5_6302 0.22566045     0.9791248 #> HILIC_neg_411_0148a0_7484 HILIC_neg_411_0148a0_7484 0.25595029     0.9791248 #> HILIC_pos_288_6263a6_572   HILIC_pos_288_6263a6_572 0.58955350     0.9791248 #> HILIC_pos_331_1173a7_7822 HILIC_pos_331_1173a7_7822 0.81459138     0.9791248 #> HILIC_pos_139_4044a6_0388 HILIC_pos_139_4044a6_0388 0.33002455     0.9791248 #> HILIC_pos_132_7373a6_4146 HILIC_pos_132_7373a6_4146 0.14709879     0.9791248 #> HILIC_pos_298_6144a3_839   HILIC_pos_298_6144a3_839 0.81925522     0.9791248 #> HILIC_pos_410_9203a2_7329 HILIC_pos_410_9203a2_7329 0.27000621     0.9791248 #> HILIC_pos_145_8514a2_811   HILIC_pos_145_8514a2_811 0.91845450     0.9791248 #> HILIC_pos_306_0061a4_4049 HILIC_pos_306_0061a4_4049 0.46617988     0.9791248 #> HILIC_pos_425_8858a4_4494 HILIC_pos_425_8858a4_4494 0.21466426     0.9791248 #> HILIC_pos_436_332a6_1165   HILIC_pos_436_332a6_1165 0.90131334     0.9791248 #> HILIC_pos_255_0094a7_9288 HILIC_pos_255_0094a7_9288 0.84382501     0.9791248 #> HILIC_pos_417_1474a2_8239 HILIC_pos_417_1474a2_8239 0.31245522     0.9791248 #> HILIC_pos_297_8334a0_6647 HILIC_pos_297_8334a0_6647 0.68293227     0.9791248 #> HILIC_pos_449_2162a0_7574 HILIC_pos_449_2162a0_7574 0.94473499     0.9791248 #> HILIC_pos_197_7438a7_72     HILIC_pos_197_7438a7_72 0.23702183     0.9791248 #> HILIC_pos_141_601a7_387     HILIC_pos_141_601a7_387 0.31621551     0.9791248 #> HILIC_pos_448_1172a6_8567 HILIC_pos_448_1172a6_8567 0.71312145     0.9791248 #> HILIC_pos_346_6405a3_2719 HILIC_pos_346_6405a3_2719 0.95464666     0.9791248 #> HILIC_pos_334_3285a1_7395 HILIC_pos_334_3285a1_7395 0.29748076     0.9791248 #> HILIC_pos_215_5364a2_6707 HILIC_pos_215_5364a2_6707 0.99917681     0.9991768 #> RP_neg_458_0877a1_5798       RP_neg_458_0877a1_5798 0.91801106     0.9791248 #> RP_neg_365_8511a5_6086       RP_neg_365_8511a5_6086 0.82811993     0.9791248 #> RP_neg_369_5116a6_4389       RP_neg_369_5116a6_4389 0.08820308     0.9791248 #> RP_neg_222_4828a6_0392       RP_neg_222_4828a6_0392 0.08324328     0.9791248 #> RP_neg_114_84a3_0917           RP_neg_114_84a3_0917 0.07743725     0.9791248 #> RP_neg_317_554a3_063           RP_neg_317_554a3_063 0.01593830     0.9791248 #> RP_neg_419_897a3_9617         RP_neg_419_897a3_9617 0.42558877     0.9791248 #> RP_neg_493_3039a6_7816       RP_neg_493_3039a6_7816 0.68140183     0.9791248 #> RP_neg_359_0517a7_3652       RP_neg_359_0517a7_3652 0.68909160     0.9791248 #> RP_neg_435_8009a6_2215       RP_neg_435_8009a6_2215 0.61055678     0.9791248 #> RP_neg_358_2061a5_2818       RP_neg_358_2061a5_2818 0.59829592     0.9791248 #> RP_neg_397_2502a3_7998       RP_neg_397_2502a3_7998 0.58015642     0.9791248 #> RP_neg_165_9294a3_4261       RP_neg_165_9294a3_4261 0.33523758     0.9791248 #> RP_neg_413_1764a3_6741       RP_neg_413_1764a3_6741 0.69432095     0.9791248 #> RP_neg_115_4062a7_7329       RP_neg_115_4062a7_7329 0.19119325     0.9791248 #> RP_neg_300_1295a1_6959       RP_neg_300_1295a1_6959 0.51182336     0.9791248 #> RP_neg_177_6084a5_2913       RP_neg_177_6084a5_2913 0.33976288     0.9791248 #> RP_neg_134_1196a2_9606       RP_neg_134_1196a2_9606 0.63550412     0.9791248 #> RP_neg_139_4456a4_1251       RP_neg_139_4456a4_1251 0.07256151     0.9791248 #> RP_neg_385_6867a4_136         RP_neg_385_6867a4_136 0.97181120     0.9841126 #> RP_pos_490_9235a4_0176       RP_pos_490_9235a4_0176 0.88408671     0.9791248 #> RP_pos_383_4976a2_6503       RP_pos_383_4976a2_6503 0.17148517     0.9791248 #> RP_pos_344_9911a1_9656       RP_pos_344_9911a1_9656 0.75374144     0.9791248 #> RP_pos_117_7095a4_0945       RP_pos_117_7095a4_0945 0.93073704     0.9791248 #> RP_pos_294_9596a6_7569       RP_pos_294_9596a6_7569 0.93585388     0.9791248 #> RP_pos_460_4815a0_8843       RP_pos_460_4815a0_8843 0.02783844     0.9791248 #> RP_pos_272_3545a3_5592       RP_pos_272_3545a3_5592 0.74880356     0.9791248 #> RP_pos_409_2445a2_4149       RP_pos_409_2445a2_4149 0.32995427     0.9791248 #> RP_pos_245_9925a3_6251       RP_pos_245_9925a3_6251 0.18889662     0.9791248 #> RP_pos_369_1069a1_6271       RP_pos_369_1069a1_6271 0.90035933     0.9791248 #> RP_pos_174_0715a4_3465       RP_pos_174_0715a4_3465 0.73284319     0.9791248 #> RP_pos_324_6195a4_7743       RP_pos_324_6195a4_7743 0.39505113     0.9791248 #> RP_pos_149_432a4_1341         RP_pos_149_432a4_1341 0.25744472     0.9791248 #> RP_pos_461_5891a7_1505       RP_pos_461_5891a7_1505 0.12364562     0.9791248 #> RP_pos_458_263a4_3477         RP_pos_458_263a4_3477 0.65024077     0.9791248 #> RP_pos_226_7218a3_1371       RP_pos_226_7218a3_1371 0.59499866     0.9791248 #> RP_pos_280_3779a4_0424       RP_pos_280_3779a4_0424 0.46469078     0.9791248 #> RP_pos_447_3232a2_2393       RP_pos_447_3232a2_2393 0.63968887     0.9791248 #> RP_pos_453_282a5_128           RP_pos_453_282a5_128 0.86827717     0.9791248 #> RP_pos_153_9636a7_9986       RP_pos_153_9636a7_9986 0.57241135     0.9791248"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear models — perform_lm","title":"Linear models — perform_lm","text":"Fits linear model separately feature. Returns relevant statistics.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear models — perform_lm","text":"","code":"perform_lm(object, formula_char, all_features = FALSE, assay.type = NULL, ...)"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear models — perform_lm","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details) all_features features included FDR correction? assay.type character, assay used case multiple assays ... additional parameters passed lm","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear models — perform_lm","text":"data frame one row per feature, relevant statistics linear model columns.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear models — perform_lm","text":"linear model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual Feature IDs model fitting, see example.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear models — perform_lm","text":"","code":"data(example_set) # A simple example without QC samples # Features predicted by Group and Time lm_results <- perform_lm(drop_qcs(example_set),    formula_char = \"Feature ~ Group + Time\") #> INFO [2025-06-23 22:37:26] Starting linear regression. #> INFO [2025-06-23 22:37:26] Linear regression performed."},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear models ANOVA table — perform_lm_anova","title":"Linear models ANOVA table — perform_lm_anova","text":"Fits linear model separately feature compute ANOVA table. Returns relevant statistics.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear models ANOVA table — perform_lm_anova","text":"","code":"perform_lm_anova(   object,   formula_char,   all_features = FALSE,   lm_args = NULL,   anova_args = NULL,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear models ANOVA table — perform_lm_anova","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details) all_features features included FDR correction? lm_args list arguments lm, list names parameter names anova_args list arguments anova, list names parameter names assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm_anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear models ANOVA table — perform_lm_anova","text":"data frame one row per feature, relevant statistics linear model columns.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm_anova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear models ANOVA table — perform_lm_anova","text":"linear model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual Feature IDs model fitting, see example.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lm_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear models ANOVA table — perform_lm_anova","text":"","code":"data(example_set) # A simple example without QC samples # Features predicted by Group and Time lm_anova_results <- perform_lm_anova(drop_qcs(example_set),    formula_char = \"Feature ~ Group + Time\") #> INFO [2025-06-23 22:37:27] Starting ANOVA tests #> INFO [2025-06-23 22:37:27] ANOVA tests performed"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lmer.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear mixed models — perform_lmer","title":"Linear mixed models — perform_lmer","text":"Fits linear mixed model separately feature. Returns relevant statistics.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lmer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear mixed models — perform_lmer","text":"","code":"perform_lmer(   object,   formula_char,   all_features = FALSE,   ci_method = c(\"Wald\", \"profile\", \"boot\"),   test_random = FALSE,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lmer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear mixed models — perform_lmer","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details) all_features features included FDR correction? ci_method method calculating confidence intervals confint test_random logical, whether tests significance random effects performed assay.type character, assay used case multiple assays ... additional parameters passed lmer","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lmer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear mixed models — perform_lmer","text":"data frame one row per feature, relevant statistics linear mixed model columns.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lmer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear mixed models — perform_lmer","text":"model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual Feature IDs model fitting, see example. bootstrap (\"boot\") confidence intervals, results reproducible RNGseed set BiocParallel backend.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_lmer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear mixed models — perform_lmer","text":"","code":"data(example_set) # A simple example without QC samples # Features predicted by Group and Time as fixed effects with Subject ID as a  # random effect lmer_results <- perform_lmer(drop_qcs(example_set),   formula_char = \"Feature ~ Group + Time + (1 | Subject_ID)\",   ci_method = \"Wald\" ) #> INFO [2025-06-23 22:37:27] Starting fitting linear mixed models. #> INFO [2025-06-23 22:37:30] Linear mixed models fit."},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression — perform_logistic","title":"Logistic regression — perform_logistic","text":"Fits logistic regression model separately feature. Returns relevant statistics.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression — perform_logistic","text":"","code":"perform_logistic(   object,   formula_char,   all_features = FALSE,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression — perform_logistic","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details) all_features features included FDR correction? assay.type character, assay used case multiple assays ... additional parameters passed glm","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic regression — perform_logistic","text":"data frame one row per feature, relevant statistics linear model columns.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_logistic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Logistic regression — perform_logistic","text":"logistic regression model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual Feature IDs model fitting, see example.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic regression — perform_logistic","text":"","code":"data(example_set) # A simple example without QC samples # Time predicted by features logistic_results <- perform_logistic(drop_qcs(example_set),   formula_char = \"Time ~ Feature + Group\" ) #> INFO [2025-06-23 22:37:30] Starting logistic regression #> INFO [2025-06-23 22:37:31] Logistic regression performed."},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_non_parametric.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise and paired non-parametric tests — perform_non_parametric","title":"Pairwise and paired non-parametric tests — perform_non_parametric","text":"Performs pairwise paired non-parametric tests. default Mann- Whitney U test, use is_paired Wilcoxon signed rank tests.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_non_parametric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise and paired non-parametric tests — perform_non_parametric","text":"","code":"perform_non_parametric(   object,   formula_char,   is_paired = FALSE,   id = NULL,   all_features = FALSE,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_non_parametric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise and paired non-parametric tests — perform_non_parametric","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used tests is_paired logical, use paired test id character, name subject identification column paired version all_features features included FDR correction? assay.type character, assay used case multiple assays ... parameters passed test wilcox.test","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_non_parametric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise and paired non-parametric tests — perform_non_parametric","text":"data frame results.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_non_parametric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pairwise and paired non-parametric tests — perform_non_parametric","text":"P-values comparison corrected separately . model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual features model fitting. example, testing equality means study groups, use \"Feature ~ Group\".","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_non_parametric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise and paired non-parametric tests — perform_non_parametric","text":"","code":"data(example_set) # Including QCs as a study group for example for pairwise tests mann_whitney_results <- perform_non_parametric(example_set,    formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:37:32] Starting tests for A & B #> INFO [2025-06-23 22:37:32] Tests performed #> INFO [2025-06-23 22:37:33] Starting tests for A & QC #> INFO [2025-06-23 22:37:33] Tests performed #> Joining with `by = join_by(Feature_ID)` #> INFO [2025-06-23 22:37:33] Starting tests for B & QC #> INFO [2025-06-23 22:37:34] Tests performed #> Joining with `by = join_by(Feature_ID)` # Using paired mode (pairs with QC are skipped as there are no common IDs in  # 'example_set') wilcoxon_signed_results <- perform_non_parametric(example_set,   formula_char = \"Feature ~ Time\",   is_paired = TRUE,   id = \"Subject_ID\") #> INFO [2025-06-23 22:37:34] Starting paired tests for 1 & 2 #> INFO [2025-06-23 22:37:34] Found 20 complete pairs. #> INFO [2025-06-23 22:37:34] Paired tests performed. #> INFO [2025-06-23 22:37:34] Starting paired tests for 1 & QC #> INFO [2025-06-23 22:37:34] Found 0 complete pairs. #> Warning: Skipped 1 & QC: no common IDs. #> Joining with `by = join_by(Feature_ID)` #> INFO [2025-06-23 22:37:34] Starting paired tests for 2 & QC #> INFO [2025-06-23 22:37:34] Found 0 complete pairs. #> Warning: Skipped 2 & QC: no common IDs. #> Joining with `by = join_by(Feature_ID)` # Only two groups mann_whitney_results <- perform_non_parametric(drop_qcs(example_set),    formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:37:34] Starting tests for A & B #> INFO [2025-06-23 22:37:35] Tests performed"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_oneway_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Welch's ANOVA and classic ANOVA — perform_oneway_anova","title":"Welch's ANOVA and classic ANOVA — perform_oneway_anova","text":"Performs ANOVA Welch's correction default, deal heterogeneity variances. Can also perform classic ANOVA assumption equal variances. Uses base R function oneway.test.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_oneway_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Welch's ANOVA and classic ANOVA — perform_oneway_anova","text":"","code":"perform_oneway_anova(   object,   formula_char,   all_features = FALSE,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_oneway_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Welch's ANOVA and classic ANOVA — perform_oneway_anova","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details). all_features features included FDR correction? assay.type character, assay used case multiple assays ... parameters oneway.test","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_oneway_anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Welch's ANOVA and classic ANOVA — perform_oneway_anova","text":"data frame results.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_oneway_anova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Welch's ANOVA and classic ANOVA — perform_oneway_anova","text":"model fit combined_data(object). Thus, column names pheno data can specified. make formulas flexible, word \"Feature\" must used signal role features formula. \"Feature\" replaced actual Feature IDs model fitting. example, testing equality means study groups, use \"Feature ~ Group\".","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_oneway_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Welch's ANOVA and classic ANOVA — perform_oneway_anova","text":"","code":"data(example_set) perform_oneway_anova(example_set, formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:37:36] Starting ANOVA tests. #> INFO [2025-06-23 22:37:36] ANOVA performed. #>                                          Feature_ID    ANOVA_P ANOVA_P_FDR #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4_4322 0.56047703   0.9807428 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2_6121 0.80653686   0.9807428 #> HILIC_neg_158_23a1_4128     HILIC_neg_158_23a1_4128 0.37720565   0.9807428 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0_6161 0.50859597   0.9807428 #> HILIC_neg_401_52a4_211       HILIC_neg_401_52a4_211 0.40260526   0.9807428 #> HILIC_neg_400_7045a5_3842 HILIC_neg_400_7045a5_3842 0.47734274   0.9807428 #> HILIC_neg_304_014a7_1311   HILIC_neg_304_014a7_1311 0.22660630   0.9807428 #> HILIC_neg_276_6328a2_7734 HILIC_neg_276_6328a2_7734 0.77589629   0.9807428 #> HILIC_neg_118_9111a4_1865 HILIC_neg_118_9111a4_1865 0.85382843   0.9807428 #> HILIC_neg_446_9413a2_315   HILIC_neg_446_9413a2_315 0.98992933   0.9899293 #> HILIC_neg_127_5856a4_3758 HILIC_neg_127_5856a4_3758 0.46906067   0.9807428 #> HILIC_neg_303_2144a1_2372 HILIC_neg_303_2144a1_2372 0.95926120   0.9899293 #> HILIC_neg_366_6203a6_1825 HILIC_neg_366_6203a6_1825 0.24494443   0.9807428 #> HILIC_neg_258_7252a7_5445 HILIC_neg_258_7252a7_5445 0.21500463   0.9807428 #> HILIC_neg_301_2643a4_0372 HILIC_neg_301_2643a4_0372 0.55390563   0.9807428 #> HILIC_neg_224_4031a4_7409 HILIC_neg_224_4031a4_7409 0.71835254   0.9807428 #> HILIC_neg_424_8488a6_7736 HILIC_neg_424_8488a6_7736 0.73132222   0.9807428 #> HILIC_neg_131_2034a6_1385 HILIC_neg_131_2034a6_1385 0.52885032   0.9807428 #> HILIC_neg_236_4114a5_6302 HILIC_neg_236_4114a5_6302 0.25330952   0.9807428 #> HILIC_neg_411_0148a0_7484 HILIC_neg_411_0148a0_7484 0.18614554   0.9807428 #> HILIC_pos_288_6263a6_572   HILIC_pos_288_6263a6_572 0.79547124   0.9807428 #> HILIC_pos_331_1173a7_7822 HILIC_pos_331_1173a7_7822 0.78890868   0.9807428 #> HILIC_pos_139_4044a6_0388 HILIC_pos_139_4044a6_0388 0.41635473   0.9807428 #> HILIC_pos_132_7373a6_4146 HILIC_pos_132_7373a6_4146 0.25243102   0.9807428 #> HILIC_pos_298_6144a3_839   HILIC_pos_298_6144a3_839 0.75840143   0.9807428 #> HILIC_pos_410_9203a2_7329 HILIC_pos_410_9203a2_7329 0.45191666   0.9807428 #> HILIC_pos_145_8514a2_811   HILIC_pos_145_8514a2_811 0.84277528   0.9807428 #> HILIC_pos_306_0061a4_4049 HILIC_pos_306_0061a4_4049 0.51758261   0.9807428 #> HILIC_pos_425_8858a4_4494 HILIC_pos_425_8858a4_4494 0.32151897   0.9807428 #> HILIC_pos_436_332a6_1165   HILIC_pos_436_332a6_1165 0.80322099   0.9807428 #> HILIC_pos_255_0094a7_9288 HILIC_pos_255_0094a7_9288 0.87969382   0.9807428 #> HILIC_pos_417_1474a2_8239 HILIC_pos_417_1474a2_8239 0.35656392   0.9807428 #> HILIC_pos_297_8334a0_6647 HILIC_pos_297_8334a0_6647 0.61252944   0.9807428 #> HILIC_pos_449_2162a0_7574 HILIC_pos_449_2162a0_7574 0.57683501   0.9807428 #> HILIC_pos_197_7438a7_72     HILIC_pos_197_7438a7_72 0.17573087   0.9807428 #> HILIC_pos_141_601a7_387     HILIC_pos_141_601a7_387 0.46096274   0.9807428 #> HILIC_pos_448_1172a6_8567 HILIC_pos_448_1172a6_8567 0.67844879   0.9807428 #> HILIC_pos_346_6405a3_2719 HILIC_pos_346_6405a3_2719 0.70006195   0.9807428 #> HILIC_pos_334_3285a1_7395 HILIC_pos_334_3285a1_7395 0.49183404   0.9807428 #> HILIC_pos_215_5364a2_6707 HILIC_pos_215_5364a2_6707 0.97483378   0.9899293 #> RP_neg_458_0877a1_5798       RP_neg_458_0877a1_5798 0.91248271   0.9807428 #> RP_neg_365_8511a5_6086       RP_neg_365_8511a5_6086 0.97808896   0.9899293 #> RP_neg_369_5116a6_4389       RP_neg_369_5116a6_4389 0.06843725   0.9807428 #> RP_neg_222_4828a6_0392       RP_neg_222_4828a6_0392 0.13475979   0.9807428 #> RP_neg_114_84a3_0917           RP_neg_114_84a3_0917 0.25208100   0.9807428 #> RP_neg_317_554a3_063           RP_neg_317_554a3_063 0.09240486   0.9807428 #> RP_neg_419_897a3_9617         RP_neg_419_897a3_9617 0.29117081   0.9807428 #> RP_neg_493_3039a6_7816       RP_neg_493_3039a6_7816 0.77127300   0.9807428 #> RP_neg_359_0517a7_3652       RP_neg_359_0517a7_3652 0.57345675   0.9807428 #> RP_neg_435_8009a6_2215       RP_neg_435_8009a6_2215 0.72592571   0.9807428 #> RP_neg_358_2061a5_2818       RP_neg_358_2061a5_2818 0.43811560   0.9807428 #> RP_neg_397_2502a3_7998       RP_neg_397_2502a3_7998 0.79753241   0.9807428 #> RP_neg_165_9294a3_4261       RP_neg_165_9294a3_4261 0.20314383   0.9807428 #> RP_neg_413_1764a3_6741       RP_neg_413_1764a3_6741 0.46248112   0.9807428 #> RP_neg_115_4062a7_7329       RP_neg_115_4062a7_7329 0.19265311   0.9807428 #> RP_neg_300_1295a1_6959       RP_neg_300_1295a1_6959 0.58018018   0.9807428 #> RP_neg_177_6084a5_2913       RP_neg_177_6084a5_2913 0.49639405   0.9807428 #> RP_neg_134_1196a2_9606       RP_neg_134_1196a2_9606 0.68314177   0.9807428 #> RP_neg_139_4456a4_1251       RP_neg_139_4456a4_1251 0.16274136   0.9807428 #> RP_neg_385_6867a4_136         RP_neg_385_6867a4_136 0.91944642   0.9807428 #> RP_pos_490_9235a4_0176       RP_pos_490_9235a4_0176 0.84418941   0.9807428 #> RP_pos_383_4976a2_6503       RP_pos_383_4976a2_6503 0.06588322   0.9807428 #> RP_pos_344_9911a1_9656       RP_pos_344_9911a1_9656 0.78835499   0.9807428 #> RP_pos_117_7095a4_0945       RP_pos_117_7095a4_0945 0.95507768   0.9899293 #> RP_pos_294_9596a6_7569       RP_pos_294_9596a6_7569 0.90406183   0.9807428 #> RP_pos_460_4815a0_8843       RP_pos_460_4815a0_8843 0.10367813   0.9807428 #> RP_pos_272_3545a3_5592       RP_pos_272_3545a3_5592 0.57813577   0.9807428 #> RP_pos_409_2445a2_4149       RP_pos_409_2445a2_4149 0.10409987   0.9807428 #> RP_pos_245_9925a3_6251       RP_pos_245_9925a3_6251 0.13216120   0.9807428 #> RP_pos_369_1069a1_6271       RP_pos_369_1069a1_6271 0.89301018   0.9807428 #> RP_pos_174_0715a4_3465       RP_pos_174_0715a4_3465 0.56968718   0.9807428 #> RP_pos_324_6195a4_7743       RP_pos_324_6195a4_7743 0.42672674   0.9807428 #> RP_pos_149_432a4_1341         RP_pos_149_432a4_1341 0.23999866   0.9807428 #> RP_pos_461_5891a7_1505       RP_pos_461_5891a7_1505 0.11034460   0.9807428 #> RP_pos_458_263a4_3477         RP_pos_458_263a4_3477 0.50316471   0.9807428 #> RP_pos_226_7218a3_1371       RP_pos_226_7218a3_1371 0.73029862   0.9807428 #> RP_pos_280_3779a4_0424       RP_pos_280_3779a4_0424 0.45773178   0.9807428 #> RP_pos_447_3232a2_2393       RP_pos_447_3232a2_2393 0.87744479   0.9807428 #> RP_pos_453_282a5_128           RP_pos_453_282a5_128 0.65526139   0.9807428 #> RP_pos_153_9636a7_9986       RP_pos_153_9636a7_9986 0.87652410   0.9807428"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_permanova.html","id":null,"dir":"Reference","previous_headings":"","what":"PERMANOVA — perform_permanova","title":"PERMANOVA — perform_permanova","text":"Performs permutational multivariate analysis variance. Uses package called PERMANOVA.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_permanova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PERMANOVA — perform_permanova","text":"","code":"perform_permanova(   object,   group,   all_features = FALSE,   transform = \"Standardize columns\",   coef = \"Pythagorean\",   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_permanova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PERMANOVA — perform_permanova","text":"object  SummarizedExperiment MetaboSet object group character, name column compare all_features features included? transform Transformation use IniTransform. default uses \"Standardize columns\". coef Coefficient calculate continuous distances IniTransform. default uses Pythagorean distances. assay.type character, assay used case multiple assays ... parameters PERMANOVA","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_permanova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PERMANOVA — perform_permanova","text":"PERMANOVA object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_permanova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PERMANOVA — perform_permanova","text":"","code":"data(example_set) permanova_res <- perform_permanova(drop_qcs(example_set), group = \"Group\") #> INFO [2025-06-23 22:37:36] Starting PERMANOVA tests #> INFO [2025-06-23 22:37:37] PERMANOVA performed"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_repeatability.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute repeatability measures — perform_repeatability","title":"Compute repeatability measures — perform_repeatability","text":"Computes repeatability feature following formula: $$\\frac{\\sigma^2_{}}{\\sigma^2_{} + \\sigma^2_{within}}$$ repeatability ranges 0 1. Higher repeatability depicts less variation batches.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_repeatability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute repeatability measures — perform_repeatability","text":"","code":"perform_repeatability(object, group, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_repeatability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute repeatability measures — perform_repeatability","text":"object  SummarizedExperiment MetaboSet object group column name pheno data giving group labels assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_repeatability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute repeatability measures — perform_repeatability","text":"data frame one row per feature repeatability measure.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_repeatability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute repeatability measures — perform_repeatability","text":"","code":"data(example_set) # Batch correction replicates <- list(which(example_set$QC == \"QC\")) batch_corrected <- ruvs_qc(example_set, replicates = replicates) # Evaluate batch correction rep_orig <- perform_repeatability(example_set, group = \"Group\") mean(rep_orig$Repeatability, na.rm = TRUE) #> [1] 0.3658633 rep_corr <- perform_repeatability(batch_corrected, group = \"Group\") mean(rep_corr$Repeatability, na.rm = TRUE) #> [1] 0.4051463"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_t_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise and paired t-tests — perform_t_test","title":"Pairwise and paired t-tests — perform_t_test","text":"Performs pairwise paired t-tests. R default Welch's t-test (unequal variances), use var.equal = TRUE Student's t-test. Use is_paired paired t-tests.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_t_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise and paired t-tests — perform_t_test","text":"","code":"perform_t_test(   object,   formula_char,   is_paired = FALSE,   id = NULL,   all_features = FALSE,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_t_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise and paired t-tests — perform_t_test","text":"object  SummarizedExperiment MetaboSet object formula_char character, formula used linear model (see Details) is_paired logical, use paired t-test id character, name subject identification column paired version all_features features included FDR correction? assay.type character, assay used case multiple assays ... parameters passed t.test","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_t_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise and paired t-tests — perform_t_test","text":"data frame results.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_t_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pairwise and paired t-tests — perform_t_test","text":"P-values comparison corrected separately .","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/perform_t_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise and paired t-tests — perform_t_test","text":"","code":"data(example_set) # Including QCs as a study group for example t_test_results <- perform_t_test(example_set,    formula_char = \"Feature ~ Group\") #> The functionality of this function has changed. It now encompasses pairwise and paired t-tests. #> Remember that t.test returns difference between group means in different order than lm. #> This function mimics this behavior, so the effect size is mean of first level minus mean of second level. #> INFO [2025-06-23 22:37:38] Starting tests for A & B #> INFO [2025-06-23 22:37:38] Tests performed #> INFO [2025-06-23 22:37:38] Starting tests for A & QC #> INFO [2025-06-23 22:37:38] Tests performed #> Joining with `by = join_by(Feature_ID)` #> INFO [2025-06-23 22:37:38] Starting tests for B & QC #> INFO [2025-06-23 22:37:38] Tests performed #> Joining with `by = join_by(Feature_ID)` # Using paired mode (pairs with QC are skipped as there are no common IDs in  # 'example_set') t_test_results <- perform_t_test(example_set,   formula_char = \"Feature ~ Time\", is_paired = TRUE, id = \"Subject_ID\") #> The functionality of this function has changed. It now encompasses pairwise and paired t-tests. #> Remember that t.test returns difference between group means in different order than lm. #> This function mimics this behavior, so the effect size is mean of first level minus mean of second level. #> INFO [2025-06-23 22:37:38] Starting paired tests for 1 & 2 #> INFO [2025-06-23 22:37:38] Found 20 complete pairs. #> INFO [2025-06-23 22:37:38] Paired tests performed. #> INFO [2025-06-23 22:37:38] Starting paired tests for 1 & QC #> INFO [2025-06-23 22:37:38] Found 0 complete pairs. #> Warning: Skipped 1 & QC: no common IDs. #> Joining with `by = join_by(Feature_ID)` #> INFO [2025-06-23 22:37:38] Starting paired tests for 2 & QC #> INFO [2025-06-23 22:37:38] Found 0 complete pairs. #> Warning: Skipped 2 & QC: no common IDs. #> Joining with `by = join_by(Feature_ID)` # Only two groups t_test_results <- perform_t_test(drop_qcs(example_set),   formula_char = \"Feature ~ Group\") #> The functionality of this function has changed. It now encompasses pairwise and paired t-tests. #> Remember that t.test returns difference between group means in different order than lm. #> This function mimics this behavior, so the effect size is mean of first level minus mean of second level. #> INFO [2025-06-23 22:37:38] Starting tests for A & B #> INFO [2025-06-23 22:37:39] Tests performed"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dendrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample dendrogram — plot_dendrogram","title":"Sample dendrogram — plot_dendrogram","text":"Draws dendrogram hierarchical clustering applied samples experiment.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dendrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample dendrogram — plot_dendrogram","text":"","code":"plot_dendrogram(   object,   all_features = FALSE,   color,   dist_method = \"euclidean\",   clust_method = \"ward.D2\",   center = TRUE,   scale = \"uv\",   title = \"Dendrogram of hierarchical clustering\",   subtitle = NULL,   color_scale = getOption(\"notame.color_scale_dis\"),   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dendrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample dendrogram — plot_dendrogram","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. color character, name column used coloring sample labels dist_method distance method used clustering dist clust_method method used clustering hclust center logical, data centered? scale scaling used, prep. Default \"uv\" unit variance title plot title subtitle plot subtitle color_scale color scale returned ggplot function. assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dendrogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample dendrogram — plot_dendrogram","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dendrogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample dendrogram — plot_dendrogram","text":"","code":"data(example_set) plot_dendrogram(example_set, color = \"Group\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dist_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distance density — plot_dist_density","title":"Plot distance density — plot_dist_density","text":"Plot density distances samples QC samples actual samples.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dist_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distance density — plot_dist_density","text":"","code":"plot_dist_density(   object,   all_features = FALSE,   dist_method = \"euclidean\",   center = TRUE,   scale = \"uv\",   color_scale = getOption(\"notame.color_scale_dis\"),   fill_scale = getOption(\"notame.fill_scale_dis\"),   title = paste(\"Density plot of\", dist_method, \"distances between samples\"),   subtitle = NULL,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dist_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distance density — plot_dist_density","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. dist_method method calculating distances, passed dist center logical, data centered? scale scaling used, prep Default \"uv\" unit variance color_scale scale color edge density curves, returned ggplot function fill_scale scale fill density curves, returned ggplot function title plot title subtitle plot subtitle assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dist_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot distance density — plot_dist_density","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_dist_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot distance density — plot_dist_density","text":"","code":"data(example_set) plot_dist_density(example_set)  # Drift correction tightens QCs together plot_dist_density(correct_drift(example_set)) #> INFO [2025-06-23 22:37:39]  #> Starting drift correction at 2025-06-23 22:37:39.926356 #> INFO [2025-06-23 22:37:39] Zero values in feature abundances detected. Zeroes will be replaced with 1.1. #> INFO [2025-06-23 22:37:40] Drift correction performed at 2025-06-23 22:37:40.251752 #> INFO [2025-06-23 22:37:40] Inspecting drift correction results 2025-06-23 22:37:40.456545 #> INFO [2025-06-23 22:37:40] Drift correction results inspected at 2025-06-23 22:37:40.773323 #> INFO [2025-06-23 22:37:40]  #> Drift correction results inspected, report: #> Drift_corrected: 100%"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_effect_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of effects between variables, such as correlations — plot_effect_heatmap","title":"Heatmap of effects between variables, such as correlations — plot_effect_heatmap","text":"Draws heatmap e.g. correlations variables (see perform_correlation_tests). possible draw lower triangular heatmap, order rows columns hierarchical clustering, add circles p-values.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_effect_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of effects between variables, such as correlations — plot_effect_heatmap","text":"","code":"plot_effect_heatmap(   data,   x,   y,   effect,   p = NULL,   p_limit = 0.1,   point_size_range = c(1, 6),   log2_effect = FALSE,   discretize_effect = FALSE,   breaks = 5,   clustering = TRUE,   dist_method = \"euclidean\",   clust_method = \"ward.D2\",   lower_tri = FALSE,   reverse_y = TRUE,   use_coord_fixed = TRUE,   symmetric_aspect_ratio = TRUE,   title = NULL,   subtitle = NULL,   fill_scale = NA )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_effect_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of effects between variables, such as correlations — plot_effect_heatmap","text":"data data frame x y variables effect x, y column names data x y variables effect column name effect, e.g. correlation p optional, column name p-values. provided, points scale p-value drawn top heatmap tiles p_limit numeric, p-values limit plotted points point_size_range numeric vector length 2. upper lower limits point sizes. needs adjusted make point size look good compared tiles log2_effect logical, whether effect plotted logarithmic scale (case fold change etc.) discretize_effect logical, whether effect range divided discrete levels instead using continuous scale. Can sometimes make patterns visible, hard limits can blur big picture well. breaks discretize_effect = TRUE, either number breaks points cut levels, see cut clustering logical, whether order rows columns ordered hierarchical clustering? dist_method distance method used clustering, see dist clust_method clustering method used clustering, see hclust lower_tri logical, lower triangular plotted? reverse_y logical, clustering = FALSE, lower_tri = FALSE, order y-axis reversed diagonal top left bottom right? use_coord_fixed logical, heatmap tiles squares? yes, uses coord_fixed symmetric_aspect_ratio logical, plot panel square? yes, uses ggplot2::theme(aspect.ratio = 1). title, subtitle title subtitle plot fill_scale fill scale heatmap returned ggplot function. Set NA choose appropriate scale based class effect variable.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_effect_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of effects between variables, such as correlations — plot_effect_heatmap","text":"ggplot object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_effect_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heatmap of effects between variables, such as correlations — plot_effect_heatmap","text":"missing effects variables replaced 0 clustering, since hclust deal missing values.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_effect_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of effects between variables, such as correlations — plot_effect_heatmap","text":"","code":"data(example_set) # Compute correlations between variables correlations <- perform_correlation_tests(example_set,   x = rownames(example_set),   duplicates = TRUE ) #> INFO [2025-06-23 22:37:41] Starting correlation tests. #> INFO [2025-06-23 22:37:41] Performing correlation tests for single object #> INFO [2025-06-23 22:37:43] Correlation tests performed.  # Minimal example plot_effect_heatmap(correlations,  x = \"X\", y = \"Y\", effect = \"Correlation_coefficient\")   # Lower triangular with discrete effect and p-value dots plot_effect_heatmap(correlations,   x = \"X\", y = \"Y\", effect = \"Correlation_coefficient\",   p = \"Correlation_P\", point_size_range = c(2, 8),   discretize_effect = TRUE, breaks = 7, lower_tri = TRUE )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_injection_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the magnitude of drift — plot_injection_lm","title":"Estimate the magnitude of drift — plot_injection_lm","text":"Plots histograms p-values linear regression model, feature predicted injection order alone. expected uniform distribution represented dashed red line.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_injection_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the magnitude of drift — plot_injection_lm","text":"","code":"plot_injection_lm(object, all_features = FALSE, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_injection_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the magnitude of drift — plot_injection_lm","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_injection_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the magnitude of drift — plot_injection_lm","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_injection_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the magnitude of drift — plot_injection_lm","text":"","code":"data(example_set) plot_injection_lm(example_set) #> INFO [2025-06-23 22:37:44] Starting linear regression. #> INFO [2025-06-23 22:37:45] Linear regression performed. #> INFO [2025-06-23 22:37:45] Starting linear regression. #> INFO [2025-06-23 22:37:45] Linear regression performed. #> INFO [2025-06-23 22:37:45] Starting linear regression. #> INFO [2025-06-23 22:37:46] Linear regression performed."},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_p_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram of p-values — plot_p_histogram","title":"Histogram of p-values — plot_p_histogram","text":"Draws histograms p-values expected uniform distribution represented dashed red line.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_p_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram of p-values — plot_p_histogram","text":"","code":"plot_p_histogram(p_values, hline = TRUE, combine = TRUE, x_label = \"p-value\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_p_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram of p-values — plot_p_histogram","text":"p_values list data frame, element/column vector p- values. list names used plot titles hline logical, whether horizontal line representing uniform distribution plotted combine logical, whether plots individual p-value vectors combined single object. Set FALSE want add plots list plotting x_label x-axis label","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_p_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram of p-values — plot_p_histogram","text":"combine = TRUE, ggplot object. Otherwise list ggplot objects.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_p_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram of p-values — plot_p_histogram","text":"","code":"data(example_set) lm_sample <- perform_lm(drop_qcs(example_set), \"Feature ~ Injection_order\") #> INFO [2025-06-23 22:37:47] Starting linear regression. #> INFO [2025-06-23 22:37:47] Linear regression performed. p_values <- list(\"Biological samples\" = lm_sample$Injection_order_P) plot_p_histogram(p_values)"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA scatter plot — plot_pca","title":"PCA scatter plot — plot_pca","text":"Computes PCA using one methods provided Bioconductor package pcaMethods plots two first principal components.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA scatter plot — plot_pca","text":"","code":"plot_pca(   object,   pcs = c(1, 2),   all_features = FALSE,   center = TRUE,   scale = \"uv\",   color = NULL,   shape = color,   label = NULL,   density = FALSE,   title = \"PCA\",   subtitle = NULL,   color_scale = NA,   shape_scale = getOption(\"notame.shape_scale\"),   fill_scale = getOption(\"notame.fill_scale_dis\"),   text_base_size = 14,   point_size = 2,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA scatter plot — plot_pca","text":"object  SummarizedExperiment MetaboSet object pcs numeric vector length 2, principal components plot all_features logical, features used? FALSE (default), flagged features removed visualization. center logical, data centered prior PCA? (usually yes) scale scaling used, prep. Default \"uv\" unit variance color character, name column used coloring points. Set NULL black color. shape character, name column used shape. Set NULL uniform round shapes. label character, name column used point labels density logical, whether include density plots axes. density curves split colored 'color' variable. title, subtitle titles plot color_scale color scale returned ggplot function. Set NA choose appropriate scale based class coloring variable. shape_scale shape scale returned ggplot function fill_scale fill scale used density curves. continuous variable used color, density curve colorless. text_base_size numeric, base size text point_size numeric, size points assay.type character, assay used case multiple assays ... additional arguments passed pca","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA scatter plot — plot_pca","text":"ggplot object. density TRUE, plot consist multiple parts harder modify.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA scatter plot — plot_pca","text":"","code":"data(example_set) plot_pca(example_set, color = \"Injection_order\", shape = \"Group\") #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2504 0.05641 #> Cumulative R2 0.2504 0.30681"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA plot with arrows — plot_pca_arrows","title":"PCA plot with arrows — plot_pca_arrows","text":"Plots changes PCA space according time. observations single subject connected arrow ending last observation.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA plot with arrows — plot_pca_arrows","text":"","code":"plot_pca_arrows(   object,   pcs = c(1, 2),   all_features = FALSE,   center = TRUE,   scale = \"uv\",   color,   time,   subject,   alpha = 0.6,   arrow_style = arrow(),   title = \"PCA changes\",   subtitle = NULL,   color_scale = getOption(\"notame.color_scale_dis\"),   text_base_size = 14,   line_width = 0.5,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA plot with arrows — plot_pca_arrows","text":"object  SummarizedExperiment MetaboSet object pcs numeric vector length 2, principal components plot all_features logical, features used? FALSE (default), flagged features removed visualization. center logical, data centered prior PCA? (usually yes) scale scaling used, prep. Default \"uv\" unit variance color character, name column used coloring arrows time character, name column containing timepoints subject character, name column containing subject identifiers alpha numeric, value alpha parameter arrows (transparency) arrow_style description arrow heads, size angle can modified, see ?arrow title, subtitle titles plot color_scale color scale returned ggplot function text_base_size base size text line_width width arrows assay.type character, assay used case multiple assays ... additional arguments passed pca","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_arrows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA plot with arrows — plot_pca_arrows","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_arrows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA plot with arrows — plot_pca_arrows","text":"","code":"data(example_set) plot_pca_arrows(drop_qcs(example_set), color = \"Group\", time = \"Time\",   subject = \"Subject_ID\") #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2293 0.06093 #> Cumulative R2 0.2293 0.29024  # If the sample size is large, plot groups separately plot_pca_arrows(drop_qcs(example_set), color = \"Group\",                  time = \"Time\", subject = \"Subject_ID\") +   facet_wrap(~Group) #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2293 0.06093 #> Cumulative R2 0.2293 0.29024"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_hexbin.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA hexbin plot — plot_pca_hexbin","title":"PCA hexbin plot — plot_pca_hexbin","text":"Computes PCA using one methods provided Bioconductor package pcaMethods plots two first principal components hexagonal bins, value coloring variable summarised bin, default mean values inside bin.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_hexbin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA hexbin plot — plot_pca_hexbin","text":"","code":"plot_pca_hexbin(   object,   pcs = c(1, 2),   all_features = FALSE,   center = TRUE,   scale = \"uv\",   fill = \"Injection_order\",   summary_fun = \"mean\",   bins = 10,   title = \"PCA\",   subtitle = NULL,   fill_scale = getOption(\"notame.fill_scale_con\"),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_hexbin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA hexbin plot — plot_pca_hexbin","text":"object SummarizedExperiment MetaboSet object pcs numeric vector length 2, principal components plot all_features logical, features used? FALSE (default), flagged features removed visualization. center logical, data centered prior PCA? (usually yes) scale scaling used, prep. Default \"uv\" unit variance fill character, name column used coloring hexagons summary_fun function used compute value hexagon bins number bins x y axes title, subtitle titles plot fill_scale fill scale returned ggplot function assay.type character, assay used case multiple assays ... additional arguments passed pca","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_hexbin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA hexbin plot — plot_pca_hexbin","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_hexbin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA hexbin plot — plot_pca_hexbin","text":"","code":"data(example_set) plot_pca_hexbin(example_set) #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2504 0.05641 #> Cumulative R2 0.2504 0.30681 #> Warning: Computation failed in `stat_summary_hex()`. #> Caused by error in `compute_group()`: #> ! The package \"hexbin\" is required for `stat_summary_hex()`."},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_loadings.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA loadings plot — plot_pca_loadings","title":"PCA loadings plot — plot_pca_loadings","text":"Computes PCA using one methods provided Bioconductor package pcaMethods plots loadings first principal components.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_loadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA loadings plot — plot_pca_loadings","text":"","code":"plot_pca_loadings(   object,   pcs = c(1, 2),   all_features = FALSE,   center = TRUE,   scale = \"uv\",   n_features = c(10, 10),   title = \"PCA loadings\",   subtitle = NULL,   text_base_size = 14,   point_size = 2,   label_text_size = 4,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_loadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA loadings plot — plot_pca_loadings","text":"object  SummarizedExperiment MetaboSet object pcs numeric vector length 2, principal components plot all_features logical, features used? FALSE (default), flagged features removed visualization. center logical, data centered prior PCA? (usually yes) scale scaling used, prep. Default \"uv\" unit variance n_features numeric vector length two, number top feature plot principal component title, subtitle titles plot text_base_size numeric, base size text point_size numeric, size points label_text_size numeric, size labels assay.type character, assay used case multiple assays ... additional arguments passed prep","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_loadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA loadings plot — plot_pca_loadings","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_pca_loadings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA loadings plot — plot_pca_loadings","text":"","code":"data(example_set) plot_pca_loadings(example_set, n_features = c(2, 4))"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot quality metrics — plot_quality","title":"Plot quality metrics — plot_quality","text":"Plots distribution quality metric, distribution flags.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot quality metrics — plot_quality","text":"","code":"plot_quality(   object,   all_features = FALSE,   plot_flags = TRUE,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot quality metrics — plot_quality","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. plot_flags logical, distribution flags added barplot? assay.type character, assay used case multiple assays quality metrics present feature data","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot quality metrics — plot_quality","text":"ggplot object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot quality metrics — plot_quality","text":"","code":"data(example_set) plot_quality(example_set) #>  #> Quality metrics not found, computing them now"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_boxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a boxplot for each sample — plot_sample_boxplots","title":"Plot a boxplot for each sample — plot_sample_boxplots","text":"Plots boxplot distribution metabolite values sample. boxplots can ordered filled combination columns pheno data. default, order fill determined combination group time columns.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_boxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a boxplot for each sample — plot_sample_boxplots","text":"","code":"plot_sample_boxplots(   object,   all_features = FALSE,   order_by,   fill_by,   title = \"Boxplot of samples\",   subtitle = NULL,   fill_scale = getOption(\"notame.fill_scale_dis\"),   zoom_boxplot = TRUE,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_boxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a boxplot for each sample — plot_sample_boxplots","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. order_by character vector, names columns used order samples fill_by character vector, names columns used fill boxplots title, subtitle character, title subtitle plot fill_scale scale fill boxplots, returned ggplot function zoom_boxplot logical, whether outliers left outside plot boxplots shown. Defaults TRUE. assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_boxplots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a boxplot for each sample — plot_sample_boxplots","text":"ggplot object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_boxplots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a boxplot for each sample — plot_sample_boxplots","text":"","code":"data(example_set) plot_sample_boxplots(example_set, order_by = \"Group\", fill_by = \"Group\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample heatmap — plot_sample_heatmap","title":"Sample heatmap — plot_sample_heatmap","text":"Draws heatmap distances samples experiment, samples ordered hierarchical clustering.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample heatmap — plot_sample_heatmap","text":"","code":"plot_sample_heatmap(   object,   all_features = FALSE,   dist_method = \"euclidean\",   clust_method = \"ward.D2\",   center = TRUE,   scale = \"uv\",   group_bar = TRUE,   group = NULL,   title = \"Heatmap of distances between samples\",   subtitle = NULL,   fill_scale_con = getOption(\"notame.fill_scale_con\"),   fill_scale_dis = getOption(\"notame.fill_scale_dis\"),   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample heatmap — plot_sample_heatmap","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. dist_method distance method used clustering dist clust_method method used clustering hclust center logical, data centered? scale scaling used, prep. Default \"uv\" unit variance group_bar logical, bar showing groups drawn heat map? group character, name column used coloring group bar title plot title subtitle plot subtitle fill_scale_con Continuous fill scale heatmap returned ggplot function fill_scale_dis Discrete fill scale group bar returned ggplot function assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample heatmap — plot_sample_heatmap","text":"ggplot object. group_bar TRUE, plot consist multiple parts harder modify.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample heatmap — plot_sample_heatmap","text":"","code":"data(example_set) plot_sample_heatmap(example_set, group = \"Group\")"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"t-SNE scatter plot — plot_tsne","title":"t-SNE scatter plot — plot_tsne","text":"Computes t-SNE two dimensions plots map points. case missing values, PCA performed using nipals method pca, method can changed \"ppca\" nipals fails.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"t-SNE scatter plot — plot_tsne","text":"","code":"plot_tsne(   object,   all_features = FALSE,   center = TRUE,   scale = \"uv\",   perplexity = 30,   pca_method = \"nipals\",   color = NULL,   shape = color,   label = NULL,   density = FALSE,   title = \"t-SNE\",   subtitle = paste(\"Perplexity:\", perplexity),   color_scale = NA,   shape_scale = getOption(\"notame.shape_scale\"),   fill_scale = getOption(\"notame.fill_scale_dis\"),   text_base_size = 14,   point_size = 2,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"t-SNE scatter plot — plot_tsne","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. center logical, data centered prior PCA? (usually yes) scale scaling used, prep. Default '\"uv\" unit variance perplexity perplexity used t-SNE pca_method method used PCA missing values color character, name column used coloring points. Set NULL black color. shape character, name column used shape. Set NULL uniform round shapes. label character, name column used point labels density logical, whether include density plots axes. density curves split colored 'color' variable. title, subtitle titles plot color_scale color scale returned ggplot function. Set NA choose appropriate scale based class coloring variable. shape_scale shape scale returned ggplot function fill_scale fill scale used density curves. continuous variable used color, density curve colorless. text_base_size numeric, base size text point_size numeric, size points assay.type character, assay used case multiple assays ... additional arguments passed Rtsne","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"t-SNE scatter plot — plot_tsne","text":"ggplot object. density TRUE, plot consist multiple parts harder modify.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"t-SNE scatter plot — plot_tsne","text":"","code":"data(example_set) plot_tsne(example_set, color = \"Time\", shape = \"Group\", perplexity = 10)"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"t-SNE plot with arrows — plot_tsne_arrows","title":"t-SNE plot with arrows — plot_tsne_arrows","text":"Computes t-SNE two dimensions plots changes according time. observations single subject connected arrow ending last observation. case missing values, PCA performed using nipals method pca, method can changed \"ppca\" nipals fails.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"t-SNE plot with arrows — plot_tsne_arrows","text":"","code":"plot_tsne_arrows(   object,   all_features = FALSE,   center = TRUE,   scale = \"uv\",   perplexity = 30,   pca_method = \"nipals\",   color,   time,   subject,   alpha = 0.6,   arrow_style = arrow(),   title = \"t-SNE changes\",   subtitle = paste(\"Perplexity:\", perplexity),   color_scale = getOption(\"notame.color_scale_dis\"),   text_base_size = 14,   line_width = 0.5,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"t-SNE plot with arrows — plot_tsne_arrows","text":"object SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. center logical, data centered prior PCA? (usually yes) scale scaling used,  prep. Default \"uv\" unit variance perplexity perplexity used t-SNE pca_method method used PCA missing values color character, name column used coloring points time character, name column containing timepoints subject character, name column containing subject identifiers alpha numeric, value alpha parameter arrows (transparency) arrow_style description arrow heads, size angle can modified, see ?arrow title, subtitle titles plot color_scale color scale returned ggplot function text_base_size base size text line_width width arrows assay.type character, assay used case multiple assays ... additional arguments passed Rtsne","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_arrows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"t-SNE plot with arrows — plot_tsne_arrows","text":"ggplot object. density TRUE, plot consist multiple parts harder modify.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_arrows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"t-SNE plot with arrows — plot_tsne_arrows","text":"","code":"data(example_set) plot_tsne_arrows(drop_qcs(example_set), perplexity = 10, color = \"Group\",    time = \"Time\", subject = \"Subject_ID\")  # If the sample size is large, plot groups separately plot_tsne_arrows(drop_qcs(example_set), perplexity = 10, color = \"Group\",    time = \"Time\", subject = \"Subject_ID\") +     facet_wrap(~Group)"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_hexbin.html","id":null,"dir":"Reference","previous_headings":"","what":"t-SNE hexbin plot — plot_tsne_hexbin","title":"t-SNE hexbin plot — plot_tsne_hexbin","text":"Computes t-SNE two dimensions plots map hexagonal bins, value coloring variable summarised bin, default mean values inside bin. case missing values, PCA performed using nipals method pca, method can changed \"ppca\" nipals fails.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_hexbin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"t-SNE hexbin plot — plot_tsne_hexbin","text":"","code":"plot_tsne_hexbin(   object,   all_features = FALSE,   center = TRUE,   scale = \"uv\",   pca_method = \"nipals\",   perplexity = 30,   fill = \"Injection_order\",   summary_fun = \"mean\",   bins = 10,   title = \"t-SNE\",   subtitle = paste(\"Perplexity:\", perplexity),   fill_scale = getOption(\"notame.fill_scale_con\"),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_hexbin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"t-SNE hexbin plot — plot_tsne_hexbin","text":"object SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. center logical, data centered prior PCA? (usually yes) scale scaling used,  prep. Default \"uv\" unit variance pca_method method used PCA missing values perplexity perplexity used t-SNE fill character, name column used coloring hexagons summary_fun function used compute value hexagon bins number bins x y axes title, subtitle titles plot fill_scale fill scale returned ggplot function assay.type character, assay used case multiple assays ... additional arguments passed Rtsne","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_hexbin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"t-SNE hexbin plot — plot_tsne_hexbin","text":"ggplot object.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/plot_tsne_hexbin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"t-SNE hexbin plot — plot_tsne_hexbin","text":"","code":"data(example_set) plot_tsne_hexbin(example_set, perplexity = 10) #> Warning: Computation failed in `stat_summary_hex()`. #> Caused by error in `compute_group()`: #> ! The package \"hexbin\" is required for `stat_summary_hex()`."},{"path":"https://hanhineva-lab.github.io/notame/reference/pls.html","id":null,"dir":"Reference","previous_headings":"","what":"PLS — pls","title":"PLS — pls","text":"Simple wrappers fitting PLS model using mixOmics package. result can passed many mixOmics functions prediction, performance evaluation etc.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PLS — pls","text":"","code":"mixomics_pls(   object,   y,   ncomp,   plot_scores = TRUE,   all_features = FALSE,   covariates = NULL,   assay.type = NULL,   ... )  mixomics_pls_optimize(   object,   y,   ncomp,   folds = 5,   nrepeat = 50,   plot_scores = TRUE,   all_features = FALSE,   covariates = NULL,   assay.type = NULL,   ... )  mixomics_spls_optimize(   object,   y,   ncomp,   n_features = c(seq_len(10), seq(20, 300, 10)),   folds = 5,   nrepeat = 50,   plot_scores = TRUE,   all_features = FALSE,   covariates = NULL,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/pls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PLS — pls","text":"object  SummarizedExperiment MetaboSet object y character vector, column names grouping variable predict ncomp number X components plot_scores logical, TRUE, scatter plot first two PLS- components x y-axis drawn, colored y-variable. really makes sense y single variable all_features logical, features included model? FALSE, flagged features left covariates character, column names pheno datato use covariates model, addition molecular features assay.type character, assay used case multiple assays ... parameters passed pls spls folds number folds use k-fold cross validation nrepeat number times repeat cross validation. Lower faster testing. n_features number features try component","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PLS — pls","text":"object class \"mixo_pls\" \"mixo_spls\".","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PLS — pls","text":"mixomics_pls simple PLS model set number components features mixomics_pls_optimize Test different numbers components mixomics_spls_optimize sPLS model: Test different numbers components features","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/pls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PLS — pls","text":"","code":"data(example_set) pls_res <- mixomics_pls(example_set, y = \"Injection_order\", ncomp = 3) #> INFO [2025-06-23 22:37:54] Fitting PLS # Cross-validation repeated only 5 times for quick run time  pls_opt <- mixomics_pls_optimize(example_set,    y = \"Injection_order\", ncomp = 3, nrepeat = 5) #> INFO [2025-06-23 22:37:55] Fitting PLS #> INFO [2025-06-23 22:37:55] Evaluating PLS performance #> INFO [2025-06-23 22:37:55] Choosing a PLS model with 1 component(s) based on the minimal MSE #> Take a look at the plot and make sure this is the correct number of components #> INFO [2025-06-23 22:37:55] Fitting PLS spls_opt <- mixomics_spls_optimize(example_set,   y = \"Injection_order\", ncomp = 3,   n_features <- c(1:10, 12, 15, 20), nrepeat = 5 ) #> INFO [2025-06-23 22:37:55] Tuning sPLS #> INFO [2025-06-23 22:37:59] Final model has 1 components with the numbers of features: 20"},{"path":"https://hanhineva-lab.github.io/notame/reference/pls_da.html","id":null,"dir":"Reference","previous_headings":"","what":"PLS-DA — pls_da","title":"PLS-DA — pls_da","text":"simple wrapper fitting PLS-DA model using mixOmics package. object can passed many mixOmics functions prediction, performance evaluation etc. mixomics_plsda simple PLS-DA model set number components features mixomics_plsda_optimize Test different numbers components, choose one minimal balanced error rate mixomics_splsda_optimize Test different numbers components features, choose one minimal balanced error rate","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pls_da.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PLS-DA — pls_da","text":"","code":"mixomics_plsda(   object,   y,   ncomp,   plot_scores = TRUE,   all_features = FALSE,   covariates = NULL,   assay.type = NULL,   ... )  mixomics_plsda_optimize(   object,   y,   ncomp,   folds = 5,   nrepeat = 50,   plot_scores = TRUE,   all_features = FALSE,   covariates = NULL,   assay.type = NULL,   ... )  mixomics_splsda_optimize(   object,   y,   ncomp,   dist,   n_features = c(seq_len(10), seq(20, 300, 10)),   folds = 5,   nrepeat = 50,   plot_scores = TRUE,   all_features = FALSE,   covariates = NULL,   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/pls_da.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PLS-DA — pls_da","text":"object SummarizedExperiment MetaboSet object y character, column name grouping variable predict ncomp number X components plot_scores logical, TRUE, scatter plot first two PLS- components x y-axis drawn, prediction surface ellipses all_features logical, features included model? FALSE, flagged features left covariates character, column names pheno data use covariates model, addition molecular features assay.type character, assay used case multiple assays ... parameters passed plsda folds number folds use k-fold cross validation nrepeat number times repeat cross validation. Lower faster testing. dist distance metric use, one \"max.dist\", \"mahalanobis.dist\", \"centroids.dist\". use mixomics_plsda_optimize find best distance metric n_features number features try component","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pls_da.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PLS-DA — pls_da","text":"object class \"mixo_plsda\".","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/pls_da.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PLS-DA — pls_da","text":"","code":"data(example_set) noqc <- drop_qcs(example_set) plsda_res <- mixomics_plsda(noqc, y = \"Group\", ncomp = 2) #> INFO [2025-06-23 22:38:00] Fitting PLS-DA # Cross-validation repeated only 5 times for quick run time  set.seed(38) plsda_opt <- mixomics_plsda_optimize(noqc,    y = \"Group\", ncomp = 3, nrepeat = 5 ) #> INFO [2025-06-23 22:38:06] Fitting PLS-DA #> INFO [2025-06-23 22:38:06] Evaluating PLS-DA performance #> INFO [2025-06-23 22:38:08] Choosing a PLS-DA model with 1 components using centroids.dist #> INFO [2025-06-23 22:38:08] Fitting PLS-DA set.seed(38) splsda_opt <- mixomics_splsda_optimize(noqc,   y = \"Group\", dist = \"max.dist\", ncomp = 2,   n_features <- c(1:10, 12, 15, 20), nrepeat = 5 ) #> INFO [2025-06-23 22:38:08] Tuning sPLS-DA #> INFO [2025-06-23 22:38:11] Final model has 1 components with the numbers of features: 1"},{"path":"https://hanhineva-lab.github.io/notame/reference/pqn_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilistic quotient normalization — pqn_normalization","title":"Probabilistic quotient normalization — pqn_normalization","text":"Apply probabilistic quotient normalization (PQN) peak table SummarizedExperiment MetaboSet object. default, reference calculated high-quality QC samples median reference used normalization. Check parameters options.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pqn_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilistic quotient normalization — pqn_normalization","text":"","code":"pqn_normalization(   object,   ref = c(\"qc\", \"all\"),   method = c(\"median\", \"mean\"),   all_features = FALSE,   assay.type = NULL,   name = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/pqn_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilistic quotient normalization — pqn_normalization","text":"object  SummarizedExperiment MetaboSet object ref character, type reference samples use normalization. method character, method use calculating reference sample. all_features logical, features used calculating reference sample? assay.type character, assay used case multiple assays name character, name resultant assay case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pqn_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilistic quotient normalization — pqn_normalization","text":"SummarizedExperiment MetaboSet object altered feature abundances.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/pqn_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilistic quotient normalization — pqn_normalization","text":"","code":"data(example_set) pqn_set <- pqn_normalization(example_set) #> INFO [2025-06-23 22:38:11] Starting PQN normalization #> INFO [2025-06-23 22:38:11] Using median of qc samples as reference spectrum"},{"path":"https://hanhineva-lab.github.io/notame/reference/quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract quality information of features — quality","title":"Extract quality information of features — quality","text":"Extract quality information features","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract quality information of features — quality","text":"","code":"quality(object)"},{"path":"https://hanhineva-lab.github.io/notame/reference/quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract quality information of features — quality","text":"object  SummarizedExperiment MetaboSet object","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract quality information of features — quality","text":"data frame quality metrics feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract quality information of features — quality","text":"","code":"data(example_set) ex_set <- assess_quality(example_set) quality(ex_set) #>                                          Feature_ID        RSD      RSD_r #> HILIC_neg_259_9623a4_4322 HILIC_neg_259_9623a4_4322 0.12707508 0.15646529 #> HILIC_neg_108_1065a2_6121 HILIC_neg_108_1065a2_6121 0.46894349 0.37534706 #> HILIC_neg_158_23a1_4128     HILIC_neg_158_23a1_4128 0.56891078 0.18862347 #> HILIC_neg_251_0056a0_6161 HILIC_neg_251_0056a0_6161 0.36623078 0.38358448 #> HILIC_neg_401_52a4_211       HILIC_neg_401_52a4_211 0.15347768 0.22295233 #> HILIC_neg_400_7045a5_3842 HILIC_neg_400_7045a5_3842 0.22354434 0.28101448 #> HILIC_neg_304_014a7_1311   HILIC_neg_304_014a7_1311 0.57129653 0.22659424 #> HILIC_neg_276_6328a2_7734 HILIC_neg_276_6328a2_7734 0.47701070 0.33847090 #> HILIC_neg_118_9111a4_1865 HILIC_neg_118_9111a4_1865 0.12694380 0.07872284 #> HILIC_neg_446_9413a2_315   HILIC_neg_446_9413a2_315 0.39007260 0.41720232 #> HILIC_neg_127_5856a4_3758 HILIC_neg_127_5856a4_3758 0.15803472 0.16985602 #> HILIC_neg_303_2144a1_2372 HILIC_neg_303_2144a1_2372 0.36473881 0.10129443 #> HILIC_neg_366_6203a6_1825 HILIC_neg_366_6203a6_1825 0.23664221 0.24485178 #> HILIC_neg_258_7252a7_5445 HILIC_neg_258_7252a7_5445 0.22308889 0.34398624 #> HILIC_neg_301_2643a4_0372 HILIC_neg_301_2643a4_0372 0.39815312 0.17591485 #> HILIC_neg_224_4031a4_7409 HILIC_neg_224_4031a4_7409 0.10369981 0.13523049 #> HILIC_neg_424_8488a6_7736 HILIC_neg_424_8488a6_7736 0.56137374 0.64767955 #> HILIC_neg_131_2034a6_1385 HILIC_neg_131_2034a6_1385 0.38079023 0.17914419 #> HILIC_neg_236_4114a5_6302 HILIC_neg_236_4114a5_6302 0.67222725 0.38889485 #> HILIC_neg_411_0148a0_7484 HILIC_neg_411_0148a0_7484 0.34206668 0.41674428 #> HILIC_pos_288_6263a6_572   HILIC_pos_288_6263a6_572 0.67387760 1.04392635 #> HILIC_pos_331_1173a7_7822 HILIC_pos_331_1173a7_7822 0.42958384 0.59173482 #> HILIC_pos_139_4044a6_0388 HILIC_pos_139_4044a6_0388 0.19680632 0.13725389 #> HILIC_pos_132_7373a6_4146 HILIC_pos_132_7373a6_4146 0.42846248 0.35045397 #> HILIC_pos_298_6144a3_839   HILIC_pos_298_6144a3_839 0.60918534 0.67991858 #> HILIC_pos_410_9203a2_7329 HILIC_pos_410_9203a2_7329 0.60188460 0.40106253 #> HILIC_pos_145_8514a2_811   HILIC_pos_145_8514a2_811 0.20192013 0.13429388 #> HILIC_pos_306_0061a4_4049 HILIC_pos_306_0061a4_4049 0.39791341 0.24814963 #> HILIC_pos_425_8858a4_4494 HILIC_pos_425_8858a4_4494 0.91027313 0.82072873 #> HILIC_pos_436_332a6_1165   HILIC_pos_436_332a6_1165 0.64341531 0.87412556 #> HILIC_pos_255_0094a7_9288 HILIC_pos_255_0094a7_9288 0.53749665 0.12571686 #> HILIC_pos_417_1474a2_8239 HILIC_pos_417_1474a2_8239 0.32687211 0.37713115 #> HILIC_pos_297_8334a0_6647 HILIC_pos_297_8334a0_6647 0.33858534 0.44586218 #> HILIC_pos_449_2162a0_7574 HILIC_pos_449_2162a0_7574 0.89262281 0.76320619 #> HILIC_pos_197_7438a7_72     HILIC_pos_197_7438a7_72 0.42229714 0.11396462 #> HILIC_pos_141_601a7_387     HILIC_pos_141_601a7_387 0.57063424 0.21084416 #> HILIC_pos_448_1172a6_8567 HILIC_pos_448_1172a6_8567 0.57191397 0.75817627 #> HILIC_pos_346_6405a3_2719 HILIC_pos_346_6405a3_2719 0.19908471 0.19513155 #> HILIC_pos_334_3285a1_7395 HILIC_pos_334_3285a1_7395 0.95066218 1.48260000 #> HILIC_pos_215_5364a2_6707 HILIC_pos_215_5364a2_6707 0.25768581 0.26613536 #> RP_neg_458_0877a1_5798       RP_neg_458_0877a1_5798 0.51511667 0.39412937 #> RP_neg_365_8511a5_6086       RP_neg_365_8511a5_6086 0.13196683 0.11884625 #> RP_neg_369_5116a6_4389       RP_neg_369_5116a6_4389 0.50213387 0.29575289 #> RP_neg_222_4828a6_0392       RP_neg_222_4828a6_0392 0.39380837 0.17785692 #> RP_neg_114_84a3_0917           RP_neg_114_84a3_0917 0.59615537 0.45940622 #> RP_neg_317_554a3_063           RP_neg_317_554a3_063 0.40852428 0.34505883 #> RP_neg_419_897a3_9617         RP_neg_419_897a3_9617 0.38998830 0.19334017 #> RP_neg_493_3039a6_7816       RP_neg_493_3039a6_7816 0.23048595 0.18941765 #> RP_neg_359_0517a7_3652       RP_neg_359_0517a7_3652 0.42106549 0.28993814 #> RP_neg_435_8009a6_2215       RP_neg_435_8009a6_2215 0.41988962 0.36783165 #> RP_neg_358_2061a5_2818       RP_neg_358_2061a5_2818 0.55415671 0.47604648 #> RP_neg_397_2502a3_7998       RP_neg_397_2502a3_7998 0.39847317 0.26118593 #> RP_neg_165_9294a3_4261       RP_neg_165_9294a3_4261 0.15710763 0.18322488 #> RP_neg_413_1764a3_6741       RP_neg_413_1764a3_6741 0.43055303 0.37796827 #> RP_neg_115_4062a7_7329       RP_neg_115_4062a7_7329 0.21272908 0.20287325 #> RP_neg_300_1295a1_6959       RP_neg_300_1295a1_6959 0.45191473 0.34392691 #> RP_neg_177_6084a5_2913       RP_neg_177_6084a5_2913 0.53619006 0.72638211 #> RP_neg_134_1196a2_9606       RP_neg_134_1196a2_9606 0.70256608 1.21612235 #> RP_neg_139_4456a4_1251       RP_neg_139_4456a4_1251 0.36687539 0.08365634 #> RP_neg_385_6867a4_136         RP_neg_385_6867a4_136 0.50375370 0.50453857 #> RP_pos_490_9235a4_0176       RP_pos_490_9235a4_0176 0.72463716 0.93660528 #> RP_pos_383_4976a2_6503       RP_pos_383_4976a2_6503 0.19925793 0.21384528 #> RP_pos_344_9911a1_9656       RP_pos_344_9911a1_9656 0.26031934 0.32975456 #> RP_pos_117_7095a4_0945       RP_pos_117_7095a4_0945 0.42498465 0.33605494 #> RP_pos_294_9596a6_7569       RP_pos_294_9596a6_7569 0.51579843 0.62631285 #> RP_pos_460_4815a0_8843       RP_pos_460_4815a0_8843 0.37387163 0.17138729 #> RP_pos_272_3545a3_5592       RP_pos_272_3545a3_5592 0.41427454 0.27305364 #> RP_pos_409_2445a2_4149       RP_pos_409_2445a2_4149 0.16879375 0.21111468 #> RP_pos_245_9925a3_6251       RP_pos_245_9925a3_6251 0.35358939 0.37944231 #> RP_pos_369_1069a1_6271       RP_pos_369_1069a1_6271 0.39260062 0.53603444 #> RP_pos_174_0715a4_3465       RP_pos_174_0715a4_3465 0.09646719 0.12329417 #> RP_pos_324_6195a4_7743       RP_pos_324_6195a4_7743 0.29174280 0.41363495 #> RP_pos_149_432a4_1341         RP_pos_149_432a4_1341 0.29034224 0.21532790 #> RP_pos_461_5891a7_1505       RP_pos_461_5891a7_1505 0.31217302 0.38504079 #> RP_pos_458_263a4_3477         RP_pos_458_263a4_3477 0.56914974 0.59631492 #> RP_pos_226_7218a3_1371       RP_pos_226_7218a3_1371 0.41925767 0.29868966 #> RP_pos_280_3779a4_0424       RP_pos_280_3779a4_0424 0.12602572 0.17391494 #> RP_pos_447_3232a2_2393       RP_pos_447_3232a2_2393 0.72925673 0.94840162 #> RP_pos_453_282a5_128           RP_pos_453_282a5_128 0.66342430 1.13371781 #> RP_pos_153_9636a7_9986       RP_pos_153_9636a7_9986 0.57056405 0.18389058 #>                             D_ratio D_ratio_r #> HILIC_neg_259_9623a4_4322 0.3630223 0.4752706 #> HILIC_neg_108_1065a2_6121 1.2029517 1.2234263 #> HILIC_neg_158_23a1_4128   1.0192375 0.5091718 #> HILIC_neg_251_0056a0_6161 0.8753266 1.0896262 #> HILIC_neg_401_52a4_211    0.4198898 0.7102902 #> HILIC_neg_400_7045a5_3842 0.6777461 1.4058192 #> HILIC_neg_304_014a7_1311  1.0182677 0.5567760 #> HILIC_neg_276_6328a2_7734 1.1877664 0.7969991 #> HILIC_neg_118_9111a4_1865 0.3082888 0.3192879 #> HILIC_neg_446_9413a2_315  0.7091183 0.5989086 #> HILIC_neg_127_5856a4_3758 0.4770885 0.6458792 #> HILIC_neg_303_2144a1_2372 0.8781714 0.3358644 #> HILIC_neg_366_6203a6_1825 0.6513263 0.6762228 #> HILIC_neg_258_7252a7_5445 0.5639172 1.0462808 #> HILIC_neg_301_2643a4_0372 1.0183228 0.6470639 #> HILIC_neg_224_4031a4_7409 0.2546548 0.4726859 #> HILIC_neg_424_8488a6_7736 1.1798674 1.0309769 #> HILIC_neg_131_2034a6_1385 0.9339485 0.5905929 #> HILIC_neg_236_4114a5_6302 1.0414499 0.5519452 #> HILIC_neg_411_0148a0_7484 0.7626770 0.7938857 #> HILIC_pos_288_6263a6_572  0.9653119 0.8608316 #> HILIC_pos_331_1173a7_7822 0.9726070 1.2571288 #> HILIC_pos_139_4044a6_0388 0.6043078 0.4983795 #> HILIC_pos_132_7373a6_4146 1.1625074 1.2522508 #> HILIC_pos_298_6144a3_839  1.1612640 2.1392856 #> HILIC_pos_410_9203a2_7329 1.6445420 1.2988009 #> HILIC_pos_145_8514a2_811  0.5557161 0.4224754 #> HILIC_pos_306_0061a4_4049 1.1720521 0.8476907 #> HILIC_pos_425_8858a4_4494 0.9197445 0.4776995 #> HILIC_pos_436_332a6_1165  1.0020054 0.9748927 #> HILIC_pos_255_0094a7_9288 1.2006149 0.4008777 #> HILIC_pos_417_1474a2_8239 0.9740816 1.0145135 #> HILIC_pos_297_8334a0_6647 0.8001488 1.1183432 #> HILIC_pos_449_2162a0_7574 3.2167406 3.6318544 #> HILIC_pos_197_7438a7_72   1.0191488 0.3594500 #> HILIC_pos_141_601a7_387   1.0276931 0.5660193 #> HILIC_pos_448_1172a6_8567 1.0552679 0.9829172 #> HILIC_pos_346_6405a3_2719 0.5072603 0.5677751 #> HILIC_pos_334_3285a1_7395 1.1393471 0.8248397 #> HILIC_pos_215_5364a2_6707 0.6619884 0.5843188 #> RP_neg_458_0877a1_5798    1.1559081 1.1226069 #> RP_neg_365_8511a5_6086    0.3741224 0.4553934 #> RP_neg_369_5116a6_4389    1.0656272 0.5253161 #> RP_neg_222_4828a6_0392    0.8526282 0.4632986 #> RP_neg_114_84a3_0917      1.2407857 1.3779200 #> RP_neg_317_554a3_063      1.1369980 1.1986431 #> RP_neg_419_897a3_9617     1.0694334 0.6622514 #> RP_neg_493_3039a6_7816    0.5061049 0.3603547 #> RP_neg_359_0517a7_3652    0.8197663 0.7723246 #> RP_neg_435_8009a6_2215    1.1537033 1.1440327 #> RP_neg_358_2061a5_2818    1.0708697 0.9891952 #> RP_neg_397_2502a3_7998    1.0977768 0.9379080 #> RP_neg_165_9294a3_4261    0.3941084 0.6175005 #> RP_neg_413_1764a3_6741    0.8849816 0.8870331 #> RP_neg_115_4062a7_7329    0.8285821 0.9840375 #> RP_neg_300_1295a1_6959    1.1100580 1.1955456 #> RP_neg_177_6084a5_2913    0.9992095 0.9939263 #> RP_neg_134_1196a2_9606    1.2180729 1.9630173 #> RP_neg_139_4456a4_1251    0.7364994 0.2003024 #> RP_neg_385_6867a4_136     1.3562726 1.5716203 #> RP_pos_490_9235a4_0176    1.1252248 0.8016981 #> RP_pos_383_4976a2_6503    0.4631904 0.6695989 #> RP_pos_344_9911a1_9656    0.7832216 0.9713117 #> RP_pos_117_7095a4_0945    1.0362239 0.8993951 #> RP_pos_294_9596a6_7569    0.9911231 1.0643144 #> RP_pos_460_4815a0_8843    1.0013768 0.4468314 #> RP_pos_272_3545a3_5592    1.0894427 1.0767764 #> RP_pos_409_2445a2_4149    0.4900429 0.6451052 #> RP_pos_245_9925a3_6251    0.7010870 0.7917018 #> RP_pos_369_1069a1_6271    0.9449390 1.2330565 #> RP_pos_174_0715a4_3465    0.2885651 0.4318497 #> RP_pos_324_6195a4_7743    0.5754641 0.7587660 #> RP_pos_149_432a4_1341     0.6021706 0.4032853 #> RP_pos_461_5891a7_1505    0.7870675 1.1175361 #> RP_pos_458_263a4_3477     1.1429598 1.1488426 #> RP_pos_226_7218a3_1371    0.9868424 1.0691755 #> RP_pos_280_3779a4_0424    0.2530656 0.3707874 #> RP_pos_447_3232a2_2393    1.1069458 1.2070680 #> RP_pos_453_282a5_128      1.4650567 2.2289907 #> RP_pos_153_9636a7_9986    1.0755973 0.4391429"},{"path":"https://hanhineva-lab.github.io/notame/reference/read_from_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Read formatted Excel files — read_from_excel","title":"Read formatted Excel files — read_from_excel","text":"Reads data Excel file following format: Left side sheet contains information features, size features x feature info columns Top part contains sample information, size sample info variables x samples middle contains actual abundances, size features x samples function separates three parts file, returns list.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/read_from_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read formatted Excel files — read_from_excel","text":"","code":"read_from_excel(   file,   sheet = 1,   id_column = NULL,   corner_row = NULL,   corner_column = NULL,   id_prefix = \"ID_\",   split_by = NULL,   name = NULL,   mz_limits = c(10, 2000),   rt_limits = c(0, 20),   skip_checks = FALSE )"},{"path":"https://hanhineva-lab.github.io/notame/reference/read_from_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read formatted Excel files — read_from_excel","text":"file path Excel file sheet sheet number name id_column character, column name unique identification samples corner_row integer, bottom row sample information, usually contains data file names feature info column names. set NULL, detected automatically. corner_column integer character, corresponding column number column name (letter) Excel. set NULL, detected automatically. id_prefix character, prefix autogenerated sample IDs, see Details split_by character vector, case modes Excel file, column names feature data used separate modes (usually Mode Column) name case Excel file contains one mode, name mode, \"Hilic_neg\" mz_limits numeric vector two, m/z values rt_limits numeric vector two, retention time values skip_checks logical: skip checking fixing data integrity. recommended, sometimes useful just want read data fix errors later. data integrity checks important functioning notame.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/read_from_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read formatted Excel files — read_from_excel","text":"list three data frames: exprs: actual abundances, size features x samples pheno_data: sample information, size sample info variables x samples feature_data: information features, size features x feature info columns","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/read_from_excel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read formatted Excel files — read_from_excel","text":"skip_checks = FALSE, read_from_excel attempts modify data per fix_object checks data. skip_checks = TRUE, parameters fix_object ignored.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/read_from_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read formatted Excel files — read_from_excel","text":"","code":"data <- read_from_excel(   file = system.file(\"extdata\", \"example_set.xlsx\",    package = \"notame\"), sheet = 1, corner_row = 11, corner_column = \"H\",   split_by = c(\"Column\", \"Ion_mode\")) #> INFO [2025-06-23 22:38:12] Corner detected correctly at row 11, column H #> INFO [2025-06-23 22:38:12]  #> Extracting sample information from rows 1 to 11 and columns I to BF #> INFO [2025-06-23 22:38:12] Replacing spaces in sample information column names with underscores (_) #> INFO [2025-06-23 22:38:12] Naming the last column of sample information \"Datafile\" #> INFO [2025-06-23 22:38:12]  #> Extracting feature information from rows 12 to 91 and columns A to H #> INFO [2025-06-23 22:38:12]  #> Extracting feature abundances from rows 12 to 91 and columns I to BF #> INFO [2025-06-23 22:38:12] Pheno data was cleaned #> INFO [2025-06-23 22:38:12] Feature data was cleaned #> INFO [2025-06-23 22:38:12]  #> Checking sample information #> INFO [2025-06-23 22:38:12] Checking 'Injection_order' column in feature data #> INFO [2025-06-23 22:38:12] Checking 'Sample_ID' column in pheno data #> INFO [2025-06-23 22:38:12] Checking 'QC' column in feature data #> INFO [2025-06-23 22:38:12] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:38:12]  #> Checking feature information #> INFO [2025-06-23 22:38:12] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:38:12] Checking that m/z and retention time values are reasonable. #> INFO [2025-06-23 22:38:12] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:38:12] Identified m/z column Average_Mz and retention time column Average_Rt_min #> INFO [2025-06-23 22:38:12] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:38:12] Checking that feature data includes a 'Flag' column  modes <- construct_metabosets(exprs = data$exprs,    pheno_data = data$pheno_data, feature_data = data$feature_data,   group_col = \"Group\") #> INFO [2025-06-23 22:38:12]  #> Checking feature information #> INFO [2025-06-23 22:38:12] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:38:12] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:38:12] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:38:12] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:38:12] Setting row and column names of exprs based on feature and pheno data"},{"path":"https://hanhineva-lab.github.io/notame/reference/ruvs_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Unwanted Variation (RUV) between batches — ruvs_qc","title":"Remove Unwanted Variation (RUV) between batches — ruvs_qc","text":"interface link[RUVSeq]{RUVs} method","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/ruvs_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Unwanted Variation (RUV) between batches — ruvs_qc","text":"","code":"ruvs_qc(object, replicates, k = 3, assay.type = NULL, name = NULL, ...)"},{"path":"https://hanhineva-lab.github.io/notame/reference/ruvs_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Unwanted Variation (RUV) between batches — ruvs_qc","text":"object  SummarizedExperiment MetaboSet object replicates list numeric vectors, indexes replicates k number factors unwanted variation estimated data. assay.type character, assay used case multiple assays name character, name resultant assay case multiple assays ... parameters passed link[RUVSeq]{RUVs}","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/ruvs_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Unwanted Variation (RUV) between batches — ruvs_qc","text":"SummarizedExperiment Metaboset object normalized data.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/ruvs_qc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Unwanted Variation (RUV) between batches — ruvs_qc","text":"","code":"data(example_set) # Batch correction replicates <- list(which(example_set$QC == \"QC\")) batch_corrected <- ruvs_qc(example_set, replicates = replicates) # Evaluate batch correction pca_bhattacharyya_dist(example_set, batch = \"Batch\") #>          [,1]     [,2] #> [1,]       NA 11.28682 #> [2,] 11.28682       NA pca_bhattacharyya_dist(batch_corrected, batch = \"Batch\") #> Warning: Variance is below eps for 1 variables. Not scaling them. #>          [,1]     [,2] #> [1,]       NA 1.516404 #> [2,] 1.516404       NA"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_batch_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Save batch correction plots — save_batch_plots","title":"Save batch correction plots — save_batch_plots","text":"Saves plots feature showing effect batch correction. Plots show QC samples regular samples inside batch, plus batch mean biological samples QC samples horizontal line. dashed line represents QC mean, filled line represents biological sample mean. NOTE: change shape variable, sure set shape scale well, default scale 2 values, can accomodate 2 shapes.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_batch_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save batch correction plots — save_batch_plots","text":"","code":"save_batch_plots(   orig,   corrected,   file,   width = 14,   height = 10,   batch = \"Batch\",   color = \"Batch\",   shape = \"QC\",   color_scale = getOption(\"notame.color_scale_dis\"),   shape_scale = scale_shape_manual(values = c(15, 21)),   assay.type1 = NULL,   assay.type2 = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_batch_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save batch correction plots — save_batch_plots","text":"orig, corrected SummarizedExperiment MetaboSet objects batch effect correction file path PDF file plots saved width, height width height plots inches batch, color, shape column names pheno data batch labels, column used coloring shaping points (default batch QC) color_scale, shape_scale scales color scale returned ggplot functions. assay.type1 character, assay orig used case multiple assays. assay.type2 character, assay corrected used case multiple assays. corrected supplied, argument selects another assay orig.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_batch_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save batch correction plots — save_batch_plots","text":"None, function invoked plot-saving side effect.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_batch_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save batch correction plots — save_batch_plots","text":"","code":"data(example_set) # Batch correction replicates <- list(which(example_set$QC == \"QC\")) batch_corrected <- ruvs_qc(example_set, replicates = replicates) # Plots of each feature save_batch_plots(   orig = example_set[1:10], corrected = batch_corrected[1:10],   file = \"batch_plots.pdf\" ) #> agg_record_1847801227  #>                     2"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_beeswarm_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Save beeswarm plots of each feature by group — save_beeswarm_plots","title":"Save beeswarm plots of each feature by group — save_beeswarm_plots","text":"Draws beeswarm plot feature abundances group. separate plot drawn saved feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_beeswarm_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save beeswarm plots of each feature by group — save_beeswarm_plots","text":"","code":"save_beeswarm_plots(   object,   all_features = FALSE,   save = TRUE,   file_path = NULL,   format = \"emf\",   x,   add_boxplots = FALSE,   title = \"Feature_ID\",   subtitle = NULL,   color,   color_scale = getOption(\"notame.color_scale_dis\"),   text_base_size = 14,   cex = 2,   size = 2,   title_line_length = 40,   theme = theme_bw(base_size = text_base_size),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_beeswarm_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save beeswarm plots of each feature by group — save_beeswarm_plots","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. save logical, false, plots saved returned list file_path character, file path PDF prefix added file paths formats format character, format plots saved x character, name column used x-axis add_boxplots logical, boxplots added figure? title, subtitle column names feature data use plot title/filename subtitle. Set NULL title/subtitle, creates running numbered filenames color character, name column used coloring color_scale color scale returned ggplot function text_base_size integer, base size text figures cex numeric, scaling adjusting point spacing size numeric, size points title_line_length integer, maximum length title line characters, passed str_wrap theme ggplot theme added plot assay.type character, assay used case multiple assays ... arguments graphic device functions, like width height","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_beeswarm_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save beeswarm plots of each feature by group — save_beeswarm_plots","text":"default, function invoked plot-saving side effect. function returns list plots save = FALSE.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/save_beeswarm_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save beeswarm plots of each feature by group — save_beeswarm_plots","text":"","code":"data(example_set) # Default beeswarms by group save_beeswarm_plots(drop_qcs(example_set)[1:10],   file_path = \"./beeswarm_plots.pdf\",   format = \"pdf\", x = \"Group\", color = \"Group\" ) #> INFO [2025-06-23 22:38:17] Saved beeswarm plots to: ./beeswarm_plots.pdf # x and color can be a different variable save_beeswarm_plots(drop_qcs(example_set)[1:10],   file_path = \"./beeswarm_plots/\",   format = \"png\",   x = \"Time\",   color = \"Group\" ) #> INFO [2025-06-23 22:38:17] Saved to: ./beeswarm_plots/HILIC_neg_259_9623a4_4322.png #> INFO [2025-06-23 22:38:17] Saved to: ./beeswarm_plots/HILIC_neg_108_1065a2_6121.png #> INFO [2025-06-23 22:38:17] Saved to: ./beeswarm_plots/HILIC_neg_158_23a1_4128.png #> INFO [2025-06-23 22:38:18] Saved to: ./beeswarm_plots/HILIC_neg_251_0056a0_6161.png #> INFO [2025-06-23 22:38:18] Saved to: ./beeswarm_plots/HILIC_neg_401_52a4_211.png #> INFO [2025-06-23 22:38:18] Saved to: ./beeswarm_plots/HILIC_neg_400_7045a5_3842.png #> INFO [2025-06-23 22:38:18] Saved to: ./beeswarm_plots/HILIC_neg_304_014a7_1311.png #> INFO [2025-06-23 22:38:18] Saved to: ./beeswarm_plots/HILIC_neg_276_6328a2_7734.png #> INFO [2025-06-23 22:38:18] Saved to: ./beeswarm_plots/HILIC_neg_118_9111a4_1865.png #> INFO [2025-06-23 22:38:18] Saved to: ./beeswarm_plots/HILIC_neg_446_9413a2_315.png #> INFO [2025-06-23 22:38:18] Saved beeswarm plots to: ./beeswarm_plots/  # Plot one feature save_beeswarm_plots(drop_qcs(example_set)[1, ], save = FALSE, x = \"Group\",  color = \"Group\") #> Just a remainder, creating a long list of plots takes a lot of memory! #> [[1]]  #>"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_boxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Save box plots of each feature by group — save_group_boxplots","title":"Save box plots of each feature by group — save_group_boxplots","text":"Draws boxplot feature abundances group. separate plot drawn saved feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_boxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save box plots of each feature by group — save_group_boxplots","text":"","code":"save_group_boxplots(   object,   all_features = FALSE,   save = TRUE,   file_path = NULL,   format = \"emf\",   x,   color,   title = \"Feature_ID\",   subtitle = NULL,   color_scale = getOption(\"notame.color_scale_dis\"),   text_base_size = 14,   box_width = 0.8,   line_width = 0.5,   point_size = 3,   title_line_length = 40,   theme = theme_bw(base_size = text_base_size),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_boxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save box plots of each feature by group — save_group_boxplots","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. save logical, false, plots saved returned list file_path character, file path PDF prefix added file paths formats format character, format plots saved x character, name column used x-axis color character, name column used coloring title, subtitle column names feature data use plot title/filename subtitle. Set NULL title/subtitle, creates running numbered filenames color_scale color scale returned ggplot function text_base_size integer, base size text figures box_width numeric, width boxes line_width numeric, width lines point_size numeric, size mean points title_line_length integer, maximum length title line characters, passed str_wrap theme ggplot theme added plot assay.type character, assay used case multiple assays ... arguments graphic device functions, like width height","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_boxplots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save box plots of each feature by group — save_group_boxplots","text":"default, function invoked plot-saving side effect. function returns list plots save = FALSE.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_boxplots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save box plots of each feature by group — save_group_boxplots","text":"","code":"data(example_set) # Default boxplots by group save_group_boxplots(drop_qcs(example_set)[1:10],   file_path = \"./group_boxplots.pdf\",   format = \"pdf\", x = \"Group\", color = \"Group\" ) #> INFO [2025-06-23 22:38:20] Saved group boxplots to: ./group_boxplots.pdf # x and color can be a different variable save_group_boxplots(drop_qcs(example_set)[1:10],   file_path = \"./time_boxplots/\",   format = \"emf\",   x = \"Time\",   color = \"Group\" ) #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:20] Saved to: ./time_boxplots/HILIC_neg_259_9623a4_4322.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:21] Saved to: ./time_boxplots/HILIC_neg_108_1065a2_6121.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:21] Saved to: ./time_boxplots/HILIC_neg_158_23a1_4128.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:21] Saved to: ./time_boxplots/HILIC_neg_251_0056a0_6161.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:21] Saved to: ./time_boxplots/HILIC_neg_401_52a4_211.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:21] Saved to: ./time_boxplots/HILIC_neg_400_7045a5_3842.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:21] Saved to: ./time_boxplots/HILIC_neg_304_014a7_1311.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:22] Saved to: ./time_boxplots/HILIC_neg_276_6328a2_7734.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:22] Saved to: ./time_boxplots/HILIC_neg_118_9111a4_1865.emf #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> Warning: devEMF: your system substituted font family 'Nimbus Sans' when you requested 'Helvetica' #> INFO [2025-06-23 22:38:22] Saved to: ./time_boxplots/HILIC_neg_446_9413a2_315.emf #> INFO [2025-06-23 22:38:22] Saved group boxplots to: ./time_boxplots/ # Plot one feature save_group_boxplots(drop_qcs(example_set)[1, ], save = FALSE, x = \"Group\",                      color = \"Group\") #> Just a remainder, creating a long list of plots takes a lot of memory! #> [[1]]  #>"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_lineplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Save line plots with errorbars by group — save_group_lineplots","title":"Save line plots with errorbars by group — save_group_lineplots","text":"Plots change feature abundances function e.g. time. line drawn group error bars added. separate plot drawn feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_lineplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save line plots with errorbars by group — save_group_lineplots","text":"","code":"save_group_lineplots(   object,   all_features = FALSE,   save = TRUE,   file_path = NULL,   format = \"emf\",   x,   group,   title = \"Feature_ID\",   subtitle = NULL,   fun.data = \"mean_cl_boot\",   fun = NULL,   fun.min = NULL,   fun.max = NULL,   position_dodge_amount = 0.2,   color_scale = getOption(\"notame.color_scale_dis\"),   text_base_size = 14,   line_width = 0.5,   point_size = 4,   title_line_length = 40,   theme = theme_bw(base_size = text_base_size),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_lineplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save line plots with errorbars by group — save_group_lineplots","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization save logical, false, plots saved returned list file_path character, file path PDF prefix added file paths formats format character, format plots saved x character, name column used x-axis group character, name column containing group information, used coloring title, subtitle column names feature data use plot title/filename subtitle. Set NULL title/subtitle, creates running numbered filenames fun.data passed stat_summary used errorbars, \"function given complete data return data frame variables ymin, y, ymax.\" fun.min, fun, fun.max Alternative fun.data, passed stat_summary, \"supply three individual functions passed vector x's return single number\" position_dodge_amount numeric: much group mean points dodge away color_scale color scale returned ggplot function text_base_size integer, base size text figures line_width numeric, width lines point_size numeric, size points title_line_length integer, maximum length title line characters, passed str_wrap theme ggplot theme added plot assay.type character, assay used case multiple assays ... arguments graphic device functions, like width height","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_lineplots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save line plots with errorbars by group — save_group_lineplots","text":"default, function invoked plot-saving side effect. function returns list plots save = FALSE.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/save_group_lineplots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save line plots with errorbars by group — save_group_lineplots","text":"","code":"data(example_set) save_group_lineplots(drop_qcs(example_set)[1:10],   file_path = \"./group_line_plots.pdf\",   format = \"pdf\", x = \"Time\", group = \"Group\" ) #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:24] Saved line plots with mean line to: ./group_line_plots.pdf save_group_lineplots(drop_qcs(example_set)[1:10],   file_path = \"./group_line_plots/\",   format = \"png\", x = \"Time\", group = \"Group\" ) #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:24] Saved to: ./group_line_plots/HILIC_neg_259_9623a4_4322.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:24] Saved to: ./group_line_plots/HILIC_neg_108_1065a2_6121.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:25] Saved to: ./group_line_plots/HILIC_neg_158_23a1_4128.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:25] Saved to: ./group_line_plots/HILIC_neg_251_0056a0_6161.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:25] Saved to: ./group_line_plots/HILIC_neg_401_52a4_211.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:25] Saved to: ./group_line_plots/HILIC_neg_400_7045a5_3842.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:25] Saved to: ./group_line_plots/HILIC_neg_304_014a7_1311.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:25] Saved to: ./group_line_plots/HILIC_neg_276_6328a2_7734.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:26] Saved to: ./group_line_plots/HILIC_neg_118_9111a4_1865.png #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> INFO [2025-06-23 22:38:26] Saved to: ./group_line_plots/HILIC_neg_446_9413a2_315.png #> INFO [2025-06-23 22:38:26] Saved line plots with mean line to: ./group_line_plots/ # Plot one feature save_group_lineplots(drop_qcs(example_set[1, ]), save = FALSE, x = \"Time\",   group = \"Group\") #> Just a remainder, creating a long list of plots takes a lot of memory! #> [[1]] #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required. #> Warning: Computation failed in `stat_summary()`. #> Caused by error in `fun.data()`: #> ! The package \"Hmisc\" is required.  #>"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save plot to chosen format — save_plot","title":"Save plot to chosen format — save_plot","text":"Saves given plot file. Supports pdf, svg, emf, png tiff formats. error occurs plot, empty file created.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save plot to chosen format — save_plot","text":"","code":"save_plot(p, file, ...)"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save plot to chosen format — save_plot","text":"p ggplot object file file path ... arguments plot function, like width height","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save plot to chosen format — save_plot","text":"None, function invoked plot-saving side effect.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save plot to chosen format — save_plot","text":"","code":"data(example_set) lm_results <- perform_lm(drop_qcs(example_set),    formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:38:27] Starting linear regression. #> INFO [2025-06-23 22:38:27] Linear regression performed.  p <- volcano_plot(lm_results,   x = \"GroupB_Estimate\",   p = \"GroupB_P\", p_fdr = \"GroupB_P_FDR\",   label = \"Feature_ID\",   fdr_limit = 0.1 ) #> Warning: None of the FDR-adjusted p-values are below the significance level, not plotting the horizontal line.  save_plot(p, file = \"test.pdf\") #> INFO [2025-06-23 22:38:28] Saved to: test.pdf"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_scatter_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Save scatter plots of each feature against a set variable — save_scatter_plots","title":"Save scatter plots of each feature against a set variable — save_scatter_plots","text":"Draws scatterplots feature y-axis another variable x-axis. separate plot drawn saved feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_scatter_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save scatter plots of each feature against a set variable — save_scatter_plots","text":"","code":"save_scatter_plots(   object,   x = \"Injection_order\",   save = TRUE,   file_path = NULL,   format = \"emf\",   all_features = FALSE,   color = NULL,   color_scale = NA,   shape = NULL,   title = \"Feature_ID\",   subtitle = NULL,   shape_scale = getOption(\"notame.shape_scale\"),   text_base_size = 14,   point_size = 2,   title_line_length = 40,   theme = theme_bw(base_size = text_base_size),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_scatter_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save scatter plots of each feature against a set variable — save_scatter_plots","text":"object  SummarizedExperiment MetaboSet object x character, name column used x-axis save logical, false, plots saved returned list file_path character, file path PDF prefix added file paths formats format character, format plots saved all_features logical, features used? FALSE (default), flagged features removed visualization. color character, name column used coloring color_scale color scale returned ggplot function. Set NA choose appropriate scale based class coloring variable. shape character, name column used shape title, subtitle column names feature data use plot title/filename subtitle. Set NULL title/subtitle, creates running numbered filenames shape_scale shape scale returned ggplot function text_base_size integer, base size text figures point_size numeric, size points title_line_length integer, maximum length title line characters, passed str_wrap theme ggplot theme added plot assay.type character, assay used case multiple assays ... arguments graphic device functions, like width height","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_scatter_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save scatter plots of each feature against a set variable — save_scatter_plots","text":"default, function invoked plot-saving side effect. function returns list plots save = FALSE.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/save_scatter_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save scatter plots of each feature against a set variable — save_scatter_plots","text":"","code":"data(example_set) # Against injection order, colored by group save_scatter_plots(   object = example_set[1:10],   x = \"Injection_order\",   color = \"Group\",   file_path = \"./scatter_plots.pdf\",   format = \"pdf\" ) #> INFO [2025-06-23 22:38:29] Saved scatter plots to: ./scatter_plots.pdf # Plot one feature save_scatter_plots(example_set[1, ], save = FALSE) #> Just a remainder, creating a long list of plots takes a lot of memory! #> [[1]]  #>"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_subject_line_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Save line plots with mean — save_subject_line_plots","title":"Save line plots with mean — save_subject_line_plots","text":"Plots change feature abundances function e.g. time. line drawn subject mean line added. separate plot drawn saved feature.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_subject_line_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save line plots with mean — save_subject_line_plots","text":"","code":"save_subject_line_plots(   object,   all_features = FALSE,   save = TRUE,   file_path = NULL,   format = \"emf\",   x,   id,   title = \"Feature_ID\",   subtitle = NULL,   color = NULL,   color_scale = getOption(\"notame.color_scale_dis\"),   facet = NULL,   text_base_size = 14,   line_width = 0.3,   mean_line_width = 1.2,   title_line_length = 40,   theme = theme_bw(base_size = text_base_size),   assay.type = NULL,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/save_subject_line_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save line plots with mean — save_subject_line_plots","text":"object  SummarizedExperiment MetaboSet object all_features logical, features used? FALSE (default), flagged features removed visualization. save logical, false, plots saved returned list file_path character, file path PDF prefix added file paths formats format character, format plots saved x character, name column used x-axis id character, name column containing subject IDs title, subtitle column names feature data use plot title/filename subtitle. Set NULL title/subtitle, creates running numbered filenames color character, column name color lines (optional) color_scale color scale returned ggplot function facet character, column name facet (optional, usually color) text_base_size integer, base size text figures line_width numeric, width lines mean_line_width numeric, width mean line title_line_length integer, maximum length title line characters, passed str_wrap theme ggplot theme added plot assay.type character, assay used case multiple assays ... arguments graphic device functions, like width height","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/save_subject_line_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save line plots with mean — save_subject_line_plots","text":"default, function invoked plot-saving side effect. function returns list plots save = FALSE.","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/save_subject_line_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save line plots with mean — save_subject_line_plots","text":"","code":"data(example_set) save_subject_line_plots(drop_qcs(example_set)[1:10], x = \"Time\",    id = \"Subject_ID\", file_path = \"./subject_line_plots.pdf\",   format = \"emf\", title = NULL) #> Switching to PDF format based on file path #> INFO [2025-06-23 22:38:31] Saved line plots with mean line to: ./subject_line_plots.pdf  # Plot one feature save_subject_line_plots(drop_qcs(example_set[1, ]), save = FALSE, x = \"Time\",   id = \"Subject_ID\") #> Just a remainder, creating a long list of plots takes a lot of memory! #> [[1]]  #>"},{"path":"https://hanhineva-lab.github.io/notame/reference/scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale peak table — scale","title":"Scale peak table — scale","text":"Applies base R function scale transposed peak table. See scale details.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale peak table — scale","text":"","code":"# S4 method for class 'MetaboSet' scale(x, center = TRUE, scale = TRUE)  # S4 method for class 'SummarizedExperiment' scale(x, center = TRUE, scale = TRUE)"},{"path":"https://hanhineva-lab.github.io/notame/reference/scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale peak table — scale","text":"x  SummarizedExperiment MetaboSet object center, scale base scale function","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale peak table — scale","text":"SummarizedExperiment MetaboSet object modified peak table.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale peak table — scale","text":"","code":"scaled_set <- scale(example_set)"},{"path":"https://hanhineva-lab.github.io/notame/reference/subject_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set the name of special column for subject identifiers — subject_col","title":"Get and set the name of special column for subject identifiers — subject_col","text":"Get set name special column subject identifiers","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/subject_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set the name of special column for subject identifiers — subject_col","text":"","code":"subject_col(object)  subject_col(object) <- value"},{"path":"https://hanhineva-lab.github.io/notame/reference/subject_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set the name of special column for subject identifiers — subject_col","text":"object MetaboSet object value string, name column designated holding subject identifiers","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/subject_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set the name of special column for subject identifiers — subject_col","text":"Character, name subject variable. endomorphism, object subject variable set specified variable.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/subject_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set the name of special column for subject identifiers — subject_col","text":"","code":"data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:38:31]  #> Checking feature information #> INFO [2025-06-23 22:38:31] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:38:31] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:38:31] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:38:31] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:38:31] Setting row and column names of exprs based on feature and pheno data # Get name of subject variable subject_col(ex_set) #> [1] NA data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:38:31]  #> Checking feature information #> INFO [2025-06-23 22:38:31] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:38:31] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:38:31] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:38:31] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:38:31] Setting row and column names of exprs based on feature and pheno data # Set subject variable subject_col(ex_set) <- \"Subject_ID\""},{"path":"https://hanhineva-lab.github.io/notame/reference/summarize_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistics cleaning — summarize_results","title":"Statistics cleaning — summarize_results","text":"Uses regexp remove unnecessary columns statistics results data frame. Can also rename columns effectively.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/summarize_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistics cleaning — summarize_results","text":"","code":"summarize_results(   df,   remove = c(\"Intercept\", \"CI95\", \"Std_error\", \"t_value\", \"z_value\", \"R2\"),   rename = NULL,   summary = TRUE,   p_limit = 0.05,   fdr = TRUE )"},{"path":"https://hanhineva-lab.github.io/notame/reference/summarize_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistics cleaning — summarize_results","text":"df data frame, statistics results remove list, contain strings matching unwanted columns rename named list, names contain matches replaced values summary logical, summary columns added p_limit numeric, limit p-values counted fdr logical, summary done fdr-fixed values","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/summarize_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistics cleaning — summarize_results","text":"data frame removed /renamed columns.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/summarize_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistics cleaning — summarize_results","text":"","code":"data(example_set) # Simple manipulation to linear model results lm_results <- perform_lm(drop_qcs(example_set),    formula_char = \"Feature ~ Group + Time\") #> INFO [2025-06-23 22:38:31] Starting linear regression. #> INFO [2025-06-23 22:38:32] Linear regression performed. lm_results <-summarize_results(lm_results,   rename = c(\"GroupB\" = \"GroupB_vs_A\", \"Time2\" = \"Time2_vs_1\") )"},{"path":"https://hanhineva-lab.github.io/notame/reference/summary_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics — summary_statistics","title":"Summary statistics — summary_statistics","text":"Computes summary statistics feature, possibly grouped factor. statistics include mean, standard deviation (sd), median, median absolute deviation (mad), minimum (min), maximum (max) well 25","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/summary_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics — summary_statistics","text":"","code":"summary_statistics(object, grouping_cols = NULL, assay.type = NULL)"},{"path":"https://hanhineva-lab.github.io/notame/reference/summary_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics — summary_statistics","text":"object  SummarizedExperiment MetaboSet object grouping_cols character vector, columns grouping done. Use NA compute statistics without grouping. assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/summary_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics — summary_statistics","text":"data frame summary statistics.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/summary_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary statistics — summary_statistics","text":"","code":"data(example_set) # Group by \"Group\" sum_stats <- summary_statistics(example_set, grouping_cols = \"Group\") # Group by Group and Time sum_stats <- summary_statistics(example_set,    grouping_cols = c(\"Group\", \"Time\")) # No Grouping sum_stats <- summary_statistics(example_set)"},{"path":"https://hanhineva-lab.github.io/notame/reference/time_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set the name of the special column for time points — time_col","title":"Get and set the name of the special column for time points — time_col","text":"Get set name special column time points","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/time_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set the name of the special column for time points — time_col","text":"","code":"time_col(object)  time_col(object) <- value"},{"path":"https://hanhineva-lab.github.io/notame/reference/time_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set the name of the special column for time points — time_col","text":"object MetaboSet object value string, name column designated holding time points","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/time_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set the name of the special column for time points — time_col","text":"Character, name time variable. endomorphism, object time variable set specified variable.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/time_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set the name of the special column for time points — time_col","text":"","code":"data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:38:34]  #> Checking feature information #> INFO [2025-06-23 22:38:34] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:38:34] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:38:34] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:38:34] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:38:34] Setting row and column names of exprs based on feature and pheno data # Get name of time variable time_col(ex_set) #> [1] NA  data(example_set) ex_set <- as(example_set, \"MetaboSet\") #> INFO [2025-06-23 22:38:34]  #> Checking feature information #> INFO [2025-06-23 22:38:34] Checking that feature IDs are unique and not storedas numbers #> INFO [2025-06-23 22:38:34] Checking that feature data includes a 'Split' column #> INFO [2025-06-23 22:38:34] Checking that feature data includes a 'Flag' column #> INFO [2025-06-23 22:38:34] Checking that feature abundances only contain numeric values #> INFO [2025-06-23 22:38:34] Setting row and column names of exprs based on feature and pheno data # Set time variable time_col(ex_set) <- \"Time\""},{"path":"https://hanhineva-lab.github.io/notame/reference/visualizations.html","id":null,"dir":"Reference","previous_headings":"","what":"Write all relevant preprocessing visualizations to pdf — visualizations","title":"Write all relevant preprocessing visualizations to pdf — visualizations","text":"wrapper around major visualization functions, used visualizing data major steps data preprocessing. Saves visualizations PDFs set prefix filenames.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/visualizations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write all relevant preprocessing visualizations to pdf — visualizations","text":"","code":"visualizations(   object,   prefix,   format = \"pdf\",   perplexity = 30,   merge = FALSE,   remove_singles = FALSE,   group = NULL,   time = NULL,   id = NULL,   color = NULL,   assay.type = NULL )"},{"path":"https://hanhineva-lab.github.io/notame/reference/visualizations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write all relevant preprocessing visualizations to pdf — visualizations","text":"object  SummarizedExperiment MetaboSet object prefix character, file path prefix added file paths format character, format plots saved, support raster formats perplexity perplexity t-SNE plots merge logical, whether files merged single PDF, see Details remove_singles logical, whether remove single plot files merging. used merge = TRUE group character, name pheno data column containing group labels time character, name pheno data column containing timepoints id character, name pheno data column containing subject identifiers color character, name pheno data column used coloring sample labels dendrograms assay.type character, assay used case multiple assays","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/visualizations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write all relevant preprocessing visualizations to pdf — visualizations","text":"None, function invoked plot-saving side effect.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/visualizations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write all relevant preprocessing visualizations to pdf — visualizations","text":"merge TRUE format pdf, file containing visualizations named prefix.pdf created. NOTE: Windows requires installation pdftk (https://www.pdflabs.com/tools/pdftk--pdf-toolkit/) Linux need pdfunite installed. MacOS, external software needed. Note least Windows, prefix path root, underlying system command find files. type visualizations saved depends type object. comprehensive list visualizations: Distribution quality metrics flags plot_quality Boxplots sample injection order plot_sample_boxplots PCA scores plot samples colored injection order plot_pca t-SNE plot samples colored injection order plot_tsne object 60 samples, hexbin versions PCA t- SNE plots plot_pca_hexbin, plot_tsne_hexbin Dendrogram samples ordered hierarchical clustering, sample labels colored group present plot_dendrogram heat map intersample distances, ordered hierarchical clustering plot_sample_heatmap object QC samples: Density function intersample distances QCs biological samples plot_dist_density Histograms p-values linear regression features injection order QCs biological samples plot_p_histogram object group column: PCA tSNE plots points shaped colored group plot_pca, plot_tsne object time column: PCA tSNE plots points shaped colored time 'plot_pca, plot_tsne Dendrogram samples ordered hierarchical clustering, sample labels colored time point plot_dendrogram object group column time column: Boxplots samples ordered colored group /time plot_sample_boxplots object group column time column: PCA tSNE plots points shaped group colored time plot_pca, plot_tsne object time column subject column: PCA tSNE plots arrows connecting samples subject time point order plot_pca_arrows, plot_tsne_arrows","code":""},{"path":[]},{"path":"https://hanhineva-lab.github.io/notame/reference/visualizations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write all relevant preprocessing visualizations to pdf — visualizations","text":"","code":"data(example_set) visualizations(example_set, prefix=\"figures/example_set\", perplexity=5,                group = \"Group\", color = \"Group\", time = \"Time\",                 id = \"Subject_ID\") #> INFO [2025-06-23 22:38:34] Saved to: figures/example_set_density_plot.pdf #> INFO [2025-06-23 22:38:34] Starting linear regression. #> INFO [2025-06-23 22:38:35] Linear regression performed. #> INFO [2025-06-23 22:38:35] Starting linear regression. #> INFO [2025-06-23 22:38:36] Linear regression performed. #> INFO [2025-06-23 22:38:36] Starting linear regression. #> INFO [2025-06-23 22:38:36] Linear regression performed. #> INFO [2025-06-23 22:38:37] Saved to: figures/example_set_lm_p_histograms.pdf #>  #> Quality metrics not found, computing them now #> INFO [2025-06-23 22:38:37] Saved to: figures/example_set_quality_metrics.pdf #> INFO [2025-06-23 22:38:38] Saved to: figures/example_set_boxplots_injection.pdf #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2504 0.05641 #> Cumulative R2 0.2504 0.30681 #> INFO [2025-06-23 22:38:38] Saved to: figures/example_set_PCA_injection.pdf #> INFO [2025-06-23 22:38:38] Saved to: figures/example_set_tSNE_injection.pdf #> INFO [2025-06-23 22:38:38] Saved to: figures/example_set_dendrogram.pdf #> INFO [2025-06-23 22:38:39] Saved to: figures/example_set_heatmap_samples.pdf #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2504 0.05641 #> Cumulative R2 0.2504 0.30681 #> INFO [2025-06-23 22:38:39] Saved to: figures/example_set_PCA_group.pdf #> INFO [2025-06-23 22:38:39] Saved to: figures/example_set_tSNE_group.pdf #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2504 0.05641 #> Cumulative R2 0.2504 0.30681 #> INFO [2025-06-23 22:38:39] Saved to: figures/example_set_PCA_time.pdf #> INFO [2025-06-23 22:38:39] Saved to: figures/example_set_tSNE_time.pdf #> INFO [2025-06-23 22:38:39] Saved to: figures/example_set_dendrogram_time.pdf #> INFO [2025-06-23 22:38:40] Saved to: figures/example_set_boxplots_group.pdf #> svd calculated PCA #> Importance of component(s): #>                  PC1     PC2 #> R2            0.2504 0.05641 #> Cumulative R2 0.2504 0.30681 #> INFO [2025-06-23 22:38:40] Saved to: figures/example_set_PCA_group_time.pdf #> INFO [2025-06-23 22:38:40] Saved to: figures/example_set_tSNE_group_time.pdf"},{"path":"https://hanhineva-lab.github.io/notame/reference/volcano_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot — volcano_plot","title":"Volcano plot — volcano_plot","text":"Draws volcano plot effect size p-values.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/volcano_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot — volcano_plot","text":"","code":"volcano_plot(   object,   x,   p,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   log2_x = FALSE,   center_x_axis = TRUE,   x_lim = NULL,   label = NULL,   label_limit = 0.05,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Volcano plot\",   subtitle = NULL,   text_base_size = 14,   label_text_size = 4,   ... )  # S4 method for class 'MetaboSet' volcano_plot(   object,   x,   p,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   log2_x = FALSE,   center_x_axis = TRUE,   x_lim = NULL,   label = NULL,   label_limit = 0.05,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Volcano plot\",   subtitle = NULL,   text_base_size = 14,   label_text_size = 4,   ... )  # S4 method for class 'data.frame' volcano_plot(   object,   x,   p,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   log2_x = FALSE,   center_x_axis = TRUE,   x_lim = NULL,   label = NULL,   label_limit = 0.05,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Volcano plot\",   subtitle = NULL,   text_base_size = 14,   label_text_size = 4,   ... )  # S4 method for class 'SummarizedExperiment' volcano_plot(   object,   x,   p,   p_fdr = NULL,   color = NULL,   p_breaks = c(0.05, 0.01, 0.001, 1e-04),   fdr_limit = 0.05,   log2_x = FALSE,   center_x_axis = TRUE,   x_lim = NULL,   label = NULL,   label_limit = 0.05,   color_scale = getOption(\"notame.color_scale_con\"),   title = \"Volcano plot\",   subtitle = NULL,   text_base_size = 14,   label_text_size = 4,   ... )"},{"path":"https://hanhineva-lab.github.io/notame/reference/volcano_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot — volcano_plot","text":"object  SummarizedExperiment , MetaboSet object data frame. Feature data used. x data frame, used . x, p column names effect size (x-axis) p-values p_fdr column name FDR corrected p-values, used draw line showing fdr-corrected significance level color column name used color plots p_breaks numerical vector p_values show y-axis fdr_limit significance level used experiment log2_x logical, whether effect size plotted log2 axis. center_x_axis logical, whether x-axis centered. TRUE, \"zero-effect\" middle plot. \"zero effect\" 0 log2_x = FALSE 1 log2_x = TRUE x_lim numerical vector length 2 manually setting x-axis limits label column name used label plots label_limit numeric, p-value used limit label plotting. Defaults 0.05. color_scale color scale returned ggplot function title, subtitle title subtitle plot text_base_size integer, base size text figures label_text_size numeric, size labels ... parameters passed geom_point, shape alpha values. New aesthetics can also passed using mapping = aes(...).","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/volcano_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano plot — volcano_plot","text":"ggplot object.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/volcano_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano plot — volcano_plot","text":"","code":"data(example_set) # naturally, this looks messy as there are not enough p-values lm_results <- perform_lm(drop_qcs(example_set),    formula_char = \"Feature ~ Group\") #> INFO [2025-06-23 22:38:41] Starting linear regression. #> INFO [2025-06-23 22:38:41] Linear regression performed. volcano_plot(lm_results,   x = \"GroupB_Estimate\",   p = \"GroupB_P\", p_fdr = \"GroupB_P_FDR\",   label = \"Feature_ID\",   fdr_limit = 0.1 ) #> Warning: None of the FDR-adjusted p-values are below the significance level, not plotting the horizontal line."},{"path":"https://hanhineva-lab.github.io/notame/reference/write_to_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Write results to Excel file — write_to_excel","title":"Write results to Excel file — write_to_excel","text":"Writes data SummarizedExperiment MetaboSet object Excel spreadsheet. format similar one used read data , except fact EVERYTHING NEEDS WRITTEN TEXT. fix numeric values Excel, choose cell number, press Ctrl + , go dropdown menu upper left corner choose \"Convert Number\". fix file, can take quite .","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/write_to_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write results to Excel file — write_to_excel","text":"","code":"write_to_excel(object, file, ...)"},{"path":"https://hanhineva-lab.github.io/notame/reference/write_to_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write results to Excel file — write_to_excel","text":"object  SummarizedExperiment MetaboSet object file path file write ... Additional parameters passed write.xlsx","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/write_to_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write results to Excel file — write_to_excel","text":"None, function invoked side effect.","code":""},{"path":"https://hanhineva-lab.github.io/notame/reference/write_to_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write results to Excel file — write_to_excel","text":"","code":"data(example_set) write_to_excel(example_set, file = \"example_set.xlsx\") #> INFO [2025-06-23 22:38:42] Moved RP_pos_Datafile column to last to get meaningful column names for abundances"}]
